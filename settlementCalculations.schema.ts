import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Fiscal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Campo2 {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Campo3 {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class InitEmployeeDate {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: Fiscal })
  fiscal: Fiscal;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: Campo2 })
  campo2: Campo2;

  @Prop({ type: Campo3 })
  campo3: Campo3;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class StartSettlementDate {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfYear {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ChristmasBonus {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class BonusDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class StartSettlementDateF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfYearF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ChristmasBonusF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class BonusDaysF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BonusDaysCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class BonusDaysFCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfThisYear {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class HasCustomDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ChristmasBonus_settlement {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: StartSettlementDate })
  startSettlementDate: StartSettlementDate;

  @Prop({ type: DaysOfYear })
  daysOfYear: DaysOfYear;

  @Prop({ type: ChristmasBonus })
  christmasBonus: ChristmasBonus;

  @Prop({ type: BonusDays })
  bonusDays: BonusDays;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: StartSettlementDateF })
  startSettlementDateF: StartSettlementDateF;

  @Prop({ type: DaysOfYearF })
  daysOfYearF: DaysOfYearF;

  @Prop({ type: ChristmasBonusF })
  christmasBonusF: ChristmasBonusF;

  @Prop({ type: BonusDaysF })
  bonusDaysF: BonusDaysF;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: BonusDaysCalc })
  bonusDaysCalc: BonusDaysCalc;

  @Prop({ type: BonusDaysFCalc })
  bonusDaysFCalc: BonusDaysFCalc;

  @Prop({ type: DaysOfThisYear })
  daysOfThisYear: DaysOfThisYear;

  @Prop({ type: HasCustomDays })
  hasCustomDays: HasCustomDays;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;
}

@Schema()
export class Data {
  @Prop()
  christmasBonus_settlement: number;

  @Prop()
  holidays_settlement: number;

  @Prop()
  holidaysPrime_settlement: number;

  @Prop()
  fiscalAdjusment: number;

  @Prop()
  compensation: number;

  @Prop()
  P653C_IM: number;

  @Prop()
  P033C_IM: number;

  @Prop()
  P008C_DI: number;

  @Prop()
  pendingVacations: number;

  @Prop()
  pendingPrime: number;

  @Prop()
  P654C_DI: number;

  @Prop()
  P801C_IM: number;

  @Prop()
  seniorityPrime: number;

  @Prop()
  compensationByYearAmmount: number;

  @Prop()
  compensation2: number;

  @Prop()
  vacations: number;

  @Prop()
  P022C_DI: number;

  @Prop()
  P023C_HR: number;

  @Prop()
  compensationAmmount: number;

  @Prop()
  P009C_DI: number;

  @Prop()
  P070C_IM: number;

  @Prop()
  seniorityPrimeAmmount: number;

  @Prop()
  P1505IM: number;

  @Prop()
  incapacitySubsidy: number;

  @Prop()
  P6176_IM: number;

  @Prop()
  P6177_IM: number;

  @Prop()
  P1315_IM: number;

  @Prop()
  gratification: number;

  @Prop()
  P2275_IM: number;

  @Prop()
  P081C_IM: number;

  @Prop()
  foodCompensation: number;

  @Prop()
  P667C_IM: number;

  @Prop()
  P1356_IM: number;

  @Prop()
  compensationByYearAmmountP: number;

  @Prop()
  P818C_AU: number;

  @Prop()
  P819C_AU: number;

  @Prop()
  voucher: number;

  @Prop()
  P021C_DI: number;

  @Prop()
  P858C_IM: number;

  @Prop()
  P813C_IM: number;

  @Prop()
  P023C_IM: number;

  @Prop()
  workerTaxes: number;

  @Prop()
  P854C_IM: number;

  @Prop()
  P1260_IM: number;

  @Prop()
  P1347IM: number;

  @Prop()
  P855C_IM: number;

  @Prop()
  P856C_IM: number;

  @Prop()
  P865C_IM: number;

  @Prop()
  P008C_HR: number;

  @Prop()
  P022C_HR: number;

  @Prop()
  P872C_IM: number;

  @Prop()
  P027C_IM: number;

  @Prop()
  P026C_IM: number;

  @Prop()
  P433_IM: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class WSalary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Perceptions {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: WSalary })
  wSalary: WSalary;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Data {
  @Prop()
  christmasBonus_settlement: number;

  @Prop()
  holidays_settlement: number;

  @Prop()
  holidaysPrime_settlement: number;

  @Prop()
  subsidy: number;

  @Prop()
  isr: number;

  @Prop()
  compensation: number;

  @Prop()
  P653C_IM: number;

  @Prop()
  P033C_IM: number;

  @Prop()
  P008C_DI: number;

  @Prop()
  P654C_DI: number;

  @Prop()
  P801C_IM: number;

  @Prop()
  seniorityPrime: number;

  @Prop()
  compensationByYearAmmount: number;

  @Prop()
  compensation2: number;

  @Prop()
  vacations: number;

  @Prop()
  P022C_DI: number;

  @Prop()
  pendingVacations: number;

  @Prop()
  P023C_HR: number;

  @Prop()
  compensationAmmount: number;

  @Prop()
  P009C_DI: number;

  @Prop()
  pendingPrime: number;

  @Prop()
  P070C_IM: number;

  @Prop()
  seniorityPrimeAmmount: number;

  @Prop()
  P6176_IM: number;

  @Prop()
  P6177_IM: number;

  @Prop()
  P1315_IM: number;

  @Prop()
  P1505IM: number;

  @Prop()
  P2275_IM: number;

  @Prop()
  gratification: number;

  @Prop()
  P081C_IM: number;

  @Prop()
  foodCompensation: number;

  @Prop()
  P1356_IM: number;

  @Prop()
  compensationByYearAmmountP: number;

  @Prop()
  P667C_IM: number;

  @Prop()
  P818C_AU: number;

  @Prop()
  P819C_AU: number;

  @Prop()
  voucher: number;

  @Prop()
  P813C_IM: number;

  @Prop()
  P855C_IM: number;

  @Prop()
  P856C_IM: number;

  @Prop()
  P865C_IM: number;

  @Prop()
  P008C_HR: number;

  @Prop()
  P022C_HR: number;

  @Prop()
  P872C_IM: number;

  @Prop()
  P858C_IM: number;

  @Prop()
  P027C_IM: number;

  @Prop()
  P026C_IM: number;

  @Prop()
  P433_IM: number;

  @Prop()
  incapacitySubsidy: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class WSalary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class WSalaryNoF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalPerceptions {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: WSalary })
  wSalary: WSalary;

  @Prop({ type: WSalaryNoF })
  wSalaryNoF: WSalaryNoF;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Data {
  @Prop()
  christmasBonus_settlement: number;

  @Prop()
  holidays_settlement: number;

  @Prop()
  holidaysPrime_settlement: number;

  @Prop()
  dismissPayments: number;

  @Prop()
  overtime: number;

  @Prop()
  fiscalSalary: number;

  @Prop()
  P653C_IM: number;

  @Prop()
  P033C_IM: number;

  @Prop()
  P654C_DI: number;

  @Prop()
  P801C_IM: number;

  @Prop()
  compensation2: number;

  @Prop()
  vacations: number;

  @Prop()
  P022C_DI: number;

  @Prop()
  pendingVacations: number;

  @Prop()
  pendingPrime: number;

  @Prop()
  P070C_IM: number;

  @Prop()
  P6176_IM: number;

  @Prop()
  P6177_IM: number;

  @Prop()
  P1315_IM: number;

  @Prop()
  P1505IM: number;

  @Prop()
  P2275_IM: number;

  @Prop()
  P081C_IM: number;

  @Prop()
  foodCompensation: number;

  @Prop()
  P009C_DI: number;

  @Prop()
  P1356_IM: number;

  @Prop()
  compensationByYearAmmountP: number;

  @Prop()
  P667C_IM: number;

  @Prop()
  P818C_AU: number;

  @Prop()
  P819C_AU: number;

  @Prop()
  voucher: number;

  @Prop()
  P813C_IM: number;

  @Prop()
  P023C_HR: number;

  @Prop()
  P855C_IM: number;

  @Prop()
  P856C_IM: number;

  @Prop()
  P865C_IM: number;

  @Prop()
  P022C_HR: number;

  @Prop()
  P872C_IM: number;

  @Prop()
  P858C_IM: number;

  @Prop()
  P027C_IM: number;

  @Prop()
  P026C_IM: number;

  @Prop()
  P433_IM: number;

  @Prop()
  incapacitySubsidy: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LastMonthlyBase {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class MonthlyBase {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ForCalculation {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TableType {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LastGravableBaseFromLastCalculation {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LastMonthlyBaseExtraordinary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class MonthlyBaseExtraordinary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ForCalculation4 {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ForCalculation3 {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class GravableBase {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: LastMonthlyBase })
  lastMonthlyBase: LastMonthlyBase;

  @Prop({ type: MonthlyBase })
  monthlyBase: MonthlyBase;

  @Prop({ type: ForCalculation })
  forCalculation: ForCalculation;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: TableType })
  tableType: TableType;

  @Prop({ type: LastGravableBaseFromLastCalculation })
  lastGravableBaseFromLastCalculation: LastGravableBaseFromLastCalculation;

  @Prop({ type: LastMonthlyBaseExtraordinary })
  lastMonthlyBaseExtraordinary: LastMonthlyBaseExtraordinary;

  @Prop({ type: MonthlyBaseExtraordinary })
  monthlyBaseExtraordinary: MonthlyBaseExtraordinary;

  @Prop({ type: ForCalculation4 })
  forCalculation4: ForCalculation4;

  @Prop({ type: ForCalculation3 })
  forCalculation3: ForCalculation3;
}

@Schema()
export class Data {
  @Prop()
  christmasBonus_settlement: number;

  @Prop()
  holidays_settlement: number;

  @Prop()
  holidaysPrime_settlement: number;

  @Prop()
  compensation: number;

  @Prop()
  fiscalSalary: number;

  @Prop()
  P653C_IM: number;

  @Prop()
  P033C_IM: number;

  @Prop()
  P008C_DI: number;

  @Prop()
  P654C_DI: number;

  @Prop()
  P801C_IM: number;

  @Prop()
  seniorityPrime: number;

  @Prop()
  compensationByYearAmmount: number;

  @Prop()
  compensation2: number;

  @Prop()
  vacations: number;

  @Prop()
  P022C_DI: number;

  @Prop()
  pendingVacations: number;

  @Prop()
  P023C_HR: number;

  @Prop()
  compensationAmmount: number;

  @Prop()
  P009C_DI: number;

  @Prop()
  pendingPrime: number;

  @Prop()
  P070C_IM: number;

  @Prop()
  seniorityPrimeAmmount: number;

  @Prop()
  P6176_IM: number;

  @Prop()
  P6177_IM: number;

  @Prop()
  P1315_IM: number;

  @Prop()
  P1505IM: number;

  @Prop()
  P2275_IM: number;

  @Prop()
  gratification: number;

  @Prop()
  P081C_IM: number;

  @Prop()
  foodCompensation: number;

  @Prop()
  P1356_IM: number;

  @Prop()
  compensationByYearAmmountP: number;

  @Prop()
  P667C_IM: number;

  @Prop()
  P818C_AU: number;

  @Prop()
  P819C_AU: number;

  @Prop()
  voucher: number;

  @Prop()
  P813C_IM: number;

  @Prop()
  P855C_IM: number;

  @Prop()
  P856C_IM: number;

  @Prop()
  P865C_IM: number;

  @Prop()
  P008C_HR: number;

  @Prop()
  P022C_HR: number;

  @Prop()
  P872C_IM: number;

  @Prop()
  P858C_IM: number;

  @Prop()
  P027C_IM: number;

  @Prop()
  P026C_IM: number;

  @Prop()
  P433_IM: number;

  @Prop()
  incapacitySubsidy: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnBase {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class EnjoyedVacations {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class InitVacationDate {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForHolidays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfVacation {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Holidays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class InitVacationDateF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForHolidaysF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfVacationF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class HolidaysF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Campo11 {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfThisYear {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Campo12 {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfThisYearF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class HasCustomdays {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Holidays_settlement {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: EnjoyedVacations })
  enjoyedVacations: EnjoyedVacations;

  @Prop({ type: InitVacationDate })
  initVacationDate: InitVacationDate;

  @Prop({ type: DaysForHolidays })
  daysForHolidays: DaysForHolidays;

  @Prop({ type: DaysOfVacation })
  daysOfVacation: DaysOfVacation;

  @Prop({ type: Holidays })
  holidays: Holidays;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: InitVacationDateF })
  initVacationDateF: InitVacationDateF;

  @Prop({ type: DaysForHolidaysF })
  daysForHolidaysF: DaysForHolidaysF;

  @Prop({ type: DaysOfVacationF })
  daysOfVacationF: DaysOfVacationF;

  @Prop({ type: HolidaysF })
  holidaysF: HolidaysF;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: Campo11 })
  campo11: Campo11;

  @Prop({ type: DaysOfThisYear })
  daysOfThisYear: DaysOfThisYear;

  @Prop({ type: Campo12 })
  campo12: Campo12;

  @Prop({ type: DaysOfThisYearF })
  daysOfThisYearF: DaysOfThisYearF;

  @Prop({ type: HasCustomdays })
  hasCustomdays: HasCustomdays;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class EnjoyedVacations {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class InitVacationDate {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForHolidays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfVacation {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Holidays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Prime {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class InitVacationDateF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForHolidaysF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfVacationF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class HolidaysF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class PrimeF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfThisYear {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfThisYearF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class HasCustomdays {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class HolidaysPrime_settlement {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: EnjoyedVacations })
  enjoyedVacations: EnjoyedVacations;

  @Prop({ type: InitVacationDate })
  initVacationDate: InitVacationDate;

  @Prop({ type: DaysForHolidays })
  daysForHolidays: DaysForHolidays;

  @Prop({ type: DaysOfVacation })
  daysOfVacation: DaysOfVacation;

  @Prop({ type: Holidays })
  holidays: Holidays;

  @Prop({ type: Prime })
  prime: Prime;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: InitVacationDateF })
  initVacationDateF: InitVacationDateF;

  @Prop({ type: DaysForHolidaysF })
  daysForHolidaysF: DaysForHolidaysF;

  @Prop({ type: DaysOfVacationF })
  daysOfVacationF: DaysOfVacationF;

  @Prop({ type: HolidaysF })
  holidaysF: HolidaysF;

  @Prop({ type: PrimeF })
  primeF: PrimeF;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: DaysOfThisYear })
  daysOfThisYear: DaysOfThisYear;

  @Prop({ type: DaysOfThisYearF })
  daysOfThisYearF: DaysOfThisYearF;

  @Prop({ type: HasCustomdays })
  hasCustomdays: HasCustomdays;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;
}

@Schema()
export class Data {
  @Prop()
  forFiscalAdjusment: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ForSocialPrevision {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForPerceptions {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalAdjusment {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ForSocialPrevision })
  forSocialPrevision: ForSocialPrevision;

  @Prop({ type: ForPerceptions })
  forPerceptions: ForPerceptions;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Data {
  @Prop()
  D075C_IM: number;

  @Prop()
  D250C_IM: number;

  @Prop()
  D005C_IM: number;

  @Prop()
  employeeServAdmonP: number;

  @Prop()
  D068C_IM: number;

  @Prop()
  D060C_IM: number;

  @Prop()
  D801C_IM: number;

  @Prop()
  D162C_IM: number;

  @Prop()
  D010C_IM: number;

  @Prop()
  D603C_IM: number;

  @Prop()
  D601C_IM: number;

  @Prop()
  D250C_IMF: number;

  @Prop()
  D059C_IM: number;

  @Prop()
  D061C_IM: number;

  @Prop()
  TDSD001: number;

  @Prop()
  D671C_DI: any;

  @Prop()
  D671C_IM: number;

  @Prop()
  D608C_IM: number;

  @Prop()
  D3398_IM: number;

  @Prop()
  paymentVoucher: number;

  @Prop()
  discountVoucher: number;

  @Prop()
  D5032_IM: number;

  @Prop()
  D805C_IM: number;

  @Prop()
  D3298_IM: number;

  @Prop()
  D051C_IM: number;

  @Prop()
  employeeServAdmonF: number;

  @Prop()
  D829C_IM: number;

  @Prop()
  D844C_IM: number;
}

@Schema()
export class Deductions {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop({ type: Data })
  data: Data;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Salary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Perceptions {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Deductions {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class RealTotal {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Salary })
  salary: Salary;

  @Prop({ type: Perceptions })
  perceptions: Perceptions;

  @Prop({ type: Deductions })
  deductions: Deductions;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class IsCustom {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class PendingVacationsToSum {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalWorkedDaysC {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalWorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Campo9 {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Campo10 {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LastFiscalWorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class MonthlyFiscalWorkedDaysC {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class MonthlyFiscalWorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalMensualizationFactor {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DayTypes {
  @Prop()
  result: any;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Factor {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class MaxFactor {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class MensualizationFactor {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: IsCustom })
  isCustom: IsCustom;

  @Prop({ type: PendingVacationsToSum })
  pendingVacationsToSum: PendingVacationsToSum;

  @Prop({ type: FiscalWorkedDaysC })
  fiscalWorkedDaysC: FiscalWorkedDaysC;

  @Prop({ type: FiscalWorkedDays })
  fiscalWorkedDays: FiscalWorkedDays;

  @Prop({ type: Campo9 })
  campo9: Campo9;

  @Prop({ type: Campo10 })
  campo10: Campo10;

  @Prop({ type: LastFiscalWorkedDays })
  lastFiscalWorkedDays: LastFiscalWorkedDays;

  @Prop({ type: MonthlyFiscalWorkedDaysC })
  monthlyFiscalWorkedDaysC: MonthlyFiscalWorkedDaysC;

  @Prop({ type: MonthlyFiscalWorkedDays })
  monthlyFiscalWorkedDays: MonthlyFiscalWorkedDays;

  @Prop({ type: NormalMensualizationFactor })
  normalMensualizationFactor: NormalMensualizationFactor;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop({ type: DayTypes })
  dayTypes: DayTypes;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: Factor })
  factor: Factor;

  @Prop({ type: MaxFactor })
  maxFactor: MaxFactor;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class MonthlySalary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class FullYears {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class PartialYear {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Years {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ExemptSettlement {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class GravableSettlement {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ForNormalISR {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForSettlementIsr {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Data {
  @Prop()
  compensation: number;

  @Prop()
  seniorityPrime: number;

  @Prop()
  compensationByYearAmmount: number;

  @Prop()
  compensationAmmount: number;

  @Prop()
  seniorityPrimeAmmount: number;

  @Prop()
  gratification: number;
}

@Schema()
export class DismissPayments {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: MonthlySalary })
  monthlySalary: MonthlySalary;

  @Prop({ type: FullYears })
  fullYears: FullYears;

  @Prop({ type: PartialYear })
  partialYear: PartialYear;

  @Prop({ type: Years })
  years: Years;

  @Prop({ type: ExemptSettlement })
  exemptSettlement: ExemptSettlement;

  @Prop({ type: GravableSettlement })
  gravableSettlement: GravableSettlement;

  @Prop({ type: ForNormalISR })
  forNormalISR: ForNormalISR;

  @Prop({ type: ForSettlementIsr })
  forSettlementIsr: ForSettlementIsr;

  @Prop()
  order: number;

  @Prop({ type: Data })
  data: Data;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FrecuencyType {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Umasn {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ExemptCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ExemptExtraTime {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class GravableExtraTime {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Data {
  @Prop()
  P008C_DI: number;

  @Prop()
  P023C_HR: number;

  @Prop()
  P009C_DI: number;

  @Prop()
  P008C_HR: number;
}

@Schema()
export class LimitByUma {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class HalfIncome {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Overtime {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FrecuencyType })
  frecuencyType: FrecuencyType;

  @Prop({ type: Umasn })
  umasn: Umasn;

  @Prop({ type: ExemptCalc })
  exemptCalc: ExemptCalc;

  @Prop({ type: ExemptExtraTime })
  exemptExtraTime: ExemptExtraTime;

  @Prop({ type: GravableExtraTime })
  gravableExtraTime: GravableExtraTime;

  @Prop()
  order: number;

  @Prop({ type: Data })
  data: Data;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: LimitByUma })
  limitByUma: LimitByUma;

  @Prop({ type: HalfIncome })
  halfIncome: HalfIncome;
}

@Schema()
export class MensualizationFactor {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  hidden: boolean;
}

@Schema()
export class WorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  hidden: boolean;
}

@Schema()
export class PeriodWorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class GravableBase {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Isr {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubCaused {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class LastSubCausedMonth {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Factor {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubCausedPeriod {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class SubCausedMonth {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class SubCausedExc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubCausedToRep {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubCausedToRepAdj {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubCausedToRepF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubCausedToRepMonth {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class SubToGive {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class SubGiven {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class SubOfPeriodToGive {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class SubsidyAdjusment {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;

  @Prop()
  positions: string;
}

@Schema()
export class SubsidyDeduction {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class LastIsrRep {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsrRep {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class IsrRepAdj {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class IsrRepAdjMonth {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class MonthlySubsidy {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class BalanceAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class TableType {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubsidyTable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubsidyTablePeriod {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  positions: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubsidyCustom {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Subsidy {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: MensualizationFactor })
  mensualizationFactor: MensualizationFactor;

  @Prop({ type: WorkedDays })
  workedDays: WorkedDays;

  @Prop({ type: PeriodWorkedDays })
  periodWorkedDays: PeriodWorkedDays;

  @Prop({ type: GravableBase })
  gravableBase: GravableBase;

  @Prop({ type: Isr })
  isr: Isr;

  @Prop({ type: SubCaused })
  subCaused: SubCaused;

  @Prop({ type: LastSubCausedMonth })
  lastSubCausedMonth: LastSubCausedMonth;

  @Prop({ type: Factor })
  factor: Factor;

  @Prop({ type: SubCausedPeriod })
  subCausedPeriod: SubCausedPeriod;

  @Prop({ type: SubCausedMonth })
  subCausedMonth: SubCausedMonth;

  @Prop({ type: SubCausedExc })
  subCausedExc: SubCausedExc;

  @Prop({ type: SubCausedToRep })
  subCausedToRep: SubCausedToRep;

  @Prop({ type: SubCausedToRepAdj })
  subCausedToRepAdj: SubCausedToRepAdj;

  @Prop({ type: SubCausedToRepF })
  subCausedToRepF: SubCausedToRepF;

  @Prop({ type: SubCausedToRepMonth })
  subCausedToRepMonth: SubCausedToRepMonth;

  @Prop({ type: SubToGive })
  subToGive: SubToGive;

  @Prop({ type: SubGiven })
  subGiven: SubGiven;

  @Prop({ type: SubOfPeriodToGive })
  subOfPeriodToGive: SubOfPeriodToGive;

  @Prop({ type: SubsidyAdjusment })
  subsidyAdjusment: SubsidyAdjusment;

  @Prop({ type: SubsidyDeduction })
  subsidyDeduction: SubsidyDeduction;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: LastIsrRep })
  lastIsrRep: LastIsrRep;

  @Prop({ type: IsrRep })
  isrRep: IsrRep;

  @Prop({ type: IsrRepAdj })
  isrRepAdj: IsrRepAdj;

  @Prop({ type: IsrRepAdjMonth })
  isrRepAdjMonth: IsrRepAdjMonth;

  @Prop({ type: MonthlySubsidy })
  monthlySubsidy: MonthlySubsidy;

  @Prop({ type: BalanceAmount })
  balanceAmount: BalanceAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: TableType })
  tableType: TableType;

  @Prop({ type: SubsidyTable })
  subsidyTable: SubsidyTable;

  @Prop({ type: SubsidyTablePeriod })
  subsidyTablePeriod: SubsidyTablePeriod;

  @Prop({ type: SubsidyCustom })
  subsidyCustom: SubsidyCustom;
}

@Schema()
export class Data {
  @Prop()
  subsidy: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Result {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class BalanceAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForRelatives {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SubsidyAdjustment {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: Result })
  result: Result;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: BalanceAmount })
  balanceAmount: BalanceAmount;

  @Prop({ type: ForRelatives })
  forRelatives: ForRelatives;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Data {
  @Prop()
  subsidy: number;

  @Prop()
  isr: number;

  @Prop()
  isrSettlement: number;

  @Prop()
  D075C_IM: number;

  @Prop()
  D250C_IM: number;

  @Prop()
  D005C_IM: number;

  @Prop()
  socialSecurity: number;

  @Prop()
  employeeServAdmonP: number;

  @Prop()
  D068C_IM: number;

  @Prop()
  D060C_IM: number;

  @Prop()
  D801C_IM: number;

  @Prop()
  D162C_IM: number;

  @Prop()
  D010C_IM: number;

  @Prop()
  D603C_IM: number;

  @Prop()
  D601C_IM: number;

  @Prop()
  D059C_IM: number;

  @Prop()
  D671C_DI: number;

  @Prop()
  D671C_IM: number;

  @Prop()
  D608C_IM: number;

  @Prop()
  D3398_IM: number;

  @Prop()
  D250C_IMF: number;

  @Prop()
  paymentVoucher: number;

  @Prop()
  discountVoucher: number;

  @Prop()
  D5032_IM: number;

  @Prop()
  D805C_IM: number;

  @Prop()
  D3298_IM: number;

  @Prop()
  D051C_IM: number;

  @Prop()
  employeeServAdmonF: number;

  @Prop()
  D829C_IM: number;

  @Prop()
  D844C_IM: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalDeductions {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Data {
  @Prop()
  subsidy: number;

  @Prop()
  isrAdjustment: number;

  @Prop()
  isr: number;

  @Prop()
  subsidyAdjustment: number;

  @Prop()
  isrSettlement: number;

  @Prop()
  salary: number;

  @Prop()
  fiscalSalary: number;

  @Prop()
  socialSecurity: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class AdjustmenCalculation {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ForSocialPrevision {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForFiscalAdjustment {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class AdjustmentSalary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Campo5 {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ForFiscalAdjusment {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: AdjustmenCalculation })
  adjustmenCalculation: AdjustmenCalculation;

  @Prop({ type: ForSocialPrevision })
  forSocialPrevision: ForSocialPrevision;

  @Prop({ type: ForFiscalAdjustment })
  forFiscalAdjustment: ForFiscalAdjustment;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: AdjustmentSalary })
  adjustmentSalary: AdjustmentSalary;

  @Prop({ type: Campo5 })
  campo5: Campo5;
}

@Schema()
export class Data {
  @Prop()
  isr: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class BalanceAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsrAdjustment {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: BalanceAmount })
  balanceAmount: BalanceAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;
}

@Schema()
export class Data {
  @Prop()
  fiscalPerceptions: number;

  @Prop()
  relatives: number;

  @Prop()
  adminServiceF: number;

  @Prop()
  lifeEnsureIntegratio: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class PayrollSubtotalF {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class CustomIsr {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class MensualizationFactor {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  hidden: boolean;
}

@Schema()
export class WorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  hidden: boolean;
}

@Schema()
export class GravableBase {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Subsidy {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Created {
  @Prop()
  by: string;

  @Prop()
  onBehalfOf: string;

  @Prop()
  atTime: number;

  @Prop()
  fromIP: string;
}

@Schema()
export class Updated {
  @Prop()
  by: string;

  @Prop()
  onBehalfOf: string;

  @Prop()
  atTime: number;

  @Prop()
  fromIP: string;
}

@Schema()
export class Result {
  @Prop()
  _id: string;

  @Prop()
  type: string;

  @Prop()
  year: number;

  @Prop()
  upperLimit: number;

  @Prop()
  fixedFee: number;

  @Prop()
  percentFee: number;

  @Prop({ type: Created })
  created: Created;

  @Prop()
  uid: string;

  @Prop()
  lowerLimit: number;

  @Prop({ type: Updated })
  updated: Updated;
}

@Schema()
export class IsrRow {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class LowerLimit {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LowerLimitExedent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsrPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsrFee {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class MarginalTax {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsrOfTable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class IsrToRetain {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class IsrRetained {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class IsrOfPeriodToRetain {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  hidden: boolean;

  @Prop()
  positions: string;
}

@Schema()
export class IsrAdjustment {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;

  @Prop()
  positions: string;
}

@Schema()
export class IsrPerception {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;

  @Prop()
  positions: string;
}

@Schema()
export class Result {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class MonthlyIsr {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class BalanceAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForRelatives {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TableType {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LastIsrFromLastCalculation {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValidationMinimumWage {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ValidationMinimumWageText {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalRelativesCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Isr {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: CustomIsr })
  customIsr: CustomIsr;

  @Prop({ type: MensualizationFactor })
  mensualizationFactor: MensualizationFactor;

  @Prop({ type: WorkedDays })
  workedDays: WorkedDays;

  @Prop({ type: GravableBase })
  gravableBase: GravableBase;

  @Prop({ type: Subsidy })
  subsidy: Subsidy;

  @Prop({ type: IsrRow })
  isrRow: IsrRow;

  @Prop({ type: LowerLimit })
  lowerLimit: LowerLimit;

  @Prop({ type: LowerLimitExedent })
  lowerLimitExedent: LowerLimitExedent;

  @Prop({ type: IsrPercent })
  isrPercent: IsrPercent;

  @Prop({ type: IsrFee })
  isrFee: IsrFee;

  @Prop({ type: MarginalTax })
  marginalTax: MarginalTax;

  @Prop({ type: IsrOfTable })
  isrOfTable: IsrOfTable;

  @Prop({ type: IsrToRetain })
  isrToRetain: IsrToRetain;

  @Prop({ type: IsrRetained })
  isrRetained: IsrRetained;

  @Prop({ type: IsrOfPeriodToRetain })
  isrOfPeriodToRetain: IsrOfPeriodToRetain;

  @Prop({ type: IsrAdjustment })
  isrAdjustment: IsrAdjustment;

  @Prop({ type: IsrPerception })
  isrPerception: IsrPerception;

  @Prop({ type: Result })
  result: Result;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: MonthlyIsr })
  monthlyIsr: MonthlyIsr;

  @Prop({ type: BalanceAmount })
  balanceAmount: BalanceAmount;

  @Prop({ type: ForRelatives })
  forRelatives: ForRelatives;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: TableType })
  tableType: TableType;

  @Prop({ type: LastIsrFromLastCalculation })
  lastIsrFromLastCalculation: LastIsrFromLastCalculation;

  @Prop({ type: ValidationMinimumWage })
  validationMinimumWage: ValidationMinimumWage;

  @Prop({ type: ValidationMinimumWageText })
  validationMinimumWageText: ValidationMinimumWageText;

  @Prop({ type: NormalRelativesCalc })
  normalRelativesCalc: NormalRelativesCalc;
}

@Schema()
export class Data {
  @Prop()
  isr: number;

  @Prop()
  subsidyAdjustment: number;

  @Prop()
  isrSettlement: number;

  @Prop()
  isn: number;

  @Prop()
  employeePromotionTax: number;

  @Prop()
  otherCharges: number;

  @Prop()
  socialSecurity: number;

  @Prop()
  socialSecurityBoss: number;

  @Prop()
  stampedCharge: number;

  @Prop()
  lifeEnsureIntegratio: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class PayrollSubtotalF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Relatives {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: PayrollSubtotalF })
  payrollSubtotalF: PayrollSubtotalF;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class SalaryMonthly {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Created {
  @Prop()
  by: string;

  @Prop()
  onBehalfOf: string;

  @Prop()
  atTime: number;

  @Prop()
  fromIP: string;
}

@Schema()
export class Updated {
  @Prop()
  by: string;

  @Prop()
  onBehalfOf: string;

  @Prop()
  atTime: number;

  @Prop()
  fromIP: string;
}

@Schema()
export class Result {
  @Prop()
  _id: string;

  @Prop()
  type: string;

  @Prop()
  year: number;

  @Prop()
  upperLimit: number;

  @Prop()
  fixedFee: number;

  @Prop()
  percentFee: number;

  @Prop({ type: Created })
  created: Created;

  @Prop()
  uid: string;

  @Prop()
  lowerLimit: number;

  @Prop({ type: Updated })
  updated: Updated;
}

@Schema()
export class IsrRow {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class LowerLimit {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LowerLimitExedent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsrPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsrFee {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class MarginalTax {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsrCalculated {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class Rate {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Result {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BalanceAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForRelatives {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsrSettlement {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: SalaryMonthly })
  salaryMonthly: SalaryMonthly;

  @Prop({ type: IsrRow })
  isrRow: IsrRow;

  @Prop({ type: LowerLimit })
  lowerLimit: LowerLimit;

  @Prop({ type: LowerLimitExedent })
  lowerLimitExedent: LowerLimitExedent;

  @Prop({ type: IsrPercent })
  isrPercent: IsrPercent;

  @Prop({ type: IsrFee })
  isrFee: IsrFee;

  @Prop({ type: MarginalTax })
  marginalTax: MarginalTax;

  @Prop({ type: IsrCalculated })
  isrCalculated: IsrCalculated;

  @Prop({ type: Rate })
  rate: Rate;

  @Prop({ type: Result })
  result: Result;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: BalanceAmount })
  balanceAmount: BalanceAmount;

  @Prop({ type: ForRelatives })
  forRelatives: ForRelatives;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalTotal {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class IsnPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class CustomIsrPercent {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Isn {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: IsnPercent })
  isnPercent: IsnPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: CustomIsrPercent })
  customIsrPercent: CustomIsrPercent;
}

@Schema()
export class PercentFee {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class BaseForFee {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class PayrollSubtotalF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class AdminServiceF {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: PercentFee })
  percentFee: PercentFee;

  @Prop({ type: BaseForFee })
  baseForFee: BaseForFee;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: PayrollSubtotalF })
  payrollSubtotalF: PayrollSubtotalF;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IvaF {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class Subtotal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Iva {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalBillF {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Subtotal })
  subtotal: Subtotal;

  @Prop({ type: Iva })
  iva: Iva;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D075C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class D250C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ForGravableSettlement {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Compensation {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: ForGravableSettlement })
  forGravableSettlement: ForGravableSettlement;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Data {
  @Prop()
  christmasBonus_settlement: number;

  @Prop()
  holidays_settlement: number;

  @Prop()
  holidaysPrime_settlement: number;

  @Prop()
  fiscalAdjusment: number;

  @Prop()
  forFiscalAdjusment: number;

  @Prop()
  socialPrevisionSalary: number;

  @Prop()
  compensation: number;

  @Prop()
  pendingVacations: number;

  @Prop()
  pendingPrime: number;

  @Prop()
  P033C_IM: number;

  @Prop()
  vacations: number;

  @Prop()
  seniorityPrime: number;

  @Prop()
  compensationAmmount: number;

  @Prop()
  seniorityPrimeAmmount: number;

  @Prop()
  P1505IM: number;

  @Prop()
  incapacitySubsidy: number;

  @Prop()
  P1315_IM: number;

  @Prop()
  P022C_DI: number;

  @Prop()
  gratification: number;

  @Prop()
  P6176_IM: number;

  @Prop()
  P6177_IM: number;

  @Prop()
  P009C_DI: number;

  @Prop()
  P008C_DI: number;

  @Prop()
  P667C_IM: number;

  @Prop()
  compensation2: number;

  @Prop()
  P654C_DI: number;

  @Prop()
  P1356_IM: number;

  @Prop()
  compensationByYearAmmount: number;

  @Prop()
  compensationByYearAmmountP: number;

  @Prop()
  P021C_DI: number;

  @Prop()
  P858C_IM: number;

  @Prop()
  P023C_IM: number;

  @Prop()
  workerTaxes: number;

  @Prop()
  P854C_IM: number;

  @Prop()
  P1260_IM: number;

  @Prop()
  P1347IM: number;

  @Prop()
  P023C_HR: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class PayrollSubtotalP {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionPerceptions {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: PayrollSubtotalP })
  payrollSubtotalP: PayrollSubtotalP;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Isn {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class EmployeePromotionPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class EmployeePromotionTax {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Isn })
  isn: Isn;

  @Prop({ type: EmployeePromotionPercent })
  employeePromotionPercent: EmployeePromotionPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class OtherCharges {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionSalary {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class Data {
  @Prop()
  socialPrevisionPerceptions: number;

  @Prop()
  adminServiceP: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class PayrollSubtotalP {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Data {
  @Prop()
  D005C_IM: number;

  @Prop()
  D060C_IM: number;

  @Prop()
  D603C_IM: number;

  @Prop()
  D601C_IM: number;

  @Prop()
  D250C_IMF: number;

  @Prop()
  D068C_IM: number;

  @Prop()
  D162C_IM: number;

  @Prop()
  D059C_IM: number;

  @Prop()
  D061C_IM: number;

  @Prop()
  TDSD001: number;

  @Prop()
  D671C_DI: number;

  @Prop()
  D010C_IM: number;

  @Prop()
  D608C_IM: number;

  @Prop()
  D3398_IM: number;

  @Prop()
  D250C_IM: number;

  @Prop()
  D5032_IM: number;

  @Prop()
  D805C_IM: number;

  @Prop()
  D3298_IM: number;

  @Prop()
  D051C_IM: number;

  @Prop()
  employeeServAdmonF: number;

  @Prop()
  employeeServAdmonP: number;

  @Prop()
  D844C_IM: number;
}

@Schema()
export class SocialPrevisionDeductions {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop({ type: Data })
  data: Data;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionTotal {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class PercentFee {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class PayrollSubtotalP {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class AdminServiceP {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: PercentFee })
  percentFee: PercentFee;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: PayrollSubtotalP })
  payrollSubtotalP: PayrollSubtotalP;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IvaP {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalBillP {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class AllIncapacities {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: boolean;
}

@Schema()
export class Result {
  @Prop()
  fast: number;

  @Prop()
  total: number;

  @Prop()
  normal: number;
}

@Schema()
export class Totals {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class Data {
  @Prop({ type: [any] })
  D014C_DI: any[];

  @Prop({ type: [any] })
  D013C_DI: any[];
}

@Schema()
export class Incapacities {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: AllIncapacities })
  allIncapacities: AllIncapacities;

  @Prop({ type: Totals })
  totals: Totals;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: Data })
  data: Data;
}

@Schema()
export class AllAbsences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: boolean;
}

@Schema()
export class AllAbsencesNoV {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: boolean;
}

@Schema()
export class Result {
  @Prop()
  fast: number;

  @Prop()
  total: number;

  @Prop()
  normal: number;
}

@Schema()
export class Totals {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LastMonthlyAbsences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class MonthlyAbsences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailablesAbsences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysToDiscount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FastTotals {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AbsencesIncapacities {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Data {
  @Prop({ type: [any] })
  D012C_DI: any[];

  @Prop({ type: [any] })
  D016C_DI: any[];

  @Prop({ type: [any] })
  vacations: any[];

  @Prop({ type: [any] })
  D2120_DI: any[];

  @Prop({ type: [any] })
  noSalaryPerm: any[];

  @Prop({ type: [any] })
  D2125_DI: any[];

  @Prop({ type: [any] })
  D830C_DI: any[];

  @Prop({ type: [any] })
  D016C_DI3: any[];
}

@Schema()
export class ValueNoV {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class AbsNoVInc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class LastAbsNoVInc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class MonthlyAbsNoVInc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LastMonthAbsences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Absences {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: AllAbsences })
  allAbsences: AllAbsences;

  @Prop({ type: AllAbsencesNoV })
  allAbsencesNoV: AllAbsencesNoV;

  @Prop({ type: Totals })
  totals: Totals;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: LastMonthlyAbsences })
  lastMonthlyAbsences: LastMonthlyAbsences;

  @Prop({ type: MonthlyAbsences })
  monthlyAbsences: MonthlyAbsences;

  @Prop({ type: AvailablesAbsences })
  availablesAbsences: AvailablesAbsences;

  @Prop({ type: DaysToDiscount })
  daysToDiscount: DaysToDiscount;

  @Prop({ type: FastTotals })
  fastTotals: FastTotals;

  @Prop({ type: AbsencesIncapacities })
  absencesIncapacities: AbsencesIncapacities;

  @Prop()
  order: number;

  @Prop({ type: Data })
  data: Data;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: ValueNoV })
  valueNoV: ValueNoV;

  @Prop({ type: AbsNoVInc })
  absNoVInc: AbsNoVInc;

  @Prop({ type: LastAbsNoVInc })
  lastAbsNoVInc: LastAbsNoVInc;

  @Prop({ type: MonthlyAbsNoVInc })
  monthlyAbsNoVInc: MonthlyAbsNoVInc;

  @Prop({ type: LastMonthAbsences })
  lastMonthAbsences: LastMonthAbsences;
}

@Schema()
export class PaymentDaysTypes {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfPeriod {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class QtySeventhDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AbsenceValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class PendingDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ActiveDays {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];
}

@Schema()
export class PeriodActiveDays {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];
}

@Schema()
export class RealWorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Result {
  @Prop()
  wd: number;

  @Prop()
  dismisses: number;

  @Prop()
  enroles: number;

  @Prop()
  dayWorth: number;
}

@Schema()
export class WorkedDaysFixed {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class PeriodWorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DiscountSeventhDay {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalDaysDiscount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class CalcResult {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  fields: string;

  @Prop()
  formatted: string;

  @Prop()
  hidden: boolean;
}

@Schema()
export class Fiscal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class SeventhDay {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class WorkedDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class DaysOfNaturalPeriod {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class GetDiffDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalValueAbsences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Workdays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class WorkedDays {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: PaymentDaysTypes })
  paymentDaysTypes: PaymentDaysTypes;

  @Prop({ type: DaysOfPeriod })
  daysOfPeriod: DaysOfPeriod;

  @Prop({ type: QtySeventhDays })
  qtySeventhDays: QtySeventhDays;

  @Prop({ type: AbsenceValue })
  absenceValue: AbsenceValue;

  @Prop({ type: PendingDays })
  pendingDays: PendingDays;

  @Prop({ type: ActiveDays })
  activeDays: ActiveDays;

  @Prop({ type: PeriodActiveDays })
  periodActiveDays: PeriodActiveDays;

  @Prop({ type: RealWorkedDays })
  realWorkedDays: RealWorkedDays;

  @Prop({ type: AvailableDays })
  availableDays: AvailableDays;

  @Prop({ type: WorkedDaysFixed })
  workedDaysFixed: WorkedDaysFixed;

  @Prop({ type: PeriodWorkedDays })
  periodWorkedDays: PeriodWorkedDays;

  @Prop({ type: DiscountSeventhDay })
  discountSeventhDay: DiscountSeventhDay;

  @Prop({ type: TotalDaysDiscount })
  totalDaysDiscount: TotalDaysDiscount;

  @Prop({ type: CalcResult })
  calcResult: CalcResult;

  @Prop({ type: Fiscal })
  fiscal: Fiscal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SeventhDay })
  seventhDay: SeventhDay;

  @Prop({ type: WorkedDays })
  workedDays: WorkedDays;

  @Prop()
  order: number;

  @Prop({ type: DaysOfNaturalPeriod })
  daysOfNaturalPeriod: DaysOfNaturalPeriod;

  @Prop({ type: GetDiffDays })
  getDiffDays: GetDiffDays;

  @Prop({ type: TotalValueAbsences })
  totalValueAbsences: TotalValueAbsences;

  @Prop({ type: Workdays })
  workdays: Workdays;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class 16-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class Result {
  @Prop({ type: 16-05-2022 })
  16-05-2022: 16-05-2022;

  @Prop({ type: 17-05-2022 })
  17-05-2022: 17-05-2022;

  @Prop({ type: 18-05-2022 })
  18-05-2022: 18-05-2022;

  @Prop({ type: 19-05-2022 })
  19-05-2022: 19-05-2022;

  @Prop({ type: 20-05-2022 })
  20-05-2022: 20-05-2022;

  @Prop({ type: 21-05-2022 })
  21-05-2022: 21-05-2022;

  @Prop({ type: 22-05-2022 })
  22-05-2022: 22-05-2022;

  @Prop({ type: 23-05-2022 })
  23-05-2022: 23-05-2022;

  @Prop({ type: 24-05-2022 })
  24-05-2022: 24-05-2022;

  @Prop({ type: 25-05-2022 })
  25-05-2022: 25-05-2022;

  @Prop({ type: 26-05-2022 })
  26-05-2022: 26-05-2022;

  @Prop({ type: 27-05-2022 })
  27-05-2022: 27-05-2022;

  @Prop({ type: 28-05-2022 })
  28-05-2022: 28-05-2022;

  @Prop({ type: 29-05-2022 })
  29-05-2022: 29-05-2022;

  @Prop({ type: 30-05-2022 })
  30-05-2022: 30-05-2022;

  @Prop({ type: 31-05-2022 })
  31-05-2022: 31-05-2022;

  @Prop({ type: 01-05-2022 })
  01-05-2022: 01-05-2022;

  @Prop({ type: 02-05-2022 })
  02-05-2022: 02-05-2022;

  @Prop({ type: 03-05-2022 })
  03-05-2022: 03-05-2022;

  @Prop({ type: 04-05-2022 })
  04-05-2022: 04-05-2022;

  @Prop({ type: 05-05-2022 })
  05-05-2022: 05-05-2022;

  @Prop({ type: 06-05-2022 })
  06-05-2022: 06-05-2022;

  @Prop({ type: 07-05-2022 })
  07-05-2022: 07-05-2022;

  @Prop({ type: 08-05-2022 })
  08-05-2022: 08-05-2022;

  @Prop({ type: 09-05-2022 })
  09-05-2022: 09-05-2022;

  @Prop({ type: 10-05-2022 })
  10-05-2022: 10-05-2022;

  @Prop({ type: 01-02-2021 })
  01-02-2021: 01-02-2021;

  @Prop({ type: 02-02-2021 })
  02-02-2021: 02-02-2021;

  @Prop({ type: 03-02-2021 })
  03-02-2021: 03-02-2021;

  @Prop({ type: 04-02-2021 })
  04-02-2021: 04-02-2021;

  @Prop({ type: 05-02-2021 })
  05-02-2021: 05-02-2021;

  @Prop({ type: 06-02-2021 })
  06-02-2021: 06-02-2021;

  @Prop({ type: 07-02-2021 })
  07-02-2021: 07-02-2021;

  @Prop({ type: 08-02-2021 })
  08-02-2021: 08-02-2021;

  @Prop({ type: 08-06-2022 })
  08-06-2022: 08-06-2022;

  @Prop({ type: 09-06-2022 })
  09-06-2022: 09-06-2022;

  @Prop({ type: 10-06-2022 })
  10-06-2022: 10-06-2022;

  @Prop({ type: 11-06-2022 })
  11-06-2022: 11-06-2022;

  @Prop({ type: 01-06-2022 })
  01-06-2022: 01-06-2022;

  @Prop({ type: 02-06-2022 })
  02-06-2022: 02-06-2022;

  @Prop({ type: 03-06-2022 })
  03-06-2022: 03-06-2022;

  @Prop({ type: 04-06-2022 })
  04-06-2022: 04-06-2022;

  @Prop({ type: 05-06-2022 })
  05-06-2022: 05-06-2022;

  @Prop({ type: 06-06-2022 })
  06-06-2022: 06-06-2022;

  @Prop({ type: 07-06-2022 })
  07-06-2022: 07-06-2022;

  @Prop({ type: 12-06-2022 })
  12-06-2022: 12-06-2022;

  @Prop({ type: 13-06-2022 })
  13-06-2022: 13-06-2022;

  @Prop({ type: 14-06-2022 })
  14-06-2022: 14-06-2022;

  @Prop({ type: 15-06-2022 })
  15-06-2022: 15-06-2022;

  @Prop({ type: 16-06-2022 })
  16-06-2022: 16-06-2022;

  @Prop({ type: 17-06-2022 })
  17-06-2022: 17-06-2022;

  @Prop({ type: 18-06-2022 })
  18-06-2022: 18-06-2022;

  @Prop({ type: 19-06-2022 })
  19-06-2022: 19-06-2022;

  @Prop({ type: 20-06-2022 })
  20-06-2022: 20-06-2022;

  @Prop({ type: 21-06-2022 })
  21-06-2022: 21-06-2022;

  @Prop({ type: 22-06-2022 })
  22-06-2022: 22-06-2022;

  @Prop({ type: 23-06-2022 })
  23-06-2022: 23-06-2022;

  @Prop({ type: 24-06-2022 })
  24-06-2022: 24-06-2022;

  @Prop({ type: 25-06-2022 })
  25-06-2022: 25-06-2022;

  @Prop({ type: 26-06-2022 })
  26-06-2022: 26-06-2022;

  @Prop({ type: 27-06-2022 })
  27-06-2022: 27-06-2022;

  @Prop({ type: 28-06-2022 })
  28-06-2022: 28-06-2022;

  @Prop({ type: 29-06-2022 })
  29-06-2022: 29-06-2022;

  @Prop({ type: 30-06-2022 })
  30-06-2022: 30-06-2022;

  @Prop({ type: 16-03-2022 })
  16-03-2022: 16-03-2022;

  @Prop({ type: 17-03-2022 })
  17-03-2022: 17-03-2022;

  @Prop({ type: 18-03-2022 })
  18-03-2022: 18-03-2022;

  @Prop({ type: 19-03-2022 })
  19-03-2022: 19-03-2022;

  @Prop({ type: 20-03-2022 })
  20-03-2022: 20-03-2022;

  @Prop({ type: 21-03-2022 })
  21-03-2022: 21-03-2022;

  @Prop({ type: 22-03-2022 })
  22-03-2022: 22-03-2022;

  @Prop({ type: 23-03-2022 })
  23-03-2022: 23-03-2022;

  @Prop({ type: 01-07-2022 })
  01-07-2022: 01-07-2022;

  @Prop({ type: 02-07-2022 })
  02-07-2022: 02-07-2022;

  @Prop({ type: 03-07-2022 })
  03-07-2022: 03-07-2022;

  @Prop({ type: 04-07-2022 })
  04-07-2022: 04-07-2022;

  @Prop({ type: 05-07-2022 })
  05-07-2022: 05-07-2022;

  @Prop({ type: 06-07-2022 })
  06-07-2022: 06-07-2022;

  @Prop({ type: 07-07-2022 })
  07-07-2022: 07-07-2022;

  @Prop({ type: 08-07-2022 })
  08-07-2022: 08-07-2022;

  @Prop({ type: 09-07-2022 })
  09-07-2022: 09-07-2022;

  @Prop({ type: 10-07-2022 })
  10-07-2022: 10-07-2022;

  @Prop({ type: 11-07-2022 })
  11-07-2022: 11-07-2022;

  @Prop({ type: 12-07-2022 })
  12-07-2022: 12-07-2022;

  @Prop({ type: 13-07-2022 })
  13-07-2022: 13-07-2022;

  @Prop({ type: 14-07-2022 })
  14-07-2022: 14-07-2022;

  @Prop({ type: 15-07-2022 })
  15-07-2022: 15-07-2022;

  @Prop({ type: 16-07-2022 })
  16-07-2022: 16-07-2022;

  @Prop({ type: 17-07-2022 })
  17-07-2022: 17-07-2022;

  @Prop({ type: 18-07-2022 })
  18-07-2022: 18-07-2022;

  @Prop({ type: 19-07-2022 })
  19-07-2022: 19-07-2022;

  @Prop({ type: 20-07-2022 })
  20-07-2022: 20-07-2022;

  @Prop({ type: 21-07-2022 })
  21-07-2022: 21-07-2022;

  @Prop({ type: 22-07-2022 })
  22-07-2022: 22-07-2022;

  @Prop({ type: 23-07-2022 })
  23-07-2022: 23-07-2022;

  @Prop({ type: 24-07-2022 })
  24-07-2022: 24-07-2022;

  @Prop({ type: 25-07-2022 })
  25-07-2022: 25-07-2022;

  @Prop({ type: 26-07-2022 })
  26-07-2022: 26-07-2022;

  @Prop({ type: 27-07-2022 })
  27-07-2022: 27-07-2022;

  @Prop({ type: 28-07-2022 })
  28-07-2022: 28-07-2022;

  @Prop({ type: 29-07-2022 })
  29-07-2022: 29-07-2022;

  @Prop({ type: 30-07-2022 })
  30-07-2022: 30-07-2022;

  @Prop({ type: 01-06-2020 })
  01-06-2020: 01-06-2020;

  @Prop({ type: 02-06-2020 })
  02-06-2020: 02-06-2020;

  @Prop({ type: 03-06-2020 })
  03-06-2020: 03-06-2020;

  @Prop({ type: 04-06-2020 })
  04-06-2020: 04-06-2020;

  @Prop({ type: 05-06-2020 })
  05-06-2020: 05-06-2020;

  @Prop({ type: 06-06-2020 })
  06-06-2020: 06-06-2020;

  @Prop({ type: 07-06-2020 })
  07-06-2020: 07-06-2020;

  @Prop({ type: 08-06-2020 })
  08-06-2020: 08-06-2020;

  @Prop({ type: 09-06-2020 })
  09-06-2020: 09-06-2020;

  @Prop({ type: 10-06-2020 })
  10-06-2020: 10-06-2020;

  @Prop({ type: 11-06-2020 })
  11-06-2020: 11-06-2020;

  @Prop({ type: 12-06-2020 })
  12-06-2020: 12-06-2020;

  @Prop({ type: 13-06-2020 })
  13-06-2020: 13-06-2020;

  @Prop({ type: 14-06-2020 })
  14-06-2020: 14-06-2020;

  @Prop({ type: 15-06-2020 })
  15-06-2020: 15-06-2020;

  @Prop({ type: 31-07-2022 })
  31-07-2022: 31-07-2022;

  @Prop({ type: 01-08-2022 })
  01-08-2022: 01-08-2022;

  @Prop({ type: 02-08-2022 })
  02-08-2022: 02-08-2022;

  @Prop({ type: 03-08-2022 })
  03-08-2022: 03-08-2022;

  @Prop({ type: 04-08-2022 })
  04-08-2022: 04-08-2022;

  @Prop({ type: 05-08-2022 })
  05-08-2022: 05-08-2022;

  @Prop({ type: 06-08-2022 })
  06-08-2022: 06-08-2022;

  @Prop({ type: 07-08-2022 })
  07-08-2022: 07-08-2022;

  @Prop({ type: 08-08-2022 })
  08-08-2022: 08-08-2022;

  @Prop({ type: 09-08-2022 })
  09-08-2022: 09-08-2022;

  @Prop({ type: 10-08-2022 })
  10-08-2022: 10-08-2022;

  @Prop({ type: 11-08-2022 })
  11-08-2022: 11-08-2022;

  @Prop({ type: 12-08-2022 })
  12-08-2022: 12-08-2022;

  @Prop({ type: 13-08-2022 })
  13-08-2022: 13-08-2022;

  @Prop({ type: 14-08-2022 })
  14-08-2022: 14-08-2022;

  @Prop({ type: 15-08-2022 })
  15-08-2022: 15-08-2022;

  @Prop({ type: 16-08-2022 })
  16-08-2022: 16-08-2022;

  @Prop({ type: 17-08-2022 })
  17-08-2022: 17-08-2022;

  @Prop({ type: 18-08-2022 })
  18-08-2022: 18-08-2022;

  @Prop({ type: 19-08-2022 })
  19-08-2022: 19-08-2022;

  @Prop({ type: 20-08-2022 })
  20-08-2022: 20-08-2022;

  @Prop({ type: 21-08-2022 })
  21-08-2022: 21-08-2022;

  @Prop({ type: 22-08-2022 })
  22-08-2022: 22-08-2022;

  @Prop({ type: 23-08-2022 })
  23-08-2022: 23-08-2022;

  @Prop({ type: 24-08-2022 })
  24-08-2022: 24-08-2022;

  @Prop({ type: 25-08-2022 })
  25-08-2022: 25-08-2022;

  @Prop({ type: 26-08-2022 })
  26-08-2022: 26-08-2022;

  @Prop({ type: 31-08-2022 })
  31-08-2022: 31-08-2022;

  @Prop({ type: 01-09-2022 })
  01-09-2022: 01-09-2022;

  @Prop({ type: 02-09-2022 })
  02-09-2022: 02-09-2022;

  @Prop({ type: 03-09-2022 })
  03-09-2022: 03-09-2022;

  @Prop({ type: 04-09-2022 })
  04-09-2022: 04-09-2022;

  @Prop({ type: 05-09-2022 })
  05-09-2022: 05-09-2022;

  @Prop({ type: 27-08-2022 })
  27-08-2022: 27-08-2022;

  @Prop({ type: 28-08-2022 })
  28-08-2022: 28-08-2022;

  @Prop({ type: 29-08-2022 })
  29-08-2022: 29-08-2022;

  @Prop({ type: 30-08-2022 })
  30-08-2022: 30-08-2022;

  @Prop({ type: 06-09-2022 })
  06-09-2022: 06-09-2022;

  @Prop({ type: 07-09-2022 })
  07-09-2022: 07-09-2022;

  @Prop({ type: 08-09-2022 })
  08-09-2022: 08-09-2022;

  @Prop({ type: 09-09-2022 })
  09-09-2022: 09-09-2022;

  @Prop({ type: 16-09-2022 })
  16-09-2022: 16-09-2022;

  @Prop({ type: 17-09-2022 })
  17-09-2022: 17-09-2022;

  @Prop({ type: 18-09-2022 })
  18-09-2022: 18-09-2022;

  @Prop({ type: 19-09-2022 })
  19-09-2022: 19-09-2022;

  @Prop({ type: 14-09-2022 })
  14-09-2022: 14-09-2022;

  @Prop({ type: 28-09-2022 })
  28-09-2022: 28-09-2022;

  @Prop({ type: 29-09-2022 })
  29-09-2022: 29-09-2022;

  @Prop({ type: 30-09-2022 })
  30-09-2022: 30-09-2022;

  @Prop({ type: 20-09-2022 })
  20-09-2022: 20-09-2022;

  @Prop({ type: 21-09-2022 })
  21-09-2022: 21-09-2022;

  @Prop({ type: 15-09-2022 })
  15-09-2022: 15-09-2022;

  @Prop({ type: 01-10-2022 })
  01-10-2022: 01-10-2022;

  @Prop({ type: 02-10-2022 })
  02-10-2022: 02-10-2022;

  @Prop({ type: 03-10-2022 })
  03-10-2022: 03-10-2022;

  @Prop({ type: 04-10-2022 })
  04-10-2022: 04-10-2022;

  @Prop({ type: 05-10-2022 })
  05-10-2022: 05-10-2022;

  @Prop({ type: 06-10-2022 })
  06-10-2022: 06-10-2022;

  @Prop({ type: 07-10-2022 })
  07-10-2022: 07-10-2022;

  @Prop({ type: 08-10-2022 })
  08-10-2022: 08-10-2022;

  @Prop({ type: 16-10-2022 })
  16-10-2022: 16-10-2022;

  @Prop({ type: 17-10-2022 })
  17-10-2022: 17-10-2022;

  @Prop({ type: 19-10-2022 })
  19-10-2022: 19-10-2022;

  @Prop({ type: 20-10-2022 })
  20-10-2022: 20-10-2022;

  @Prop({ type: 21-10-2022 })
  21-10-2022: 21-10-2022;

  @Prop({ type: 22-10-2022 })
  22-10-2022: 22-10-2022;

  @Prop({ type: 23-10-2022 })
  23-10-2022: 23-10-2022;

  @Prop({ type: 24-10-2022 })
  24-10-2022: 24-10-2022;

  @Prop({ type: 25-10-2022 })
  25-10-2022: 25-10-2022;

  @Prop({ type: 18-10-2022 })
  18-10-2022: 18-10-2022;

  @Prop({ type: 26-10-2022 })
  26-10-2022: 26-10-2022;

  @Prop({ type: 27-10-2022 })
  27-10-2022: 27-10-2022;

  @Prop({ type: 28-10-2022 })
  28-10-2022: 28-10-2022;

  @Prop({ type: 01-11-2022 })
  01-11-2022: 01-11-2022;

  @Prop({ type: 02-11-2022 })
  02-11-2022: 02-11-2022;

  @Prop({ type: 03-11-2022 })
  03-11-2022: 03-11-2022;

  @Prop({ type: 04-11-2022 })
  04-11-2022: 04-11-2022;

  @Prop({ type: 05-11-2022 })
  05-11-2022: 05-11-2022;

  @Prop({ type: 06-11-2022 })
  06-11-2022: 06-11-2022;

  @Prop({ type: 07-11-2022 })
  07-11-2022: 07-11-2022;

  @Prop({ type: 08-11-2022 })
  08-11-2022: 08-11-2022;

  @Prop({ type: 09-11-2022 })
  09-11-2022: 09-11-2022;

  @Prop({ type: 10-11-2022 })
  10-11-2022: 10-11-2022;

  @Prop({ type: 11-11-2022 })
  11-11-2022: 11-11-2022;

  @Prop({ type: 12-11-2022 })
  12-11-2022: 12-11-2022;

  @Prop({ type: 13-11-2022 })
  13-11-2022: 13-11-2022;

  @Prop({ type: 14-11-2022 })
  14-11-2022: 14-11-2022;

  @Prop({ type: 15-11-2022 })
  15-11-2022: 15-11-2022;

  @Prop({ type: 31-10-2022 })
  31-10-2022: 31-10-2022;

  @Prop({ type: 16-11-2022 })
  16-11-2022: 16-11-2022;

  @Prop({ type: 17-11-2022 })
  17-11-2022: 17-11-2022;

  @Prop({ type: 18-11-2022 })
  18-11-2022: 18-11-2022;

  @Prop({ type: 19-11-2022 })
  19-11-2022: 19-11-2022;

  @Prop({ type: 20-11-2022 })
  20-11-2022: 20-11-2022;

  @Prop({ type: 21-11-2022 })
  21-11-2022: 21-11-2022;

  @Prop({ type: 22-11-2022 })
  22-11-2022: 22-11-2022;

  @Prop({ type: 23-11-2022 })
  23-11-2022: 23-11-2022;

  @Prop({ type: 24-11-2022 })
  24-11-2022: 24-11-2022;

  @Prop({ type: 25-11-2022 })
  25-11-2022: 25-11-2022;

  @Prop({ type: 30-11-2022 })
  30-11-2022: 30-11-2022;

  @Prop({ type: 01-12-2022 })
  01-12-2022: 01-12-2022;

  @Prop({ type: 02-12-2022 })
  02-12-2022: 02-12-2022;

  @Prop({ type: 03-12-2022 })
  03-12-2022: 03-12-2022;

  @Prop({ type: 04-12-2022 })
  04-12-2022: 04-12-2022;

  @Prop({ type: 05-12-2022 })
  05-12-2022: 05-12-2022;

  @Prop({ type: 06-12-2022 })
  06-12-2022: 06-12-2022;

  @Prop({ type: 07-12-2022 })
  07-12-2022: 07-12-2022;

  @Prop({ type: 08-12-2022 })
  08-12-2022: 08-12-2022;

  @Prop({ type: 09-12-2022 })
  09-12-2022: 09-12-2022;

  @Prop({ type: 16-12-2022 })
  16-12-2022: 16-12-2022;

  @Prop({ type: 17-12-2022 })
  17-12-2022: 17-12-2022;

  @Prop({ type: 18-12-2022 })
  18-12-2022: 18-12-2022;

  @Prop({ type: 19-12-2022 })
  19-12-2022: 19-12-2022;

  @Prop({ type: 20-12-2022 })
  20-12-2022: 20-12-2022;

  @Prop({ type: 21-12-2022 })
  21-12-2022: 21-12-2022;

  @Prop({ type: 22-12-2022 })
  22-12-2022: 22-12-2022;

  @Prop({ type: 23-12-2022 })
  23-12-2022: 23-12-2022;

  @Prop({ type: 24-12-2022 })
  24-12-2022: 24-12-2022;

  @Prop({ type: 25-12-2022 })
  25-12-2022: 25-12-2022;

  @Prop({ type: 26-12-2022 })
  26-12-2022: 26-12-2022;

  @Prop({ type: 27-12-2022 })
  27-12-2022: 27-12-2022;

  @Prop({ type: 28-12-2022 })
  28-12-2022: 28-12-2022;

  @Prop({ type: 29-12-2022 })
  29-12-2022: 29-12-2022;

  @Prop({ type: 30-12-2022 })
  30-12-2022: 30-12-2022;

  @Prop({ type: 31-12-2022 })
  31-12-2022: 31-12-2022;

  @Prop({ type: 01-01-2023 })
  01-01-2023: 01-01-2023;

  @Prop({ type: 02-01-2023 })
  02-01-2023: 02-01-2023;

  @Prop({ type: 04-01-2023 })
  04-01-2023: 04-01-2023;

  @Prop({ type: 05-01-2023 })
  05-01-2023: 05-01-2023;

  @Prop({ type: 06-01-2023 })
  06-01-2023: 06-01-2023;

  @Prop({ type: 03-01-2023 })
  03-01-2023: 03-01-2023;

  @Prop({ type: 07-01-2023 })
  07-01-2023: 07-01-2023;

  @Prop({ type: 08-01-2023 })
  08-01-2023: 08-01-2023;

  @Prop({ type: 09-01-2023 })
  09-01-2023: 09-01-2023;

  @Prop({ type: 10-01-2023 })
  10-01-2023: 10-01-2023;

  @Prop({ type: 11-01-2023 })
  11-01-2023: 11-01-2023;

  @Prop({ type: 12-01-2023 })
  12-01-2023: 12-01-2023;

  @Prop({ type: 13-01-2023 })
  13-01-2023: 13-01-2023;

  @Prop({ type: 14-01-2023 })
  14-01-2023: 14-01-2023;

  @Prop({ type: 15-01-2023 })
  15-01-2023: 15-01-2023;

  @Prop({ type: 14-12-2022 })
  14-12-2022: 14-12-2022;

  @Prop({ type: 15-12-2022 })
  15-12-2022: 15-12-2022;

  @Prop({ type: 16-01-2023 })
  16-01-2023: 16-01-2023;

  @Prop({ type: 17-01-2023 })
  17-01-2023: 17-01-2023;

  @Prop({ type: 18-01-2023 })
  18-01-2023: 18-01-2023;

  @Prop({ type: 19-01-2023 })
  19-01-2023: 19-01-2023;

  @Prop({ type: 20-01-2023 })
  20-01-2023: 20-01-2023;

  @Prop({ type: 21-01-2023 })
  21-01-2023: 21-01-2023;

  @Prop({ type: 22-01-2023 })
  22-01-2023: 22-01-2023;

  @Prop({ type: 01-02-2023 })
  01-02-2023: 01-02-2023;

  @Prop({ type: 02-02-2023 })
  02-02-2023: 02-02-2023;

  @Prop({ type: 03-02-2023 })
  03-02-2023: 03-02-2023;

  @Prop({ type: 04-02-2023 })
  04-02-2023: 04-02-2023;

  @Prop({ type: 05-02-2023 })
  05-02-2023: 05-02-2023;

  @Prop({ type: 06-02-2023 })
  06-02-2023: 06-02-2023;

  @Prop({ type: 07-02-2023 })
  07-02-2023: 07-02-2023;

  @Prop({ type: 08-02-2023 })
  08-02-2023: 08-02-2023;

  @Prop({ type: 23-01-2023 })
  23-01-2023: 23-01-2023;

  @Prop({ type: 24-01-2023 })
  24-01-2023: 24-01-2023;

  @Prop({ type: 25-01-2023 })
  25-01-2023: 25-01-2023;

  @Prop({ type: 26-01-2023 })
  26-01-2023: 26-01-2023;

  @Prop({ type: 27-01-2023 })
  27-01-2023: 27-01-2023;

  @Prop({ type: 28-01-2023 })
  28-01-2023: 28-01-2023;

  @Prop({ type: 29-01-2023 })
  29-01-2023: 29-01-2023;

  @Prop({ type: 30-01-2023 })
  30-01-2023: 30-01-2023;

  @Prop({ type: 31-01-2023 })
  31-01-2023: 31-01-2023;

  @Prop({ type: 10-02-2023 })
  10-02-2023: 10-02-2023;

  @Prop({ type: 11-02-2023 })
  11-02-2023: 11-02-2023;

  @Prop({ type: 09-02-2023 })
  09-02-2023: 09-02-2023;

  @Prop({ type: 15-02-2023 })
  15-02-2023: 15-02-2023;

  @Prop({ type: 16-02-2023 })
  16-02-2023: 16-02-2023;

  @Prop({ type: 17-02-2023 })
  17-02-2023: 17-02-2023;

  @Prop({ type: 26-02-2023 })
  26-02-2023: 26-02-2023;

  @Prop({ type: 27-02-2023 })
  27-02-2023: 27-02-2023;

  @Prop({ type: 28-02-2023 })
  28-02-2023: 28-02-2023;

  @Prop({ type: 08-03-2023 })
  08-03-2023: 08-03-2023;

  @Prop({ type: 09-03-2023 })
  09-03-2023: 09-03-2023;

  @Prop({ type: 10-03-2023 })
  10-03-2023: 10-03-2023;

  @Prop({ type: 01-03-2023 })
  01-03-2023: 01-03-2023;

  @Prop({ type: 02-03-2023 })
  02-03-2023: 02-03-2023;

  @Prop({ type: 03-03-2023 })
  03-03-2023: 03-03-2023;

  @Prop({ type: 04-03-2023 })
  04-03-2023: 04-03-2023;

  @Prop({ type: 05-03-2023 })
  05-03-2023: 05-03-2023;

  @Prop({ type: 06-03-2023 })
  06-03-2023: 06-03-2023;

  @Prop({ type: 07-03-2023 })
  07-03-2023: 07-03-2023;

  @Prop({ type: 16-03-2023 })
  16-03-2023: 16-03-2023;

  @Prop({ type: 17-03-2023 })
  17-03-2023: 17-03-2023;

  @Prop({ type: 18-03-2023 })
  18-03-2023: 18-03-2023;

  @Prop({ type: 19-03-2023 })
  19-03-2023: 19-03-2023;

  @Prop({ type: 20-03-2023 })
  20-03-2023: 20-03-2023;

  @Prop({ type: 21-03-2023 })
  21-03-2023: 21-03-2023;

  @Prop({ type: 22-03-2023 })
  22-03-2023: 22-03-2023;

  @Prop({ type: 23-03-2023 })
  23-03-2023: 23-03-2023;

  @Prop({ type: 24-03-2023 })
  24-03-2023: 24-03-2023;

  @Prop({ type: 25-03-2023 })
  25-03-2023: 25-03-2023;

  @Prop({ type: 26-03-2023 })
  26-03-2023: 26-03-2023;

  @Prop({ type: 27-03-2023 })
  27-03-2023: 27-03-2023;

  @Prop({ type: 28-03-2023 })
  28-03-2023: 28-03-2023;

  @Prop({ type: 01-04-2023 })
  01-04-2023: 01-04-2023;

  @Prop({ type: 02-04-2023 })
  02-04-2023: 02-04-2023;

  @Prop({ type: 03-04-2023 })
  03-04-2023: 03-04-2023;

  @Prop({ type: 04-04-2023 })
  04-04-2023: 04-04-2023;

  @Prop({ type: 05-04-2023 })
  05-04-2023: 05-04-2023;

  @Prop({ type: 06-04-2023 })
  06-04-2023: 06-04-2023;

  @Prop({ type: 07-04-2023 })
  07-04-2023: 07-04-2023;

  @Prop({ type: 08-04-2023 })
  08-04-2023: 08-04-2023;

  @Prop({ type: 09-04-2023 })
  09-04-2023: 09-04-2023;

  @Prop({ type: 10-04-2023 })
  10-04-2023: 10-04-2023;

  @Prop({ type: 16-04-2023 })
  16-04-2023: 16-04-2023;

  @Prop({ type: 17-04-2023 })
  17-04-2023: 17-04-2023;

  @Prop({ type: 18-04-2023 })
  18-04-2023: 18-04-2023;

  @Prop({ type: 19-04-2023 })
  19-04-2023: 19-04-2023;

  @Prop({ type: 20-04-2023 })
  20-04-2023: 20-04-2023;

  @Prop({ type: 21-04-2023 })
  21-04-2023: 21-04-2023;

  @Prop({ type: 22-04-2023 })
  22-04-2023: 22-04-2023;

  @Prop({ type: 23-04-2023 })
  23-04-2023: 23-04-2023;

  @Prop({ type: 24-04-2023 })
  24-04-2023: 24-04-2023;

  @Prop({ type: 25-04-2023 })
  25-04-2023: 25-04-2023;

  @Prop({ type: 26-04-2023 })
  26-04-2023: 26-04-2023;

  @Prop({ type: 01-05-2023 })
  01-05-2023: 01-05-2023;

  @Prop({ type: 02-05-2023 })
  02-05-2023: 02-05-2023;

  @Prop({ type: 03-05-2023 })
  03-05-2023: 03-05-2023;

  @Prop({ type: 04-05-2023 })
  04-05-2023: 04-05-2023;

  @Prop({ type: 05-05-2023 })
  05-05-2023: 05-05-2023;

  @Prop({ type: 06-05-2023 })
  06-05-2023: 06-05-2023;

  @Prop({ type: 07-05-2023 })
  07-05-2023: 07-05-2023;

  @Prop({ type: 08-05-2023 })
  08-05-2023: 08-05-2023;

  @Prop({ type: 09-05-2023 })
  09-05-2023: 09-05-2023;

  @Prop({ type: 10-05-2023 })
  10-05-2023: 10-05-2023;

  @Prop({ type: 11-05-2023 })
  11-05-2023: 11-05-2023;

  @Prop({ type: 12-05-2023 })
  12-05-2023: 12-05-2023;

  @Prop({ type: 16-05-2023 })
  16-05-2023: 16-05-2023;

  @Prop({ type: 17-05-2023 })
  17-05-2023: 17-05-2023;

  @Prop({ type: 18-05-2023 })
  18-05-2023: 18-05-2023;

  @Prop({ type: 19-05-2023 })
  19-05-2023: 19-05-2023;

  @Prop({ type: 20-05-2023 })
  20-05-2023: 20-05-2023;

  @Prop({ type: 21-05-2023 })
  21-05-2023: 21-05-2023;

  @Prop({ type: 22-05-2023 })
  22-05-2023: 22-05-2023;

  @Prop({ type: 23-05-2023 })
  23-05-2023: 23-05-2023;

  @Prop({ type: 24-05-2023 })
  24-05-2023: 24-05-2023;

  @Prop({ type: 25-05-2023 })
  25-05-2023: 25-05-2023;

  @Prop({ type: 01-06-2023 })
  01-06-2023: 01-06-2023;

  @Prop({ type: 02-06-2023 })
  02-06-2023: 02-06-2023;

  @Prop({ type: 03-06-2023 })
  03-06-2023: 03-06-2023;

  @Prop({ type: 04-06-2023 })
  04-06-2023: 04-06-2023;

  @Prop({ type: 05-06-2023 })
  05-06-2023: 05-06-2023;

  @Prop({ type: 06-06-2023 })
  06-06-2023: 06-06-2023;

  @Prop({ type: 07-06-2023 })
  07-06-2023: 07-06-2023;

  @Prop({ type: 08-06-2023 })
  08-06-2023: 08-06-2023;

  @Prop({ type: 09-06-2023 })
  09-06-2023: 09-06-2023;

  @Prop({ type: 10-06-2023 })
  10-06-2023: 10-06-2023;

  @Prop({ type: 11-06-2023 })
  11-06-2023: 11-06-2023;

  @Prop({ type: 12-06-2023 })
  12-06-2023: 12-06-2023;

  @Prop({ type: 16-06-2023 })
  16-06-2023: 16-06-2023;

  @Prop({ type: 14-06-2023 })
  14-06-2023: 14-06-2023;

  @Prop({ type: 15-06-2023 })
  15-06-2023: 15-06-2023;

  @Prop({ type: 17-06-2023 })
  17-06-2023: 17-06-2023;

  @Prop({ type: 18-06-2023 })
  18-06-2023: 18-06-2023;

  @Prop({ type: 19-06-2023 })
  19-06-2023: 19-06-2023;

  @Prop({ type: 20-06-2023 })
  20-06-2023: 20-06-2023;

  @Prop({ type: 21-06-2023 })
  21-06-2023: 21-06-2023;

  @Prop({ type: 22-06-2023 })
  22-06-2023: 22-06-2023;

  @Prop({ type: 01-07-2023 })
  01-07-2023: 01-07-2023;

  @Prop({ type: 28-06-2023 })
  28-06-2023: 28-06-2023;

  @Prop({ type: 29-06-2023 })
  29-06-2023: 29-06-2023;

  @Prop({ type: 30-06-2023 })
  30-06-2023: 30-06-2023;

  @Prop({ type: 02-07-2023 })
  02-07-2023: 02-07-2023;

  @Prop({ type: 03-07-2023 })
  03-07-2023: 03-07-2023;

  @Prop({ type: 04-07-2023 })
  04-07-2023: 04-07-2023;

  @Prop({ type: 05-07-2023 })
  05-07-2023: 05-07-2023;

  @Prop({ type: 06-07-2023 })
  06-07-2023: 06-07-2023;

  @Prop({ type: 07-07-2023 })
  07-07-2023: 07-07-2023;

  @Prop({ type: 08-07-2023 })
  08-07-2023: 08-07-2023;

  @Prop({ type: 09-07-2023 })
  09-07-2023: 09-07-2023;

  @Prop({ type: 10-07-2023 })
  10-07-2023: 10-07-2023;

  @Prop({ type: 11-07-2023 })
  11-07-2023: 11-07-2023;

  @Prop({ type: 12-07-2023 })
  12-07-2023: 12-07-2023;

  @Prop({ type: 13-07-2023 })
  13-07-2023: 13-07-2023;

  @Prop({ type: 14-07-2023 })
  14-07-2023: 14-07-2023;

  @Prop({ type: 16-07-2023 })
  16-07-2023: 16-07-2023;

  @Prop({ type: 17-07-2023 })
  17-07-2023: 17-07-2023;

  @Prop({ type: 18-07-2023 })
  18-07-2023: 18-07-2023;

  @Prop({ type: 19-07-2023 })
  19-07-2023: 19-07-2023;

  @Prop({ type: 20-07-2023 })
  20-07-2023: 20-07-2023;

  @Prop({ type: 21-07-2023 })
  21-07-2023: 21-07-2023;

  @Prop({ type: 22-07-2023 })
  22-07-2023: 22-07-2023;

  @Prop({ type: 23-07-2023 })
  23-07-2023: 23-07-2023;

  @Prop({ type: 24-07-2023 })
  24-07-2023: 24-07-2023;

  @Prop({ type: 25-07-2023 })
  25-07-2023: 25-07-2023;

  @Prop({ type: 26-07-2023 })
  26-07-2023: 26-07-2023;

  @Prop({ type: 27-07-2023 })
  27-07-2023: 27-07-2023;

  @Prop({ type: 28-07-2023 })
  28-07-2023: 28-07-2023;

  @Prop({ type: 29-07-2023 })
  29-07-2023: 29-07-2023;

  @Prop({ type: 30-07-2023 })
  30-07-2023: 30-07-2023;

  @Prop({ type: 31-07-2023 })
  31-07-2023: 31-07-2023;

  @Prop({ type: 01-08-2023 })
  01-08-2023: 01-08-2023;

  @Prop({ type: 15-07-2023 })
  15-07-2023: 15-07-2023;

  @Prop({ type: 02-08-2023 })
  02-08-2023: 02-08-2023;

  @Prop({ type: 03-08-2023 })
  03-08-2023: 03-08-2023;

  @Prop({ type: 04-08-2023 })
  04-08-2023: 04-08-2023;

  @Prop({ type: 05-08-2023 })
  05-08-2023: 05-08-2023;

  @Prop({ type: 06-08-2023 })
  06-08-2023: 06-08-2023;

  @Prop({ type: 07-08-2023 })
  07-08-2023: 07-08-2023;

  @Prop({ type: 08-08-2023 })
  08-08-2023: 08-08-2023;

  @Prop({ type: 16-08-2023 })
  16-08-2023: 16-08-2023;

  @Prop({ type: 17-08-2023 })
  17-08-2023: 17-08-2023;

  @Prop({ type: 18-08-2023 })
  18-08-2023: 18-08-2023;

  @Prop({ type: 19-08-2023 })
  19-08-2023: 19-08-2023;

  @Prop({ type: 20-08-2023 })
  20-08-2023: 20-08-2023;

  @Prop({ type: 21-08-2023 })
  21-08-2023: 21-08-2023;

  @Prop({ type: 22-08-2023 })
  22-08-2023: 22-08-2023;

  @Prop({ type: 23-08-2023 })
  23-08-2023: 23-08-2023;

  @Prop({ type: 24-08-2023 })
  24-08-2023: 24-08-2023;

  @Prop({ type: 25-08-2023 })
  25-08-2023: 25-08-2023;

  @Prop({ type: 26-08-2023 })
  26-08-2023: 26-08-2023;

  @Prop({ type: 27-08-2023 })
  27-08-2023: 27-08-2023;

  @Prop({ type: 28-08-2023 })
  28-08-2023: 28-08-2023;

  @Prop({ type: 29-08-2023 })
  29-08-2023: 29-08-2023;

  @Prop({ type: 01-09-2023 })
  01-09-2023: 01-09-2023;

  @Prop({ type: 02-09-2023 })
  02-09-2023: 02-09-2023;

  @Prop({ type: 03-09-2023 })
  03-09-2023: 03-09-2023;

  @Prop({ type: 04-09-2023 })
  04-09-2023: 04-09-2023;

  @Prop({ type: 05-09-2023 })
  05-09-2023: 05-09-2023;

  @Prop({ type: 06-09-2023 })
  06-09-2023: 06-09-2023;

  @Prop({ type: 07-09-2023 })
  07-09-2023: 07-09-2023;

  @Prop({ type: 08-09-2023 })
  08-09-2023: 08-09-2023;

  @Prop({ type: 09-09-2023 })
  09-09-2023: 09-09-2023;

  @Prop({ type: 10-09-2023 })
  10-09-2023: 10-09-2023;

  @Prop({ type: 11-09-2023 })
  11-09-2023: 11-09-2023;

  @Prop({ type: 12-09-2023 })
  12-09-2023: 12-09-2023;

  @Prop({ type: 13-09-2023 })
  13-09-2023: 13-09-2023;

  @Prop({ type: 14-09-2023 })
  14-09-2023: 14-09-2023;

  @Prop({ type: 15-09-2023 })
  15-09-2023: 15-09-2023;

  @Prop({ type: 16-09-2023 })
  16-09-2023: 16-09-2023;

  @Prop({ type: 17-09-2023 })
  17-09-2023: 17-09-2023;

  @Prop({ type: 18-09-2023 })
  18-09-2023: 18-09-2023;

  @Prop({ type: 30-08-2023 })
  30-08-2023: 30-08-2023;

  @Prop({ type: 31-08-2023 })
  31-08-2023: 31-08-2023;

  @Prop({ type: 19-09-2023 })
  19-09-2023: 19-09-2023;

  @Prop({ type: 20-09-2023 })
  20-09-2023: 20-09-2023;

  @Prop({ type: 21-09-2023 })
  21-09-2023: 21-09-2023;

  @Prop({ type: 22-09-2023 })
  22-09-2023: 22-09-2023;

  @Prop({ type: 23-09-2023 })
  23-09-2023: 23-09-2023;

  @Prop({ type: 24-09-2023 })
  24-09-2023: 24-09-2023;

  @Prop({ type: 25-09-2023 })
  25-09-2023: 25-09-2023;

  @Prop({ type: 26-09-2023 })
  26-09-2023: 26-09-2023;

  @Prop({ type: 27-09-2023 })
  27-09-2023: 27-09-2023;

  @Prop({ type: 28-09-2023 })
  28-09-2023: 28-09-2023;

  @Prop({ type: 29-09-2023 })
  29-09-2023: 29-09-2023;

  @Prop({ type: 30-09-2023 })
  30-09-2023: 30-09-2023;

  @Prop({ type: 01-10-2023 })
  01-10-2023: 01-10-2023;

  @Prop({ type: 02-10-2023 })
  02-10-2023: 02-10-2023;

  @Prop({ type: 03-10-2023 })
  03-10-2023: 03-10-2023;

  @Prop({ type: 04-10-2023 })
  04-10-2023: 04-10-2023;

  @Prop({ type: 05-10-2023 })
  05-10-2023: 05-10-2023;

  @Prop({ type: 06-10-2023 })
  06-10-2023: 06-10-2023;

  @Prop({ type: 07-10-2023 })
  07-10-2023: 07-10-2023;

  @Prop({ type: 08-10-2023 })
  08-10-2023: 08-10-2023;

  @Prop({ type: 09-10-2023 })
  09-10-2023: 09-10-2023;

  @Prop({ type: 10-10-2023 })
  10-10-2023: 10-10-2023;

  @Prop({ type: 11-10-2023 })
  11-10-2023: 11-10-2023;

  @Prop({ type: 12-10-2023 })
  12-10-2023: 12-10-2023;

  @Prop({ type: 13-10-2023 })
  13-10-2023: 13-10-2023;

  @Prop({ type: 16-04-2021 })
  16-04-2021: 16-04-2021;

  @Prop({ type: 17-04-2021 })
  17-04-2021: 17-04-2021;

  @Prop({ type: 18-04-2021 })
  18-04-2021: 18-04-2021;

  @Prop({ type: 19-04-2021 })
  19-04-2021: 19-04-2021;

  @Prop({ type: 20-04-2021 })
  20-04-2021: 20-04-2021;

  @Prop({ type: 16-10-2023 })
  16-10-2023: 16-10-2023;

  @Prop({ type: 21-10-2023 })
  21-10-2023: 21-10-2023;

  @Prop({ type: 22-10-2023 })
  22-10-2023: 22-10-2023;

  @Prop({ type: 23-10-2023 })
  23-10-2023: 23-10-2023;

  @Prop({ type: 17-10-2023 })
  17-10-2023: 17-10-2023;

  @Prop({ type: 18-10-2023 })
  18-10-2023: 18-10-2023;

  @Prop({ type: 19-10-2023 })
  19-10-2023: 19-10-2023;

  @Prop({ type: 20-10-2023 })
  20-10-2023: 20-10-2023;

  @Prop({ type: 16-12-2023 })
  16-12-2023: 16-12-2023;

  @Prop({ type: 17-12-2023 })
  17-12-2023: 17-12-2023;

  @Prop({ type: 18-12-2023 })
  18-12-2023: 18-12-2023;

  @Prop({ type: 19-12-2023 })
  19-12-2023: 19-12-2023;

  @Prop({ type: 20-12-2023 })
  20-12-2023: 20-12-2023;

  @Prop({ type: 21-12-2023 })
  21-12-2023: 21-12-2023;

  @Prop({ type: 22-12-2023 })
  22-12-2023: 22-12-2023;

  @Prop({ type: 23-12-2023 })
  23-12-2023: 23-12-2023;

  @Prop({ type: 24-12-2023 })
  24-12-2023: 24-12-2023;

  @Prop({ type: 25-12-2023 })
  25-12-2023: 25-12-2023;

  @Prop({ type: 26-12-2023 })
  26-12-2023: 26-12-2023;

  @Prop({ type: 27-12-2023 })
  27-12-2023: 27-12-2023;

  @Prop({ type: 28-12-2023 })
  28-12-2023: 28-12-2023;

  @Prop({ type: 29-12-2023 })
  29-12-2023: 29-12-2023;

  @Prop({ type: 30-12-2023 })
  30-12-2023: 30-12-2023;

  @Prop({ type: 31-12-2023 })
  31-12-2023: 31-12-2023;

  @Prop({ type: 25-10-2023 })
  25-10-2023: 25-10-2023;

  @Prop({ type: 26-10-2023 })
  26-10-2023: 26-10-2023;

  @Prop({ type: 27-10-2023 })
  27-10-2023: 27-10-2023;

  @Prop({ type: 28-10-2023 })
  28-10-2023: 28-10-2023;

  @Prop({ type: 29-10-2023 })
  29-10-2023: 29-10-2023;

  @Prop({ type: 30-10-2023 })
  30-10-2023: 30-10-2023;

  @Prop({ type: 01-11-2023 })
  01-11-2023: 01-11-2023;

  @Prop({ type: 02-11-2023 })
  02-11-2023: 02-11-2023;

  @Prop({ type: 03-11-2023 })
  03-11-2023: 03-11-2023;

  @Prop({ type: 24-10-2023 })
  24-10-2023: 24-10-2023;

  @Prop({ type: 31-10-2023 })
  31-10-2023: 31-10-2023;

  @Prop({ type: 04-11-2023 })
  04-11-2023: 04-11-2023;

  @Prop({ type: 05-11-2023 })
  05-11-2023: 05-11-2023;

  @Prop({ type: 06-11-2023 })
  06-11-2023: 06-11-2023;

  @Prop({ type: 01-12-2023 })
  01-12-2023: 01-12-2023;

  @Prop({ type: 02-12-2023 })
  02-12-2023: 02-12-2023;

  @Prop({ type: 07-11-2023 })
  07-11-2023: 07-11-2023;

  @Prop({ type: 08-11-2023 })
  08-11-2023: 08-11-2023;

  @Prop({ type: 09-11-2023 })
  09-11-2023: 09-11-2023;

  @Prop({ type: 10-11-2023 })
  10-11-2023: 10-11-2023;

  @Prop({ type: 11-11-2023 })
  11-11-2023: 11-11-2023;

  @Prop({ type: 12-11-2023 })
  12-11-2023: 12-11-2023;

  @Prop({ type: 13-11-2023 })
  13-11-2023: 13-11-2023;

  @Prop({ type: 14-11-2023 })
  14-11-2023: 14-11-2023;

  @Prop({ type: 15-11-2023 })
  15-11-2023: 15-11-2023;

  @Prop({ type: 16-11-2023 })
  16-11-2023: 16-11-2023;

  @Prop({ type: 22-11-2023 })
  22-11-2023: 22-11-2023;

  @Prop({ type: 23-11-2023 })
  23-11-2023: 23-11-2023;

  @Prop({ type: 24-11-2023 })
  24-11-2023: 24-11-2023;

  @Prop({ type: 25-11-2023 })
  25-11-2023: 25-11-2023;

  @Prop({ type: 26-11-2023 })
  26-11-2023: 26-11-2023;

  @Prop({ type: 27-11-2023 })
  27-11-2023: 27-11-2023;

  @Prop({ type: 28-11-2023 })
  28-11-2023: 28-11-2023;

  @Prop({ type: 17-11-2023 })
  17-11-2023: 17-11-2023;

  @Prop({ type: 18-11-2023 })
  18-11-2023: 18-11-2023;

  @Prop({ type: 19-11-2023 })
  19-11-2023: 19-11-2023;

  @Prop({ type: 20-11-2023 })
  20-11-2023: 20-11-2023;

  @Prop({ type: 21-11-2023 })
  21-11-2023: 21-11-2023;

  @Prop({ type: 06-12-2023 })
  06-12-2023: 06-12-2023;

  @Prop({ type: 07-12-2023 })
  07-12-2023: 07-12-2023;

  @Prop({ type: 29-11-2023 })
  29-11-2023: 29-11-2023;

  @Prop({ type: 30-11-2023 })
  30-11-2023: 30-11-2023;

  @Prop({ type: 03-12-2023 })
  03-12-2023: 03-12-2023;

  @Prop({ type: 04-12-2023 })
  04-12-2023: 04-12-2023;

  @Prop({ type: 08-12-2023 })
  08-12-2023: 08-12-2023;

  @Prop({ type: 05-12-2023 })
  05-12-2023: 05-12-2023;

  @Prop({ type: 09-12-2023 })
  09-12-2023: 09-12-2023;

  @Prop({ type: 10-12-2023 })
  10-12-2023: 10-12-2023;

  @Prop({ type: 13-12-2023 })
  13-12-2023: 13-12-2023;

  @Prop({ type: 14-12-2023 })
  14-12-2023: 14-12-2023;

  @Prop({ type: 15-12-2023 })
  15-12-2023: 15-12-2023;

  @Prop({ type: 01-01-2024 })
  01-01-2024: 01-01-2024;

  @Prop({ type: 02-01-2024 })
  02-01-2024: 02-01-2024;

  @Prop({ type: 03-01-2024 })
  03-01-2024: 03-01-2024;

  @Prop({ type: 04-01-2024 })
  04-01-2024: 04-01-2024;

  @Prop({ type: 05-01-2024 })
  05-01-2024: 05-01-2024;

  @Prop({ type: 24-01-2024 })
  24-01-2024: 24-01-2024;

  @Prop({ type: 06-01-2024 })
  06-01-2024: 06-01-2024;

  @Prop({ type: 07-01-2024 })
  07-01-2024: 07-01-2024;

  @Prop({ type: 08-01-2024 })
  08-01-2024: 08-01-2024;

  @Prop({ type: 09-01-2024 })
  09-01-2024: 09-01-2024;

  @Prop({ type: 10-01-2024 })
  10-01-2024: 10-01-2024;

  @Prop({ type: 11-01-2024 })
  11-01-2024: 11-01-2024;

  @Prop({ type: 12-01-2024 })
  12-01-2024: 12-01-2024;

  @Prop({ type: 16-01-2024 })
  16-01-2024: 16-01-2024;

  @Prop({ type: 17-01-2024 })
  17-01-2024: 17-01-2024;

  @Prop({ type: 18-01-2024 })
  18-01-2024: 18-01-2024;

  @Prop({ type: 19-01-2024 })
  19-01-2024: 19-01-2024;

  @Prop({ type: 20-01-2024 })
  20-01-2024: 20-01-2024;

  @Prop({ type: 21-01-2024 })
  21-01-2024: 21-01-2024;

  @Prop({ type: 22-01-2024 })
  22-01-2024: 22-01-2024;

  @Prop({ type: 23-01-2024 })
  23-01-2024: 23-01-2024;

  @Prop({ type: 25-01-2024 })
  25-01-2024: 25-01-2024;

  @Prop({ type: 26-01-2024 })
  26-01-2024: 26-01-2024;

  @Prop({ type: 27-01-2024 })
  27-01-2024: 27-01-2024;

  @Prop({ type: 28-01-2024 })
  28-01-2024: 28-01-2024;

  @Prop({ type: 29-01-2024 })
  29-01-2024: 29-01-2024;

  @Prop({ type: 30-01-2024 })
  30-01-2024: 30-01-2024;

  @Prop({ type: 31-01-2024 })
  31-01-2024: 31-01-2024;

  @Prop({ type: 13-01-2024 })
  13-01-2024: 13-01-2024;

  @Prop({ type: 14-01-2024 })
  14-01-2024: 14-01-2024;

  @Prop({ type: 15-01-2024 })
  15-01-2024: 15-01-2024;

  @Prop({ type: 01-02-2024 })
  01-02-2024: 01-02-2024;

  @Prop({ type: 02-02-2024 })
  02-02-2024: 02-02-2024;

  @Prop({ type: 03-02-2024 })
  03-02-2024: 03-02-2024;

  @Prop({ type: 04-02-2024 })
  04-02-2024: 04-02-2024;

  @Prop({ type: 05-02-2024 })
  05-02-2024: 05-02-2024;

  @Prop({ type: 06-02-2024 })
  06-02-2024: 06-02-2024;

  @Prop({ type: 07-02-2024 })
  07-02-2024: 07-02-2024;

  @Prop({ type: 08-02-2024 })
  08-02-2024: 08-02-2024;

  @Prop({ type: 09-02-2024 })
  09-02-2024: 09-02-2024;

  @Prop({ type: 10-02-2024 })
  10-02-2024: 10-02-2024;

  @Prop({ type: 11-02-2024 })
  11-02-2024: 11-02-2024;

  @Prop({ type: 12-02-2024 })
  12-02-2024: 12-02-2024;

  @Prop({ type: 13-02-2024 })
  13-02-2024: 13-02-2024;

  @Prop({ type: 14-02-2024 })
  14-02-2024: 14-02-2024;

  @Prop({ type: 15-02-2024 })
  15-02-2024: 15-02-2024;

  @Prop({ type: 16-02-2024 })
  16-02-2024: 16-02-2024;

  @Prop({ type: 17-02-2024 })
  17-02-2024: 17-02-2024;

  @Prop({ type: 18-02-2024 })
  18-02-2024: 18-02-2024;

  @Prop({ type: 19-02-2024 })
  19-02-2024: 19-02-2024;

  @Prop({ type: 20-02-2024 })
  20-02-2024: 20-02-2024;

  @Prop({ type: 21-02-2024 })
  21-02-2024: 21-02-2024;

  @Prop({ type: 22-02-2024 })
  22-02-2024: 22-02-2024;

  @Prop({ type: 23-02-2024 })
  23-02-2024: 23-02-2024;

  @Prop({ type: 24-02-2024 })
  24-02-2024: 24-02-2024;

  @Prop({ type: 25-02-2024 })
  25-02-2024: 25-02-2024;

  @Prop({ type: 26-02-2024 })
  26-02-2024: 26-02-2024;

  @Prop({ type: 01-03-2024 })
  01-03-2024: 01-03-2024;

  @Prop({ type: 02-03-2024 })
  02-03-2024: 02-03-2024;

  @Prop({ type: 03-03-2024 })
  03-03-2024: 03-03-2024;

  @Prop({ type: 04-03-2024 })
  04-03-2024: 04-03-2024;

  @Prop({ type: 05-03-2024 })
  05-03-2024: 05-03-2024;

  @Prop({ type: 06-03-2024 })
  06-03-2024: 06-03-2024;

  @Prop({ type: 07-03-2024 })
  07-03-2024: 07-03-2024;

  @Prop({ type: 08-03-2024 })
  08-03-2024: 08-03-2024;

  @Prop({ type: 09-03-2024 })
  09-03-2024: 09-03-2024;

  @Prop({ type: 10-03-2024 })
  10-03-2024: 10-03-2024;

  @Prop({ type: 11-03-2024 })
  11-03-2024: 11-03-2024;

  @Prop({ type: 12-03-2024 })
  12-03-2024: 12-03-2024;

  @Prop({ type: 13-03-2024 })
  13-03-2024: 13-03-2024;

  @Prop({ type: 14-03-2024 })
  14-03-2024: 14-03-2024;

  @Prop({ type: 15-03-2024 })
  15-03-2024: 15-03-2024;

  @Prop({ type: 16-03-2024 })
  16-03-2024: 16-03-2024;

  @Prop({ type: 17-03-2024 })
  17-03-2024: 17-03-2024;

  @Prop({ type: 18-03-2024 })
  18-03-2024: 18-03-2024;

  @Prop({ type: 19-03-2024 })
  19-03-2024: 19-03-2024;

  @Prop({ type: 01-04-2024 })
  01-04-2024: 01-04-2024;

  @Prop({ type: 02-04-2024 })
  02-04-2024: 02-04-2024;

  @Prop({ type: 03-04-2024 })
  03-04-2024: 03-04-2024;

  @Prop({ type: 04-04-2024 })
  04-04-2024: 04-04-2024;

  @Prop({ type: 05-04-2024 })
  05-04-2024: 05-04-2024;

  @Prop({ type: 06-04-2024 })
  06-04-2024: 06-04-2024;

  @Prop({ type: 07-04-2024 })
  07-04-2024: 07-04-2024;

  @Prop({ type: 27-03-2024 })
  27-03-2024: 27-03-2024;

  @Prop({ type: 08-04-2024 })
  08-04-2024: 08-04-2024;

  @Prop({ type: 09-04-2024 })
  09-04-2024: 09-04-2024;

  @Prop({ type: 10-04-2024 })
  10-04-2024: 10-04-2024;

  @Prop({ type: 11-04-2024 })
  11-04-2024: 11-04-2024;

  @Prop({ type: 12-04-2024 })
  12-04-2024: 12-04-2024;

  @Prop({ type: 16-04-2024 })
  16-04-2024: 16-04-2024;

  @Prop({ type: 17-04-2024 })
  17-04-2024: 17-04-2024;

  @Prop({ type: 18-04-2024 })
  18-04-2024: 18-04-2024;

  @Prop({ type: 19-04-2024 })
  19-04-2024: 19-04-2024;

  @Prop({ type: 20-04-2024 })
  20-04-2024: 20-04-2024;

  @Prop({ type: 21-04-2024 })
  21-04-2024: 21-04-2024;

  @Prop({ type: 22-04-2024 })
  22-04-2024: 22-04-2024;

  @Prop({ type: 23-04-2024 })
  23-04-2024: 23-04-2024;

  @Prop({ type: 13-04-2024 })
  13-04-2024: 13-04-2024;

  @Prop({ type: 14-04-2024 })
  14-04-2024: 14-04-2024;

  @Prop({ type: 15-04-2024 })
  15-04-2024: 15-04-2024;

  @Prop({ type: 20-03-2024 })
  20-03-2024: 20-03-2024;

  @Prop({ type: 21-03-2024 })
  21-03-2024: 21-03-2024;

  @Prop({ type: 22-03-2024 })
  22-03-2024: 22-03-2024;

  @Prop({ type: 23-03-2024 })
  23-03-2024: 23-03-2024;

  @Prop({ type: 24-03-2024 })
  24-03-2024: 24-03-2024;

  @Prop({ type: 25-03-2024 })
  25-03-2024: 25-03-2024;

  @Prop({ type: 26-03-2024 })
  26-03-2024: 26-03-2024;

  @Prop({ type: 28-03-2024 })
  28-03-2024: 28-03-2024;

  @Prop({ type: 29-03-2024 })
  29-03-2024: 29-03-2024;

  @Prop({ type: 30-03-2024 })
  30-03-2024: 30-03-2024;

  @Prop({ type: 31-03-2024 })
  31-03-2024: 31-03-2024;

  @Prop({ type: 24-04-2024 })
  24-04-2024: 24-04-2024;

  @Prop({ type: 25-04-2024 })
  25-04-2024: 25-04-2024;

  @Prop({ type: 26-04-2024 })
  26-04-2024: 26-04-2024;

  @Prop({ type: 27-04-2024 })
  27-04-2024: 27-04-2024;

  @Prop({ type: 28-04-2024 })
  28-04-2024: 28-04-2024;

  @Prop({ type: 29-04-2024 })
  29-04-2024: 29-04-2024;

  @Prop({ type: 30-04-2024 })
  30-04-2024: 30-04-2024;

  @Prop({ type: 01-05-2024 })
  01-05-2024: 01-05-2024;

  @Prop({ type: 02-05-2024 })
  02-05-2024: 02-05-2024;

  @Prop({ type: 03-05-2024 })
  03-05-2024: 03-05-2024;

  @Prop({ type: 04-05-2024 })
  04-05-2024: 04-05-2024;

  @Prop({ type: 05-05-2024 })
  05-05-2024: 05-05-2024;

  @Prop({ type: 06-05-2024 })
  06-05-2024: 06-05-2024;

  @Prop({ type: 07-05-2024 })
  07-05-2024: 07-05-2024;

  @Prop({ type: 08-05-2024 })
  08-05-2024: 08-05-2024;

  @Prop({ type: 09-05-2024 })
  09-05-2024: 09-05-2024;

  @Prop({ type: 10-05-2024 })
  10-05-2024: 10-05-2024;

  @Prop({ type: 11-05-2024 })
  11-05-2024: 11-05-2024;

  @Prop({ type: 12-05-2024 })
  12-05-2024: 12-05-2024;

  @Prop({ type: 13-05-2024 })
  13-05-2024: 13-05-2024;

  @Prop({ type: 14-05-2024 })
  14-05-2024: 14-05-2024;

  @Prop({ type: 15-05-2024 })
  15-05-2024: 15-05-2024;

  @Prop({ type: 16-05-2024 })
  16-05-2024: 16-05-2024;

  @Prop({ type: 17-05-2024 })
  17-05-2024: 17-05-2024;

  @Prop({ type: 18-05-2024 })
  18-05-2024: 18-05-2024;

  @Prop({ type: 19-05-2024 })
  19-05-2024: 19-05-2024;

  @Prop({ type: 20-05-2024 })
  20-05-2024: 20-05-2024;

  @Prop({ type: 21-05-2024 })
  21-05-2024: 21-05-2024;

  @Prop({ type: 22-05-2024 })
  22-05-2024: 22-05-2024;

  @Prop({ type: 23-05-2024 })
  23-05-2024: 23-05-2024;

  @Prop({ type: 24-05-2024 })
  24-05-2024: 24-05-2024;

  @Prop({ type: 25-05-2024 })
  25-05-2024: 25-05-2024;

  @Prop({ type: 26-05-2024 })
  26-05-2024: 26-05-2024;

  @Prop({ type: 27-05-2024 })
  27-05-2024: 27-05-2024;

  @Prop({ type: 28-05-2024 })
  28-05-2024: 28-05-2024;

  @Prop({ type: 29-05-2024 })
  29-05-2024: 29-05-2024;

  @Prop({ type: 30-05-2024 })
  30-05-2024: 30-05-2024;

  @Prop({ type: 31-05-2024 })
  31-05-2024: 31-05-2024;

  @Prop({ type: 01-06-2024 })
  01-06-2024: 01-06-2024;

  @Prop({ type: 02-06-2024 })
  02-06-2024: 02-06-2024;

  @Prop({ type: 03-06-2024 })
  03-06-2024: 03-06-2024;

  @Prop({ type: 04-06-2024 })
  04-06-2024: 04-06-2024;

  @Prop({ type: 05-06-2024 })
  05-06-2024: 05-06-2024;

  @Prop({ type: 06-06-2024 })
  06-06-2024: 06-06-2024;

  @Prop({ type: 07-06-2024 })
  07-06-2024: 07-06-2024;

  @Prop({ type: 16-06-2024 })
  16-06-2024: 16-06-2024;

  @Prop({ type: 17-06-2024 })
  17-06-2024: 17-06-2024;

  @Prop({ type: 18-06-2024 })
  18-06-2024: 18-06-2024;

  @Prop({ type: 19-06-2024 })
  19-06-2024: 19-06-2024;

  @Prop({ type: 20-06-2024 })
  20-06-2024: 20-06-2024;

  @Prop({ type: 08-06-2024 })
  08-06-2024: 08-06-2024;

  @Prop({ type: 09-06-2024 })
  09-06-2024: 09-06-2024;

  @Prop({ type: 10-06-2024 })
  10-06-2024: 10-06-2024;

  @Prop({ type: 12-06-2024 })
  12-06-2024: 12-06-2024;

  @Prop({ type: 13-06-2024 })
  13-06-2024: 13-06-2024;

  @Prop({ type: 21-06-2024 })
  21-06-2024: 21-06-2024;

  @Prop({ type: 22-06-2024 })
  22-06-2024: 22-06-2024;

  @Prop({ type: 23-06-2024 })
  23-06-2024: 23-06-2024;

  @Prop({ type: 24-06-2024 })
  24-06-2024: 24-06-2024;

  @Prop({ type: 25-06-2024 })
  25-06-2024: 25-06-2024;

  @Prop({ type: 11-06-2024 })
  11-06-2024: 11-06-2024;

  @Prop({ type: 14-06-2024 })
  14-06-2024: 14-06-2024;

  @Prop({ type: 15-06-2024 })
  15-06-2024: 15-06-2024;

  @Prop({ type: 26-06-2024 })
  26-06-2024: 26-06-2024;

  @Prop({ type: 01-07-2024 })
  01-07-2024: 01-07-2024;

  @Prop({ type: 27-06-2024 })
  27-06-2024: 27-06-2024;

  @Prop({ type: 28-06-2024 })
  28-06-2024: 28-06-2024;

  @Prop({ type: 29-06-2024 })
  29-06-2024: 29-06-2024;

  @Prop({ type: 30-06-2024 })
  30-06-2024: 30-06-2024;

  @Prop({ type: 02-07-2024 })
  02-07-2024: 02-07-2024;

  @Prop({ type: 03-07-2024 })
  03-07-2024: 03-07-2024;

  @Prop({ type: 04-07-2024 })
  04-07-2024: 04-07-2024;

  @Prop({ type: 05-07-2024 })
  05-07-2024: 05-07-2024;

  @Prop({ type: 06-07-2024 })
  06-07-2024: 06-07-2024;

  @Prop({ type: 07-07-2024 })
  07-07-2024: 07-07-2024;

  @Prop({ type: 08-07-2024 })
  08-07-2024: 08-07-2024;

  @Prop({ type: 09-07-2024 })
  09-07-2024: 09-07-2024;

  @Prop({ type: 10-07-2024 })
  10-07-2024: 10-07-2024;

  @Prop({ type: 11-07-2024 })
  11-07-2024: 11-07-2024;

  @Prop({ type: 12-07-2024 })
  12-07-2024: 12-07-2024;

  @Prop({ type: 16-07-2024 })
  16-07-2024: 16-07-2024;

  @Prop({ type: 17-07-2024 })
  17-07-2024: 17-07-2024;

  @Prop({ type: 18-07-2024 })
  18-07-2024: 18-07-2024;

  @Prop({ type: 19-07-2024 })
  19-07-2024: 19-07-2024;

  @Prop({ type: 13-07-2024 })
  13-07-2024: 13-07-2024;

  @Prop({ type: 14-07-2024 })
  14-07-2024: 14-07-2024;

  @Prop({ type: 15-07-2024 })
  15-07-2024: 15-07-2024;

  @Prop({ type: 20-07-2024 })
  20-07-2024: 20-07-2024;

  @Prop({ type: 21-07-2024 })
  21-07-2024: 21-07-2024;

  @Prop({ type: 22-07-2024 })
  22-07-2024: 22-07-2024;

  @Prop({ type: 23-07-2024 })
  23-07-2024: 23-07-2024;

  @Prop({ type: 24-07-2024 })
  24-07-2024: 24-07-2024;

  @Prop({ type: 25-07-2024 })
  25-07-2024: 25-07-2024;

  @Prop({ type: 26-07-2024 })
  26-07-2024: 26-07-2024;

  @Prop({ type: 27-07-2024 })
  27-07-2024: 27-07-2024;

  @Prop({ type: 28-07-2024 })
  28-07-2024: 28-07-2024;

  @Prop({ type: 29-07-2024 })
  29-07-2024: 29-07-2024;

  @Prop({ type: 30-07-2024 })
  30-07-2024: 30-07-2024;

  @Prop({ type: 31-07-2024 })
  31-07-2024: 31-07-2024;

  @Prop({ type: 01-08-2024 })
  01-08-2024: 01-08-2024;

  @Prop({ type: 02-08-2024 })
  02-08-2024: 02-08-2024;

  @Prop({ type: 03-08-2024 })
  03-08-2024: 03-08-2024;

  @Prop({ type: 04-08-2024 })
  04-08-2024: 04-08-2024;

  @Prop({ type: 05-08-2024 })
  05-08-2024: 05-08-2024;

  @Prop({ type: 06-08-2024 })
  06-08-2024: 06-08-2024;

  @Prop({ type: 07-08-2024 })
  07-08-2024: 07-08-2024;

  @Prop({ type: 08-08-2024 })
  08-08-2024: 08-08-2024;

  @Prop({ type: 09-08-2024 })
  09-08-2024: 09-08-2024;

  @Prop({ type: 10-08-2024 })
  10-08-2024: 10-08-2024;

  @Prop({ type: 16-08-2024 })
  16-08-2024: 16-08-2024;

  @Prop({ type: 17-08-2024 })
  17-08-2024: 17-08-2024;

  @Prop({ type: 18-08-2024 })
  18-08-2024: 18-08-2024;

  @Prop({ type: 19-08-2024 })
  19-08-2024: 19-08-2024;

  @Prop({ type: 20-08-2024 })
  20-08-2024: 20-08-2024;

  @Prop({ type: 21-08-2024 })
  21-08-2024: 21-08-2024;

  @Prop({ type: 22-08-2024 })
  22-08-2024: 22-08-2024;

  @Prop({ type: 23-08-2024 })
  23-08-2024: 23-08-2024;

  @Prop({ type: 11-08-2024 })
  11-08-2024: 11-08-2024;

  @Prop({ type: 12-08-2024 })
  12-08-2024: 12-08-2024;

  @Prop({ type: 13-08-2024 })
  13-08-2024: 13-08-2024;

  @Prop({ type: 14-08-2024 })
  14-08-2024: 14-08-2024;

  @Prop({ type: 15-08-2024 })
  15-08-2024: 15-08-2024;

  @Prop({ type: 24-08-2024 })
  24-08-2024: 24-08-2024;

  @Prop({ type: 25-08-2024 })
  25-08-2024: 25-08-2024;

  @Prop({ type: 26-08-2024 })
  26-08-2024: 26-08-2024;

  @Prop({ type: 27-08-2024 })
  27-08-2024: 27-08-2024;

  @Prop({ type: 28-08-2024 })
  28-08-2024: 28-08-2024;

  @Prop({ type: 29-08-2024 })
  29-08-2024: 29-08-2024;

  @Prop({ type: 01-09-2024 })
  01-09-2024: 01-09-2024;

  @Prop({ type: 02-09-2024 })
  02-09-2024: 02-09-2024;

  @Prop({ type: 30-08-2024 })
  30-08-2024: 30-08-2024;

  @Prop({ type: 31-08-2024 })
  31-08-2024: 31-08-2024;

  @Prop({ type: 03-09-2024 })
  03-09-2024: 03-09-2024;

  @Prop({ type: 04-09-2024 })
  04-09-2024: 04-09-2024;

  @Prop({ type: 05-09-2024 })
  05-09-2024: 05-09-2024;

  @Prop({ type: 06-09-2024 })
  06-09-2024: 06-09-2024;

  @Prop({ type: 07-09-2024 })
  07-09-2024: 07-09-2024;

  @Prop({ type: 08-09-2024 })
  08-09-2024: 08-09-2024;

  @Prop({ type: 09-09-2024 })
  09-09-2024: 09-09-2024;

  @Prop({ type: 11-09-2024 })
  11-09-2024: 11-09-2024;

  @Prop({ type: 25-09-2024 })
  25-09-2024: 25-09-2024;

  @Prop({ type: 26-09-2024 })
  26-09-2024: 26-09-2024;

  @Prop({ type: 27-09-2024 })
  27-09-2024: 27-09-2024;

  @Prop({ type: 28-09-2024 })
  28-09-2024: 28-09-2024;

  @Prop({ type: 29-09-2024 })
  29-09-2024: 29-09-2024;

  @Prop({ type: 30-09-2024 })
  30-09-2024: 30-09-2024;

  @Prop({ type: 16-09-2024 })
  16-09-2024: 16-09-2024;

  @Prop({ type: 17-09-2024 })
  17-09-2024: 17-09-2024;

  @Prop({ type: 18-09-2024 })
  18-09-2024: 18-09-2024;

  @Prop({ type: 19-09-2024 })
  19-09-2024: 19-09-2024;

  @Prop({ type: 20-09-2024 })
  20-09-2024: 20-09-2024;

  @Prop({ type: 21-09-2024 })
  21-09-2024: 21-09-2024;

  @Prop({ type: 22-09-2024 })
  22-09-2024: 22-09-2024;

  @Prop({ type: 23-09-2024 })
  23-09-2024: 23-09-2024;

  @Prop({ type: 24-09-2024 })
  24-09-2024: 24-09-2024;

  @Prop({ type: 01-10-2024 })
  01-10-2024: 01-10-2024;

  @Prop({ type: 02-10-2024 })
  02-10-2024: 02-10-2024;

  @Prop({ type: 03-10-2024 })
  03-10-2024: 03-10-2024;

  @Prop({ type: 04-10-2024 })
  04-10-2024: 04-10-2024;

  @Prop({ type: 05-10-2024 })
  05-10-2024: 05-10-2024;

  @Prop({ type: 06-10-2024 })
  06-10-2024: 06-10-2024;

  @Prop({ type: 07-10-2024 })
  07-10-2024: 07-10-2024;

  @Prop({ type: 08-10-2024 })
  08-10-2024: 08-10-2024;

  @Prop({ type: 16-10-2024 })
  16-10-2024: 16-10-2024;

  @Prop({ type: 17-10-2024 })
  17-10-2024: 17-10-2024;

  @Prop({ type: 18-10-2024 })
  18-10-2024: 18-10-2024;

  @Prop({ type: 09-10-2024 })
  09-10-2024: 09-10-2024;

  @Prop({ type: 10-10-2024 })
  10-10-2024: 10-10-2024;

  @Prop({ type: 11-10-2024 })
  11-10-2024: 11-10-2024;

  @Prop({ type: 12-10-2024 })
  12-10-2024: 12-10-2024;

  @Prop({ type: 13-10-2024 })
  13-10-2024: 13-10-2024;

  @Prop({ type: 14-10-2024 })
  14-10-2024: 14-10-2024;

  @Prop({ type: 19-10-2024 })
  19-10-2024: 19-10-2024;

  @Prop({ type: 20-10-2024 })
  20-10-2024: 20-10-2024;

  @Prop({ type: 21-10-2024 })
  21-10-2024: 21-10-2024;

  @Prop({ type: 01-11-2024 })
  01-11-2024: 01-11-2024;

  @Prop({ type: 02-11-2024 })
  02-11-2024: 02-11-2024;

  @Prop({ type: 03-11-2024 })
  03-11-2024: 03-11-2024;

  @Prop({ type: 04-11-2024 })
  04-11-2024: 04-11-2024;

  @Prop({ type: 05-11-2024 })
  05-11-2024: 05-11-2024;

  @Prop({ type: 22-10-2024 })
  22-10-2024: 22-10-2024;

  @Prop({ type: 23-10-2024 })
  23-10-2024: 23-10-2024;

  @Prop({ type: 24-10-2024 })
  24-10-2024: 24-10-2024;

  @Prop({ type: 15-10-2024 })
  15-10-2024: 15-10-2024;

  @Prop({ type: 28-10-2024 })
  28-10-2024: 28-10-2024;

  @Prop({ type: 29-10-2024 })
  29-10-2024: 29-10-2024;

  @Prop({ type: 30-10-2024 })
  30-10-2024: 30-10-2024;

  @Prop({ type: 31-10-2024 })
  31-10-2024: 31-10-2024;

  @Prop({ type: 06-11-2024 })
  06-11-2024: 06-11-2024;

  @Prop({ type: 07-11-2024 })
  07-11-2024: 07-11-2024;

  @Prop({ type: 08-11-2024 })
  08-11-2024: 08-11-2024;

  @Prop({ type: 09-11-2024 })
  09-11-2024: 09-11-2024;

  @Prop({ type: 10-11-2024 })
  10-11-2024: 10-11-2024;

  @Prop({ type: 11-11-2024 })
  11-11-2024: 11-11-2024;

  @Prop({ type: 12-11-2024 })
  12-11-2024: 12-11-2024;

  @Prop({ type: 13-11-2024 })
  13-11-2024: 13-11-2024;

  @Prop({ type: 14-11-2024 })
  14-11-2024: 14-11-2024;

  @Prop({ type: 15-11-2024 })
  15-11-2024: 15-11-2024;

  @Prop({ type: 16-11-2024 })
  16-11-2024: 16-11-2024;

  @Prop({ type: 17-11-2024 })
  17-11-2024: 17-11-2024;

  @Prop({ type: 18-11-2024 })
  18-11-2024: 18-11-2024;

  @Prop({ type: 19-11-2024 })
  19-11-2024: 19-11-2024;

  @Prop({ type: 20-11-2024 })
  20-11-2024: 20-11-2024;

  @Prop({ type: 21-11-2024 })
  21-11-2024: 21-11-2024;

  @Prop({ type: 22-11-2024 })
  22-11-2024: 22-11-2024;

  @Prop({ type: 23-11-2024 })
  23-11-2024: 23-11-2024;

  @Prop({ type: 24-11-2024 })
  24-11-2024: 24-11-2024;

  @Prop({ type: 25-11-2024 })
  25-11-2024: 25-11-2024;

  @Prop({ type: 26-11-2024 })
  26-11-2024: 26-11-2024;

  @Prop({ type: 27-11-2024 })
  27-11-2024: 27-11-2024;

  @Prop({ type: 28-11-2024 })
  28-11-2024: 28-11-2024;

  @Prop({ type: 29-11-2024 })
  29-11-2024: 29-11-2024;

  @Prop({ type: 01-12-2024 })
  01-12-2024: 01-12-2024;

  @Prop({ type: 02-12-2024 })
  02-12-2024: 02-12-2024;

  @Prop({ type: 03-12-2024 })
  03-12-2024: 03-12-2024;

  @Prop({ type: 04-12-2024 })
  04-12-2024: 04-12-2024;

  @Prop({ type: 05-12-2024 })
  05-12-2024: 05-12-2024;

  @Prop({ type: 06-12-2024 })
  06-12-2024: 06-12-2024;

  @Prop({ type: 07-12-2024 })
  07-12-2024: 07-12-2024;

  @Prop({ type: 08-12-2024 })
  08-12-2024: 08-12-2024;

  @Prop({ type: 11-12-2024 })
  11-12-2024: 11-12-2024;

  @Prop({ type: 12-12-2024 })
  12-12-2024: 12-12-2024;

  @Prop({ type: 16-12-2024 })
  16-12-2024: 16-12-2024;

  @Prop({ type: 17-12-2024 })
  17-12-2024: 17-12-2024;

  @Prop({ type: 18-12-2024 })
  18-12-2024: 18-12-2024;

  @Prop({ type: 19-12-2024 })
  19-12-2024: 19-12-2024;

  @Prop({ type: 09-12-2024 })
  09-12-2024: 09-12-2024;

  @Prop({ type: 10-12-2024 })
  10-12-2024: 10-12-2024;

  @Prop({ type: 20-12-2024 })
  20-12-2024: 20-12-2024;

  @Prop({ type: 30-12-2024 })
  30-12-2024: 30-12-2024;

  @Prop({ type: 31-12-2024 })
  31-12-2024: 31-12-2024;

  @Prop({ type: 01-01-2025 })
  01-01-2025: 01-01-2025;

  @Prop({ type: 02-01-2025 })
  02-01-2025: 02-01-2025;

  @Prop({ type: 03-01-2025 })
  03-01-2025: 03-01-2025;

  @Prop({ type: 21-12-2024 })
  21-12-2024: 21-12-2024;

  @Prop({ type: 08-01-2025 })
  08-01-2025: 08-01-2025;

  @Prop({ type: 09-01-2025 })
  09-01-2025: 09-01-2025;

  @Prop({ type: 10-01-2025 })
  10-01-2025: 10-01-2025;

  @Prop({ type: 11-01-2025 })
  11-01-2025: 11-01-2025;

  @Prop({ type: 12-01-2025 })
  12-01-2025: 12-01-2025;

  @Prop({ type: 13-01-2025 })
  13-01-2025: 13-01-2025;

  @Prop({ type: 04-01-2025 })
  04-01-2025: 04-01-2025;

  @Prop({ type: 05-01-2025 })
  05-01-2025: 05-01-2025;

  @Prop({ type: 06-01-2025 })
  06-01-2025: 06-01-2025;

  @Prop({ type: 07-01-2025 })
  07-01-2025: 07-01-2025;

  @Prop({ type: 14-01-2025 })
  14-01-2025: 14-01-2025;

  @Prop({ type: 15-01-2025 })
  15-01-2025: 15-01-2025;

  @Prop({ type: 16-01-2025 })
  16-01-2025: 16-01-2025;

  @Prop({ type: 17-01-2025 })
  17-01-2025: 17-01-2025;

  @Prop({ type: 29-12-2024 })
  29-12-2024: 29-12-2024;

  @Prop({ type: 18-01-2025 })
  18-01-2025: 18-01-2025;

  @Prop({ type: 19-01-2025 })
  19-01-2025: 19-01-2025;

  @Prop({ type: 20-01-2025 })
  20-01-2025: 20-01-2025;

  @Prop({ type: 21-01-2025 })
  21-01-2025: 21-01-2025;

  @Prop({ type: 22-01-2025 })
  22-01-2025: 22-01-2025;

  @Prop({ type: 23-01-2025 })
  23-01-2025: 23-01-2025;

  @Prop({ type: 24-01-2025 })
  24-01-2025: 24-01-2025;

  @Prop({ type: 25-01-2025 })
  25-01-2025: 25-01-2025;

  @Prop({ type: 26-01-2025 })
  26-01-2025: 26-01-2025;

  @Prop({ type: 27-01-2025 })
  27-01-2025: 27-01-2025;

  @Prop({ type: 28-01-2025 })
  28-01-2025: 28-01-2025;

  @Prop({ type: 29-01-2025 })
  29-01-2025: 29-01-2025;

  @Prop({ type: 30-01-2025 })
  30-01-2025: 30-01-2025;

  @Prop({ type: 31-01-2025 })
  31-01-2025: 31-01-2025;

  @Prop({ type: 01-02-2025 })
  01-02-2025: 01-02-2025;

  @Prop({ type: 02-02-2025 })
  02-02-2025: 02-02-2025;

  @Prop({ type: 03-02-2025 })
  03-02-2025: 03-02-2025;

  @Prop({ type: 04-02-2025 })
  04-02-2025: 04-02-2025;

  @Prop({ type: 05-02-2025 })
  05-02-2025: 05-02-2025;

  @Prop({ type: 06-02-2025 })
  06-02-2025: 06-02-2025;

  @Prop({ type: 07-02-2025 })
  07-02-2025: 07-02-2025;

  @Prop({ type: 08-02-2025 })
  08-02-2025: 08-02-2025;

  @Prop({ type: 09-02-2025 })
  09-02-2025: 09-02-2025;

  @Prop({ type: 10-02-2025 })
  10-02-2025: 10-02-2025;

  @Prop({ type: 11-02-2025 })
  11-02-2025: 11-02-2025;

  @Prop({ type: 12-02-2025 })
  12-02-2025: 12-02-2025;

  @Prop({ type: 13-02-2025 })
  13-02-2025: 13-02-2025;

  @Prop({ type: 16-02-2025 })
  16-02-2025: 16-02-2025;

  @Prop({ type: 17-02-2025 })
  17-02-2025: 17-02-2025;

  @Prop({ type: 18-02-2025 })
  18-02-2025: 18-02-2025;

  @Prop({ type: 19-02-2025 })
  19-02-2025: 19-02-2025;

  @Prop({ type: 20-02-2025 })
  20-02-2025: 20-02-2025;

  @Prop({ type: 21-02-2025 })
  21-02-2025: 21-02-2025;

  @Prop({ type: 14-02-2025 })
  14-02-2025: 14-02-2025;

  @Prop({ type: 15-02-2025 })
  15-02-2025: 15-02-2025;

  @Prop({ type: 26-02-2025 })
  26-02-2025: 26-02-2025;

  @Prop({ type: 27-02-2025 })
  27-02-2025: 27-02-2025;

  @Prop({ type: 28-02-2025 })
  28-02-2025: 28-02-2025;

  @Prop({ type: 22-02-2025 })
  22-02-2025: 22-02-2025;

  @Prop({ type: 23-02-2025 })
  23-02-2025: 23-02-2025;

  @Prop({ type: 24-02-2025 })
  24-02-2025: 24-02-2025;

  @Prop({ type: 25-02-2025 })
  25-02-2025: 25-02-2025;

  @Prop({ type: 01-03-2025 })
  01-03-2025: 01-03-2025;

  @Prop({ type: 02-03-2025 })
  02-03-2025: 02-03-2025;

  @Prop({ type: 03-03-2025 })
  03-03-2025: 03-03-2025;

  @Prop({ type: 04-03-2025 })
  04-03-2025: 04-03-2025;

  @Prop({ type: 05-03-2025 })
  05-03-2025: 05-03-2025;

  @Prop({ type: 06-03-2025 })
  06-03-2025: 06-03-2025;

  @Prop({ type: 07-03-2025 })
  07-03-2025: 07-03-2025;

  @Prop({ type: 08-03-2025 })
  08-03-2025: 08-03-2025;

  @Prop({ type: 09-03-2025 })
  09-03-2025: 09-03-2025;

  @Prop({ type: 10-03-2025 })
  10-03-2025: 10-03-2025;

  @Prop({ type: 11-03-2025 })
  11-03-2025: 11-03-2025;

  @Prop({ type: 12-03-2025 })
  12-03-2025: 12-03-2025;

  @Prop({ type: 13-03-2025 })
  13-03-2025: 13-03-2025;

  @Prop({ type: 14-03-2025 })
  14-03-2025: 14-03-2025;

  @Prop({ type: 15-03-2025 })
  15-03-2025: 15-03-2025;

  @Prop({ type: 16-03-2025 })
  16-03-2025: 16-03-2025;

  @Prop({ type: 17-03-2025 })
  17-03-2025: 17-03-2025;

  @Prop({ type: 18-03-2025 })
  18-03-2025: 18-03-2025;

  @Prop({ type: 19-03-2025 })
  19-03-2025: 19-03-2025;

  @Prop({ type: 20-03-2025 })
  20-03-2025: 20-03-2025;

  @Prop({ type: 21-03-2025 })
  21-03-2025: 21-03-2025;

  @Prop({ type: 22-03-2025 })
  22-03-2025: 22-03-2025;

  @Prop({ type: 23-03-2025 })
  23-03-2025: 23-03-2025;

  @Prop({ type: 24-03-2025 })
  24-03-2025: 24-03-2025;

  @Prop({ type: 25-03-2025 })
  25-03-2025: 25-03-2025;

  @Prop({ type: 26-03-2025 })
  26-03-2025: 26-03-2025;

  @Prop({ type: 27-03-2025 })
  27-03-2025: 27-03-2025;

  @Prop({ type: 28-03-2025 })
  28-03-2025: 28-03-2025;

  @Prop({ type: 29-03-2025 })
  29-03-2025: 29-03-2025;

  @Prop({ type: 01-04-2025 })
  01-04-2025: 01-04-2025;

  @Prop({ type: 02-04-2025 })
  02-04-2025: 02-04-2025;

  @Prop({ type: 03-04-2025 })
  03-04-2025: 03-04-2025;

  @Prop({ type: 04-04-2025 })
  04-04-2025: 04-04-2025;

  @Prop({ type: 30-03-2025 })
  30-03-2025: 30-03-2025;

  @Prop({ type: 31-03-2025 })
  31-03-2025: 31-03-2025;

  @Prop({ type: 05-04-2025 })
  05-04-2025: 05-04-2025;

  @Prop({ type: 06-04-2025 })
  06-04-2025: 06-04-2025;

  @Prop({ type: 07-04-2025 })
  07-04-2025: 07-04-2025;

  @Prop({ type: 08-04-2025 })
  08-04-2025: 08-04-2025;

  @Prop({ type: 09-04-2025 })
  09-04-2025: 09-04-2025;

  @Prop({ type: 10-04-2025 })
  10-04-2025: 10-04-2025;

  @Prop({ type: 11-04-2025 })
  11-04-2025: 11-04-2025;

  @Prop({ type: 16-04-2025 })
  16-04-2025: 16-04-2025;

  @Prop({ type: 17-04-2025 })
  17-04-2025: 17-04-2025;

  @Prop({ type: 18-04-2025 })
  18-04-2025: 18-04-2025;

  @Prop({ type: 19-04-2025 })
  19-04-2025: 19-04-2025;

  @Prop({ type: 20-04-2025 })
  20-04-2025: 20-04-2025;

  @Prop({ type: 12-04-2025 })
  12-04-2025: 12-04-2025;

  @Prop({ type: 14-05-2025 })
  14-05-2025: 14-05-2025;

  @Prop({ type: 15-05-2025 })
  15-05-2025: 15-05-2025;

  @Prop({ type: 16-07-2025 })
  16-07-2025: 16-07-2025;

  @Prop({ type: 17-07-2025 })
  17-07-2025: 17-07-2025;

  @Prop({ type: 18-07-2025 })
  18-07-2025: 18-07-2025;

  @Prop({ type: 13-04-2025 })
  13-04-2025: 13-04-2025;

  @Prop({ type: 14-04-2025 })
  14-04-2025: 14-04-2025;

  @Prop({ type: 15-04-2025 })
  15-04-2025: 15-04-2025;

  @Prop({ type: 21-04-2025 })
  21-04-2025: 21-04-2025;

  @Prop({ type: 22-04-2025 })
  22-04-2025: 22-04-2025;

  @Prop({ type: 23-04-2025 })
  23-04-2025: 23-04-2025;

  @Prop({ type: 24-04-2025 })
  24-04-2025: 24-04-2025;

  @Prop({ type: 25-04-2025 })
  25-04-2025: 25-04-2025;

  @Prop({ type: 01-05-2025 })
  01-05-2025: 01-05-2025;

  @Prop({ type: 02-05-2025 })
  02-05-2025: 02-05-2025;

  @Prop({ type: 03-05-2025 })
  03-05-2025: 03-05-2025;

  @Prop({ type: 04-05-2025 })
  04-05-2025: 04-05-2025;

  @Prop({ type: 05-05-2025 })
  05-05-2025: 05-05-2025;

  @Prop({ type: 06-05-2025 })
  06-05-2025: 06-05-2025;

  @Prop({ type: 26-04-2025 })
  26-04-2025: 26-04-2025;

  @Prop({ type: 27-04-2025 })
  27-04-2025: 27-04-2025;

  @Prop({ type: 28-04-2025 })
  28-04-2025: 28-04-2025;

  @Prop({ type: 29-04-2025 })
  29-04-2025: 29-04-2025;
}

@Schema()
export class DailySalaries {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];
}

@Schema()
export class 16-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class Result {
  @Prop({ type: 16-05-2022 })
  16-05-2022: 16-05-2022;

  @Prop({ type: 17-05-2022 })
  17-05-2022: 17-05-2022;

  @Prop({ type: 18-05-2022 })
  18-05-2022: 18-05-2022;

  @Prop({ type: 19-05-2022 })
  19-05-2022: 19-05-2022;

  @Prop({ type: 20-05-2022 })
  20-05-2022: 20-05-2022;

  @Prop({ type: 21-05-2022 })
  21-05-2022: 21-05-2022;

  @Prop({ type: 22-05-2022 })
  22-05-2022: 22-05-2022;

  @Prop({ type: 23-05-2022 })
  23-05-2022: 23-05-2022;

  @Prop({ type: 24-05-2022 })
  24-05-2022: 24-05-2022;

  @Prop({ type: 25-05-2022 })
  25-05-2022: 25-05-2022;

  @Prop({ type: 26-05-2022 })
  26-05-2022: 26-05-2022;

  @Prop({ type: 27-05-2022 })
  27-05-2022: 27-05-2022;

  @Prop({ type: 28-05-2022 })
  28-05-2022: 28-05-2022;

  @Prop({ type: 29-05-2022 })
  29-05-2022: 29-05-2022;

  @Prop({ type: 30-05-2022 })
  30-05-2022: 30-05-2022;

  @Prop({ type: 31-05-2022 })
  31-05-2022: 31-05-2022;

  @Prop({ type: 01-05-2022 })
  01-05-2022: 01-05-2022;

  @Prop({ type: 02-05-2022 })
  02-05-2022: 02-05-2022;

  @Prop({ type: 03-05-2022 })
  03-05-2022: 03-05-2022;

  @Prop({ type: 04-05-2022 })
  04-05-2022: 04-05-2022;

  @Prop({ type: 05-05-2022 })
  05-05-2022: 05-05-2022;

  @Prop({ type: 06-05-2022 })
  06-05-2022: 06-05-2022;

  @Prop({ type: 07-05-2022 })
  07-05-2022: 07-05-2022;

  @Prop({ type: 08-05-2022 })
  08-05-2022: 08-05-2022;

  @Prop({ type: 09-05-2022 })
  09-05-2022: 09-05-2022;

  @Prop({ type: 10-05-2022 })
  10-05-2022: 10-05-2022;

  @Prop({ type: 01-02-2021 })
  01-02-2021: 01-02-2021;

  @Prop({ type: 02-02-2021 })
  02-02-2021: 02-02-2021;

  @Prop({ type: 03-02-2021 })
  03-02-2021: 03-02-2021;

  @Prop({ type: 04-02-2021 })
  04-02-2021: 04-02-2021;

  @Prop({ type: 05-02-2021 })
  05-02-2021: 05-02-2021;

  @Prop({ type: 06-02-2021 })
  06-02-2021: 06-02-2021;

  @Prop({ type: 07-02-2021 })
  07-02-2021: 07-02-2021;

  @Prop({ type: 08-02-2021 })
  08-02-2021: 08-02-2021;

  @Prop({ type: 08-06-2022 })
  08-06-2022: 08-06-2022;

  @Prop({ type: 09-06-2022 })
  09-06-2022: 09-06-2022;

  @Prop({ type: 10-06-2022 })
  10-06-2022: 10-06-2022;

  @Prop({ type: 11-06-2022 })
  11-06-2022: 11-06-2022;

  @Prop({ type: 01-06-2022 })
  01-06-2022: 01-06-2022;

  @Prop({ type: 02-06-2022 })
  02-06-2022: 02-06-2022;

  @Prop({ type: 03-06-2022 })
  03-06-2022: 03-06-2022;

  @Prop({ type: 04-06-2022 })
  04-06-2022: 04-06-2022;

  @Prop({ type: 05-06-2022 })
  05-06-2022: 05-06-2022;

  @Prop({ type: 06-06-2022 })
  06-06-2022: 06-06-2022;

  @Prop({ type: 07-06-2022 })
  07-06-2022: 07-06-2022;

  @Prop({ type: 12-06-2022 })
  12-06-2022: 12-06-2022;

  @Prop({ type: 13-06-2022 })
  13-06-2022: 13-06-2022;

  @Prop({ type: 14-06-2022 })
  14-06-2022: 14-06-2022;

  @Prop({ type: 15-06-2022 })
  15-06-2022: 15-06-2022;

  @Prop({ type: 16-06-2022 })
  16-06-2022: 16-06-2022;

  @Prop({ type: 17-06-2022 })
  17-06-2022: 17-06-2022;

  @Prop({ type: 18-06-2022 })
  18-06-2022: 18-06-2022;

  @Prop({ type: 19-06-2022 })
  19-06-2022: 19-06-2022;

  @Prop({ type: 20-06-2022 })
  20-06-2022: 20-06-2022;

  @Prop({ type: 21-06-2022 })
  21-06-2022: 21-06-2022;

  @Prop({ type: 22-06-2022 })
  22-06-2022: 22-06-2022;

  @Prop({ type: 23-06-2022 })
  23-06-2022: 23-06-2022;

  @Prop({ type: 24-06-2022 })
  24-06-2022: 24-06-2022;

  @Prop({ type: 25-06-2022 })
  25-06-2022: 25-06-2022;

  @Prop({ type: 26-06-2022 })
  26-06-2022: 26-06-2022;

  @Prop({ type: 27-06-2022 })
  27-06-2022: 27-06-2022;

  @Prop({ type: 28-06-2022 })
  28-06-2022: 28-06-2022;

  @Prop({ type: 29-06-2022 })
  29-06-2022: 29-06-2022;

  @Prop({ type: 30-06-2022 })
  30-06-2022: 30-06-2022;

  @Prop({ type: 16-03-2022 })
  16-03-2022: 16-03-2022;

  @Prop({ type: 17-03-2022 })
  17-03-2022: 17-03-2022;

  @Prop({ type: 18-03-2022 })
  18-03-2022: 18-03-2022;

  @Prop({ type: 19-03-2022 })
  19-03-2022: 19-03-2022;

  @Prop({ type: 20-03-2022 })
  20-03-2022: 20-03-2022;

  @Prop({ type: 21-03-2022 })
  21-03-2022: 21-03-2022;

  @Prop({ type: 22-03-2022 })
  22-03-2022: 22-03-2022;

  @Prop({ type: 23-03-2022 })
  23-03-2022: 23-03-2022;

  @Prop({ type: 01-07-2022 })
  01-07-2022: 01-07-2022;

  @Prop({ type: 02-07-2022 })
  02-07-2022: 02-07-2022;

  @Prop({ type: 03-07-2022 })
  03-07-2022: 03-07-2022;

  @Prop({ type: 04-07-2022 })
  04-07-2022: 04-07-2022;

  @Prop({ type: 05-07-2022 })
  05-07-2022: 05-07-2022;

  @Prop({ type: 06-07-2022 })
  06-07-2022: 06-07-2022;

  @Prop({ type: 07-07-2022 })
  07-07-2022: 07-07-2022;

  @Prop({ type: 08-07-2022 })
  08-07-2022: 08-07-2022;

  @Prop({ type: 09-07-2022 })
  09-07-2022: 09-07-2022;

  @Prop({ type: 10-07-2022 })
  10-07-2022: 10-07-2022;

  @Prop({ type: 11-07-2022 })
  11-07-2022: 11-07-2022;

  @Prop({ type: 12-07-2022 })
  12-07-2022: 12-07-2022;

  @Prop({ type: 13-07-2022 })
  13-07-2022: 13-07-2022;

  @Prop({ type: 14-07-2022 })
  14-07-2022: 14-07-2022;

  @Prop({ type: 15-07-2022 })
  15-07-2022: 15-07-2022;

  @Prop({ type: 16-07-2022 })
  16-07-2022: 16-07-2022;

  @Prop({ type: 17-07-2022 })
  17-07-2022: 17-07-2022;

  @Prop({ type: 18-07-2022 })
  18-07-2022: 18-07-2022;

  @Prop({ type: 19-07-2022 })
  19-07-2022: 19-07-2022;

  @Prop({ type: 20-07-2022 })
  20-07-2022: 20-07-2022;

  @Prop({ type: 21-07-2022 })
  21-07-2022: 21-07-2022;

  @Prop({ type: 22-07-2022 })
  22-07-2022: 22-07-2022;

  @Prop({ type: 23-07-2022 })
  23-07-2022: 23-07-2022;

  @Prop({ type: 24-07-2022 })
  24-07-2022: 24-07-2022;

  @Prop({ type: 25-07-2022 })
  25-07-2022: 25-07-2022;

  @Prop({ type: 26-07-2022 })
  26-07-2022: 26-07-2022;

  @Prop({ type: 27-07-2022 })
  27-07-2022: 27-07-2022;

  @Prop({ type: 28-07-2022 })
  28-07-2022: 28-07-2022;

  @Prop({ type: 29-07-2022 })
  29-07-2022: 29-07-2022;

  @Prop({ type: 30-07-2022 })
  30-07-2022: 30-07-2022;

  @Prop({ type: 01-06-2020 })
  01-06-2020: 01-06-2020;

  @Prop({ type: 02-06-2020 })
  02-06-2020: 02-06-2020;

  @Prop({ type: 03-06-2020 })
  03-06-2020: 03-06-2020;

  @Prop({ type: 04-06-2020 })
  04-06-2020: 04-06-2020;

  @Prop({ type: 05-06-2020 })
  05-06-2020: 05-06-2020;

  @Prop({ type: 06-06-2020 })
  06-06-2020: 06-06-2020;

  @Prop({ type: 07-06-2020 })
  07-06-2020: 07-06-2020;

  @Prop({ type: 08-06-2020 })
  08-06-2020: 08-06-2020;

  @Prop({ type: 09-06-2020 })
  09-06-2020: 09-06-2020;

  @Prop({ type: 10-06-2020 })
  10-06-2020: 10-06-2020;

  @Prop({ type: 11-06-2020 })
  11-06-2020: 11-06-2020;

  @Prop({ type: 12-06-2020 })
  12-06-2020: 12-06-2020;

  @Prop({ type: 13-06-2020 })
  13-06-2020: 13-06-2020;

  @Prop({ type: 14-06-2020 })
  14-06-2020: 14-06-2020;

  @Prop({ type: 15-06-2020 })
  15-06-2020: 15-06-2020;

  @Prop({ type: 31-07-2022 })
  31-07-2022: 31-07-2022;

  @Prop({ type: 01-08-2022 })
  01-08-2022: 01-08-2022;

  @Prop({ type: 02-08-2022 })
  02-08-2022: 02-08-2022;

  @Prop({ type: 03-08-2022 })
  03-08-2022: 03-08-2022;

  @Prop({ type: 04-08-2022 })
  04-08-2022: 04-08-2022;

  @Prop({ type: 05-08-2022 })
  05-08-2022: 05-08-2022;

  @Prop({ type: 06-08-2022 })
  06-08-2022: 06-08-2022;

  @Prop({ type: 07-08-2022 })
  07-08-2022: 07-08-2022;

  @Prop({ type: 08-08-2022 })
  08-08-2022: 08-08-2022;

  @Prop({ type: 09-08-2022 })
  09-08-2022: 09-08-2022;

  @Prop({ type: 10-08-2022 })
  10-08-2022: 10-08-2022;

  @Prop({ type: 11-08-2022 })
  11-08-2022: 11-08-2022;

  @Prop({ type: 12-08-2022 })
  12-08-2022: 12-08-2022;

  @Prop({ type: 13-08-2022 })
  13-08-2022: 13-08-2022;

  @Prop({ type: 14-08-2022 })
  14-08-2022: 14-08-2022;

  @Prop({ type: 15-08-2022 })
  15-08-2022: 15-08-2022;

  @Prop({ type: 16-08-2022 })
  16-08-2022: 16-08-2022;

  @Prop({ type: 17-08-2022 })
  17-08-2022: 17-08-2022;

  @Prop({ type: 18-08-2022 })
  18-08-2022: 18-08-2022;

  @Prop({ type: 19-08-2022 })
  19-08-2022: 19-08-2022;

  @Prop({ type: 20-08-2022 })
  20-08-2022: 20-08-2022;

  @Prop({ type: 21-08-2022 })
  21-08-2022: 21-08-2022;

  @Prop({ type: 22-08-2022 })
  22-08-2022: 22-08-2022;

  @Prop({ type: 23-08-2022 })
  23-08-2022: 23-08-2022;

  @Prop({ type: 24-08-2022 })
  24-08-2022: 24-08-2022;

  @Prop({ type: 25-08-2022 })
  25-08-2022: 25-08-2022;

  @Prop({ type: 26-08-2022 })
  26-08-2022: 26-08-2022;

  @Prop({ type: 31-08-2022 })
  31-08-2022: 31-08-2022;

  @Prop({ type: 01-09-2022 })
  01-09-2022: 01-09-2022;

  @Prop({ type: 02-09-2022 })
  02-09-2022: 02-09-2022;

  @Prop({ type: 03-09-2022 })
  03-09-2022: 03-09-2022;

  @Prop({ type: 04-09-2022 })
  04-09-2022: 04-09-2022;

  @Prop({ type: 05-09-2022 })
  05-09-2022: 05-09-2022;

  @Prop({ type: 27-08-2022 })
  27-08-2022: 27-08-2022;

  @Prop({ type: 28-08-2022 })
  28-08-2022: 28-08-2022;

  @Prop({ type: 29-08-2022 })
  29-08-2022: 29-08-2022;

  @Prop({ type: 30-08-2022 })
  30-08-2022: 30-08-2022;

  @Prop({ type: 06-09-2022 })
  06-09-2022: 06-09-2022;

  @Prop({ type: 07-09-2022 })
  07-09-2022: 07-09-2022;

  @Prop({ type: 08-09-2022 })
  08-09-2022: 08-09-2022;

  @Prop({ type: 09-09-2022 })
  09-09-2022: 09-09-2022;

  @Prop({ type: 16-09-2022 })
  16-09-2022: 16-09-2022;

  @Prop({ type: 17-09-2022 })
  17-09-2022: 17-09-2022;

  @Prop({ type: 18-09-2022 })
  18-09-2022: 18-09-2022;

  @Prop({ type: 19-09-2022 })
  19-09-2022: 19-09-2022;

  @Prop({ type: 14-09-2022 })
  14-09-2022: 14-09-2022;

  @Prop({ type: 28-09-2022 })
  28-09-2022: 28-09-2022;

  @Prop({ type: 29-09-2022 })
  29-09-2022: 29-09-2022;

  @Prop({ type: 30-09-2022 })
  30-09-2022: 30-09-2022;

  @Prop({ type: 20-09-2022 })
  20-09-2022: 20-09-2022;

  @Prop({ type: 21-09-2022 })
  21-09-2022: 21-09-2022;

  @Prop({ type: 15-09-2022 })
  15-09-2022: 15-09-2022;

  @Prop({ type: 01-10-2022 })
  01-10-2022: 01-10-2022;

  @Prop({ type: 02-10-2022 })
  02-10-2022: 02-10-2022;

  @Prop({ type: 03-10-2022 })
  03-10-2022: 03-10-2022;

  @Prop({ type: 04-10-2022 })
  04-10-2022: 04-10-2022;

  @Prop({ type: 05-10-2022 })
  05-10-2022: 05-10-2022;

  @Prop({ type: 06-10-2022 })
  06-10-2022: 06-10-2022;

  @Prop({ type: 07-10-2022 })
  07-10-2022: 07-10-2022;

  @Prop({ type: 08-10-2022 })
  08-10-2022: 08-10-2022;

  @Prop({ type: 16-10-2022 })
  16-10-2022: 16-10-2022;

  @Prop({ type: 17-10-2022 })
  17-10-2022: 17-10-2022;

  @Prop({ type: 19-10-2022 })
  19-10-2022: 19-10-2022;

  @Prop({ type: 20-10-2022 })
  20-10-2022: 20-10-2022;

  @Prop({ type: 21-10-2022 })
  21-10-2022: 21-10-2022;

  @Prop({ type: 22-10-2022 })
  22-10-2022: 22-10-2022;

  @Prop({ type: 23-10-2022 })
  23-10-2022: 23-10-2022;

  @Prop({ type: 24-10-2022 })
  24-10-2022: 24-10-2022;

  @Prop({ type: 25-10-2022 })
  25-10-2022: 25-10-2022;

  @Prop({ type: 18-10-2022 })
  18-10-2022: 18-10-2022;

  @Prop({ type: 26-10-2022 })
  26-10-2022: 26-10-2022;

  @Prop({ type: 27-10-2022 })
  27-10-2022: 27-10-2022;

  @Prop({ type: 28-10-2022 })
  28-10-2022: 28-10-2022;

  @Prop({ type: 01-11-2022 })
  01-11-2022: 01-11-2022;

  @Prop({ type: 02-11-2022 })
  02-11-2022: 02-11-2022;

  @Prop({ type: 03-11-2022 })
  03-11-2022: 03-11-2022;

  @Prop({ type: 04-11-2022 })
  04-11-2022: 04-11-2022;

  @Prop({ type: 05-11-2022 })
  05-11-2022: 05-11-2022;

  @Prop({ type: 06-11-2022 })
  06-11-2022: 06-11-2022;

  @Prop({ type: 07-11-2022 })
  07-11-2022: 07-11-2022;

  @Prop({ type: 08-11-2022 })
  08-11-2022: 08-11-2022;

  @Prop({ type: 09-11-2022 })
  09-11-2022: 09-11-2022;

  @Prop({ type: 10-11-2022 })
  10-11-2022: 10-11-2022;

  @Prop({ type: 11-11-2022 })
  11-11-2022: 11-11-2022;

  @Prop({ type: 12-11-2022 })
  12-11-2022: 12-11-2022;

  @Prop({ type: 13-11-2022 })
  13-11-2022: 13-11-2022;

  @Prop({ type: 14-11-2022 })
  14-11-2022: 14-11-2022;

  @Prop({ type: 15-11-2022 })
  15-11-2022: 15-11-2022;

  @Prop({ type: 31-10-2022 })
  31-10-2022: 31-10-2022;

  @Prop({ type: 16-11-2022 })
  16-11-2022: 16-11-2022;

  @Prop({ type: 17-11-2022 })
  17-11-2022: 17-11-2022;

  @Prop({ type: 18-11-2022 })
  18-11-2022: 18-11-2022;

  @Prop({ type: 19-11-2022 })
  19-11-2022: 19-11-2022;

  @Prop({ type: 20-11-2022 })
  20-11-2022: 20-11-2022;

  @Prop({ type: 21-11-2022 })
  21-11-2022: 21-11-2022;

  @Prop({ type: 22-11-2022 })
  22-11-2022: 22-11-2022;

  @Prop({ type: 23-11-2022 })
  23-11-2022: 23-11-2022;

  @Prop({ type: 24-11-2022 })
  24-11-2022: 24-11-2022;

  @Prop({ type: 25-11-2022 })
  25-11-2022: 25-11-2022;

  @Prop({ type: 30-11-2022 })
  30-11-2022: 30-11-2022;

  @Prop({ type: 01-12-2022 })
  01-12-2022: 01-12-2022;

  @Prop({ type: 02-12-2022 })
  02-12-2022: 02-12-2022;

  @Prop({ type: 03-12-2022 })
  03-12-2022: 03-12-2022;

  @Prop({ type: 04-12-2022 })
  04-12-2022: 04-12-2022;

  @Prop({ type: 05-12-2022 })
  05-12-2022: 05-12-2022;

  @Prop({ type: 06-12-2022 })
  06-12-2022: 06-12-2022;

  @Prop({ type: 07-12-2022 })
  07-12-2022: 07-12-2022;

  @Prop({ type: 08-12-2022 })
  08-12-2022: 08-12-2022;

  @Prop({ type: 09-12-2022 })
  09-12-2022: 09-12-2022;

  @Prop({ type: 16-12-2022 })
  16-12-2022: 16-12-2022;

  @Prop({ type: 17-12-2022 })
  17-12-2022: 17-12-2022;

  @Prop({ type: 18-12-2022 })
  18-12-2022: 18-12-2022;

  @Prop({ type: 19-12-2022 })
  19-12-2022: 19-12-2022;

  @Prop({ type: 20-12-2022 })
  20-12-2022: 20-12-2022;

  @Prop({ type: 21-12-2022 })
  21-12-2022: 21-12-2022;

  @Prop({ type: 22-12-2022 })
  22-12-2022: 22-12-2022;

  @Prop({ type: 23-12-2022 })
  23-12-2022: 23-12-2022;

  @Prop({ type: 24-12-2022 })
  24-12-2022: 24-12-2022;

  @Prop({ type: 25-12-2022 })
  25-12-2022: 25-12-2022;

  @Prop({ type: 26-12-2022 })
  26-12-2022: 26-12-2022;

  @Prop({ type: 27-12-2022 })
  27-12-2022: 27-12-2022;

  @Prop({ type: 28-12-2022 })
  28-12-2022: 28-12-2022;

  @Prop({ type: 29-12-2022 })
  29-12-2022: 29-12-2022;

  @Prop({ type: 30-12-2022 })
  30-12-2022: 30-12-2022;

  @Prop({ type: 31-12-2022 })
  31-12-2022: 31-12-2022;

  @Prop({ type: 01-01-2023 })
  01-01-2023: 01-01-2023;

  @Prop({ type: 02-01-2023 })
  02-01-2023: 02-01-2023;

  @Prop({ type: 04-01-2023 })
  04-01-2023: 04-01-2023;

  @Prop({ type: 05-01-2023 })
  05-01-2023: 05-01-2023;

  @Prop({ type: 06-01-2023 })
  06-01-2023: 06-01-2023;

  @Prop({ type: 03-01-2023 })
  03-01-2023: 03-01-2023;

  @Prop({ type: 07-01-2023 })
  07-01-2023: 07-01-2023;

  @Prop({ type: 08-01-2023 })
  08-01-2023: 08-01-2023;

  @Prop({ type: 09-01-2023 })
  09-01-2023: 09-01-2023;

  @Prop({ type: 10-01-2023 })
  10-01-2023: 10-01-2023;

  @Prop({ type: 11-01-2023 })
  11-01-2023: 11-01-2023;

  @Prop({ type: 12-01-2023 })
  12-01-2023: 12-01-2023;

  @Prop({ type: 13-01-2023 })
  13-01-2023: 13-01-2023;

  @Prop({ type: 14-01-2023 })
  14-01-2023: 14-01-2023;

  @Prop({ type: 15-01-2023 })
  15-01-2023: 15-01-2023;

  @Prop({ type: 14-12-2022 })
  14-12-2022: 14-12-2022;

  @Prop({ type: 15-12-2022 })
  15-12-2022: 15-12-2022;

  @Prop({ type: 16-01-2023 })
  16-01-2023: 16-01-2023;

  @Prop({ type: 17-01-2023 })
  17-01-2023: 17-01-2023;

  @Prop({ type: 18-01-2023 })
  18-01-2023: 18-01-2023;

  @Prop({ type: 19-01-2023 })
  19-01-2023: 19-01-2023;

  @Prop({ type: 20-01-2023 })
  20-01-2023: 20-01-2023;

  @Prop({ type: 21-01-2023 })
  21-01-2023: 21-01-2023;

  @Prop({ type: 22-01-2023 })
  22-01-2023: 22-01-2023;

  @Prop({ type: 01-02-2023 })
  01-02-2023: 01-02-2023;

  @Prop({ type: 02-02-2023 })
  02-02-2023: 02-02-2023;

  @Prop({ type: 03-02-2023 })
  03-02-2023: 03-02-2023;

  @Prop({ type: 04-02-2023 })
  04-02-2023: 04-02-2023;

  @Prop({ type: 05-02-2023 })
  05-02-2023: 05-02-2023;

  @Prop({ type: 06-02-2023 })
  06-02-2023: 06-02-2023;

  @Prop({ type: 07-02-2023 })
  07-02-2023: 07-02-2023;

  @Prop({ type: 08-02-2023 })
  08-02-2023: 08-02-2023;

  @Prop({ type: 23-01-2023 })
  23-01-2023: 23-01-2023;

  @Prop({ type: 24-01-2023 })
  24-01-2023: 24-01-2023;

  @Prop({ type: 25-01-2023 })
  25-01-2023: 25-01-2023;

  @Prop({ type: 26-01-2023 })
  26-01-2023: 26-01-2023;

  @Prop({ type: 27-01-2023 })
  27-01-2023: 27-01-2023;

  @Prop({ type: 28-01-2023 })
  28-01-2023: 28-01-2023;

  @Prop({ type: 29-01-2023 })
  29-01-2023: 29-01-2023;

  @Prop({ type: 30-01-2023 })
  30-01-2023: 30-01-2023;

  @Prop({ type: 31-01-2023 })
  31-01-2023: 31-01-2023;

  @Prop({ type: 10-02-2023 })
  10-02-2023: 10-02-2023;

  @Prop({ type: 11-02-2023 })
  11-02-2023: 11-02-2023;

  @Prop({ type: 09-02-2023 })
  09-02-2023: 09-02-2023;

  @Prop({ type: 15-02-2023 })
  15-02-2023: 15-02-2023;

  @Prop({ type: 16-02-2023 })
  16-02-2023: 16-02-2023;

  @Prop({ type: 17-02-2023 })
  17-02-2023: 17-02-2023;

  @Prop({ type: 26-02-2023 })
  26-02-2023: 26-02-2023;

  @Prop({ type: 27-02-2023 })
  27-02-2023: 27-02-2023;

  @Prop({ type: 28-02-2023 })
  28-02-2023: 28-02-2023;

  @Prop({ type: 08-03-2023 })
  08-03-2023: 08-03-2023;

  @Prop({ type: 09-03-2023 })
  09-03-2023: 09-03-2023;

  @Prop({ type: 10-03-2023 })
  10-03-2023: 10-03-2023;

  @Prop({ type: 01-03-2023 })
  01-03-2023: 01-03-2023;

  @Prop({ type: 02-03-2023 })
  02-03-2023: 02-03-2023;

  @Prop({ type: 03-03-2023 })
  03-03-2023: 03-03-2023;

  @Prop({ type: 04-03-2023 })
  04-03-2023: 04-03-2023;

  @Prop({ type: 05-03-2023 })
  05-03-2023: 05-03-2023;

  @Prop({ type: 06-03-2023 })
  06-03-2023: 06-03-2023;

  @Prop({ type: 07-03-2023 })
  07-03-2023: 07-03-2023;

  @Prop({ type: 16-03-2023 })
  16-03-2023: 16-03-2023;

  @Prop({ type: 17-03-2023 })
  17-03-2023: 17-03-2023;

  @Prop({ type: 18-03-2023 })
  18-03-2023: 18-03-2023;

  @Prop({ type: 19-03-2023 })
  19-03-2023: 19-03-2023;

  @Prop({ type: 20-03-2023 })
  20-03-2023: 20-03-2023;

  @Prop({ type: 21-03-2023 })
  21-03-2023: 21-03-2023;

  @Prop({ type: 22-03-2023 })
  22-03-2023: 22-03-2023;

  @Prop({ type: 23-03-2023 })
  23-03-2023: 23-03-2023;

  @Prop({ type: 24-03-2023 })
  24-03-2023: 24-03-2023;

  @Prop({ type: 25-03-2023 })
  25-03-2023: 25-03-2023;

  @Prop({ type: 26-03-2023 })
  26-03-2023: 26-03-2023;

  @Prop({ type: 27-03-2023 })
  27-03-2023: 27-03-2023;

  @Prop({ type: 28-03-2023 })
  28-03-2023: 28-03-2023;

  @Prop({ type: 01-04-2023 })
  01-04-2023: 01-04-2023;

  @Prop({ type: 02-04-2023 })
  02-04-2023: 02-04-2023;

  @Prop({ type: 03-04-2023 })
  03-04-2023: 03-04-2023;

  @Prop({ type: 04-04-2023 })
  04-04-2023: 04-04-2023;

  @Prop({ type: 05-04-2023 })
  05-04-2023: 05-04-2023;

  @Prop({ type: 06-04-2023 })
  06-04-2023: 06-04-2023;

  @Prop({ type: 07-04-2023 })
  07-04-2023: 07-04-2023;

  @Prop({ type: 08-04-2023 })
  08-04-2023: 08-04-2023;

  @Prop({ type: 09-04-2023 })
  09-04-2023: 09-04-2023;

  @Prop({ type: 10-04-2023 })
  10-04-2023: 10-04-2023;

  @Prop({ type: 16-04-2023 })
  16-04-2023: 16-04-2023;

  @Prop({ type: 17-04-2023 })
  17-04-2023: 17-04-2023;

  @Prop({ type: 18-04-2023 })
  18-04-2023: 18-04-2023;

  @Prop({ type: 19-04-2023 })
  19-04-2023: 19-04-2023;

  @Prop({ type: 20-04-2023 })
  20-04-2023: 20-04-2023;

  @Prop({ type: 21-04-2023 })
  21-04-2023: 21-04-2023;

  @Prop({ type: 22-04-2023 })
  22-04-2023: 22-04-2023;

  @Prop({ type: 23-04-2023 })
  23-04-2023: 23-04-2023;

  @Prop({ type: 24-04-2023 })
  24-04-2023: 24-04-2023;

  @Prop({ type: 25-04-2023 })
  25-04-2023: 25-04-2023;

  @Prop({ type: 26-04-2023 })
  26-04-2023: 26-04-2023;

  @Prop({ type: 01-05-2023 })
  01-05-2023: 01-05-2023;

  @Prop({ type: 02-05-2023 })
  02-05-2023: 02-05-2023;

  @Prop({ type: 03-05-2023 })
  03-05-2023: 03-05-2023;

  @Prop({ type: 04-05-2023 })
  04-05-2023: 04-05-2023;

  @Prop({ type: 05-05-2023 })
  05-05-2023: 05-05-2023;

  @Prop({ type: 06-05-2023 })
  06-05-2023: 06-05-2023;

  @Prop({ type: 07-05-2023 })
  07-05-2023: 07-05-2023;

  @Prop({ type: 08-05-2023 })
  08-05-2023: 08-05-2023;

  @Prop({ type: 09-05-2023 })
  09-05-2023: 09-05-2023;

  @Prop({ type: 10-05-2023 })
  10-05-2023: 10-05-2023;

  @Prop({ type: 11-05-2023 })
  11-05-2023: 11-05-2023;

  @Prop({ type: 12-05-2023 })
  12-05-2023: 12-05-2023;

  @Prop({ type: 16-05-2023 })
  16-05-2023: 16-05-2023;

  @Prop({ type: 17-05-2023 })
  17-05-2023: 17-05-2023;

  @Prop({ type: 18-05-2023 })
  18-05-2023: 18-05-2023;

  @Prop({ type: 19-05-2023 })
  19-05-2023: 19-05-2023;

  @Prop({ type: 20-05-2023 })
  20-05-2023: 20-05-2023;

  @Prop({ type: 21-05-2023 })
  21-05-2023: 21-05-2023;

  @Prop({ type: 22-05-2023 })
  22-05-2023: 22-05-2023;

  @Prop({ type: 23-05-2023 })
  23-05-2023: 23-05-2023;

  @Prop({ type: 24-05-2023 })
  24-05-2023: 24-05-2023;

  @Prop({ type: 25-05-2023 })
  25-05-2023: 25-05-2023;

  @Prop({ type: 01-06-2023 })
  01-06-2023: 01-06-2023;

  @Prop({ type: 02-06-2023 })
  02-06-2023: 02-06-2023;

  @Prop({ type: 03-06-2023 })
  03-06-2023: 03-06-2023;

  @Prop({ type: 04-06-2023 })
  04-06-2023: 04-06-2023;

  @Prop({ type: 05-06-2023 })
  05-06-2023: 05-06-2023;

  @Prop({ type: 06-06-2023 })
  06-06-2023: 06-06-2023;

  @Prop({ type: 07-06-2023 })
  07-06-2023: 07-06-2023;

  @Prop({ type: 08-06-2023 })
  08-06-2023: 08-06-2023;

  @Prop({ type: 09-06-2023 })
  09-06-2023: 09-06-2023;

  @Prop({ type: 10-06-2023 })
  10-06-2023: 10-06-2023;

  @Prop({ type: 11-06-2023 })
  11-06-2023: 11-06-2023;

  @Prop({ type: 12-06-2023 })
  12-06-2023: 12-06-2023;

  @Prop({ type: 16-06-2023 })
  16-06-2023: 16-06-2023;

  @Prop({ type: 14-06-2023 })
  14-06-2023: 14-06-2023;

  @Prop({ type: 15-06-2023 })
  15-06-2023: 15-06-2023;

  @Prop({ type: 17-06-2023 })
  17-06-2023: 17-06-2023;

  @Prop({ type: 18-06-2023 })
  18-06-2023: 18-06-2023;

  @Prop({ type: 19-06-2023 })
  19-06-2023: 19-06-2023;

  @Prop({ type: 20-06-2023 })
  20-06-2023: 20-06-2023;

  @Prop({ type: 21-06-2023 })
  21-06-2023: 21-06-2023;

  @Prop({ type: 22-06-2023 })
  22-06-2023: 22-06-2023;

  @Prop({ type: 01-07-2023 })
  01-07-2023: 01-07-2023;

  @Prop({ type: 28-06-2023 })
  28-06-2023: 28-06-2023;

  @Prop({ type: 29-06-2023 })
  29-06-2023: 29-06-2023;

  @Prop({ type: 30-06-2023 })
  30-06-2023: 30-06-2023;

  @Prop({ type: 02-07-2023 })
  02-07-2023: 02-07-2023;

  @Prop({ type: 03-07-2023 })
  03-07-2023: 03-07-2023;

  @Prop({ type: 04-07-2023 })
  04-07-2023: 04-07-2023;

  @Prop({ type: 05-07-2023 })
  05-07-2023: 05-07-2023;

  @Prop({ type: 06-07-2023 })
  06-07-2023: 06-07-2023;

  @Prop({ type: 07-07-2023 })
  07-07-2023: 07-07-2023;

  @Prop({ type: 08-07-2023 })
  08-07-2023: 08-07-2023;

  @Prop({ type: 09-07-2023 })
  09-07-2023: 09-07-2023;

  @Prop({ type: 10-07-2023 })
  10-07-2023: 10-07-2023;

  @Prop({ type: 11-07-2023 })
  11-07-2023: 11-07-2023;

  @Prop({ type: 12-07-2023 })
  12-07-2023: 12-07-2023;

  @Prop({ type: 13-07-2023 })
  13-07-2023: 13-07-2023;

  @Prop({ type: 14-07-2023 })
  14-07-2023: 14-07-2023;

  @Prop({ type: 16-07-2023 })
  16-07-2023: 16-07-2023;

  @Prop({ type: 17-07-2023 })
  17-07-2023: 17-07-2023;

  @Prop({ type: 18-07-2023 })
  18-07-2023: 18-07-2023;

  @Prop({ type: 19-07-2023 })
  19-07-2023: 19-07-2023;

  @Prop({ type: 20-07-2023 })
  20-07-2023: 20-07-2023;

  @Prop({ type: 21-07-2023 })
  21-07-2023: 21-07-2023;

  @Prop({ type: 22-07-2023 })
  22-07-2023: 22-07-2023;

  @Prop({ type: 23-07-2023 })
  23-07-2023: 23-07-2023;

  @Prop({ type: 24-07-2023 })
  24-07-2023: 24-07-2023;

  @Prop({ type: 25-07-2023 })
  25-07-2023: 25-07-2023;

  @Prop({ type: 26-07-2023 })
  26-07-2023: 26-07-2023;

  @Prop({ type: 27-07-2023 })
  27-07-2023: 27-07-2023;

  @Prop({ type: 28-07-2023 })
  28-07-2023: 28-07-2023;

  @Prop({ type: 29-07-2023 })
  29-07-2023: 29-07-2023;

  @Prop({ type: 30-07-2023 })
  30-07-2023: 30-07-2023;

  @Prop({ type: 31-07-2023 })
  31-07-2023: 31-07-2023;

  @Prop({ type: 01-08-2023 })
  01-08-2023: 01-08-2023;

  @Prop({ type: 15-07-2023 })
  15-07-2023: 15-07-2023;

  @Prop({ type: 02-08-2023 })
  02-08-2023: 02-08-2023;

  @Prop({ type: 03-08-2023 })
  03-08-2023: 03-08-2023;

  @Prop({ type: 04-08-2023 })
  04-08-2023: 04-08-2023;

  @Prop({ type: 05-08-2023 })
  05-08-2023: 05-08-2023;

  @Prop({ type: 06-08-2023 })
  06-08-2023: 06-08-2023;

  @Prop({ type: 07-08-2023 })
  07-08-2023: 07-08-2023;

  @Prop({ type: 08-08-2023 })
  08-08-2023: 08-08-2023;

  @Prop({ type: 16-08-2023 })
  16-08-2023: 16-08-2023;

  @Prop({ type: 17-08-2023 })
  17-08-2023: 17-08-2023;

  @Prop({ type: 18-08-2023 })
  18-08-2023: 18-08-2023;

  @Prop({ type: 19-08-2023 })
  19-08-2023: 19-08-2023;

  @Prop({ type: 20-08-2023 })
  20-08-2023: 20-08-2023;

  @Prop({ type: 21-08-2023 })
  21-08-2023: 21-08-2023;

  @Prop({ type: 22-08-2023 })
  22-08-2023: 22-08-2023;

  @Prop({ type: 23-08-2023 })
  23-08-2023: 23-08-2023;

  @Prop({ type: 24-08-2023 })
  24-08-2023: 24-08-2023;

  @Prop({ type: 25-08-2023 })
  25-08-2023: 25-08-2023;

  @Prop({ type: 26-08-2023 })
  26-08-2023: 26-08-2023;

  @Prop({ type: 27-08-2023 })
  27-08-2023: 27-08-2023;

  @Prop({ type: 28-08-2023 })
  28-08-2023: 28-08-2023;

  @Prop({ type: 29-08-2023 })
  29-08-2023: 29-08-2023;

  @Prop({ type: 01-09-2023 })
  01-09-2023: 01-09-2023;

  @Prop({ type: 02-09-2023 })
  02-09-2023: 02-09-2023;

  @Prop({ type: 03-09-2023 })
  03-09-2023: 03-09-2023;

  @Prop({ type: 04-09-2023 })
  04-09-2023: 04-09-2023;

  @Prop({ type: 05-09-2023 })
  05-09-2023: 05-09-2023;

  @Prop({ type: 06-09-2023 })
  06-09-2023: 06-09-2023;

  @Prop({ type: 07-09-2023 })
  07-09-2023: 07-09-2023;

  @Prop({ type: 08-09-2023 })
  08-09-2023: 08-09-2023;

  @Prop({ type: 09-09-2023 })
  09-09-2023: 09-09-2023;

  @Prop({ type: 10-09-2023 })
  10-09-2023: 10-09-2023;

  @Prop({ type: 11-09-2023 })
  11-09-2023: 11-09-2023;

  @Prop({ type: 12-09-2023 })
  12-09-2023: 12-09-2023;

  @Prop({ type: 13-09-2023 })
  13-09-2023: 13-09-2023;

  @Prop({ type: 14-09-2023 })
  14-09-2023: 14-09-2023;

  @Prop({ type: 15-09-2023 })
  15-09-2023: 15-09-2023;

  @Prop({ type: 16-09-2023 })
  16-09-2023: 16-09-2023;

  @Prop({ type: 17-09-2023 })
  17-09-2023: 17-09-2023;

  @Prop({ type: 18-09-2023 })
  18-09-2023: 18-09-2023;

  @Prop({ type: 30-08-2023 })
  30-08-2023: 30-08-2023;

  @Prop({ type: 31-08-2023 })
  31-08-2023: 31-08-2023;

  @Prop({ type: 19-09-2023 })
  19-09-2023: 19-09-2023;

  @Prop({ type: 20-09-2023 })
  20-09-2023: 20-09-2023;

  @Prop({ type: 21-09-2023 })
  21-09-2023: 21-09-2023;

  @Prop({ type: 22-09-2023 })
  22-09-2023: 22-09-2023;

  @Prop({ type: 23-09-2023 })
  23-09-2023: 23-09-2023;

  @Prop({ type: 24-09-2023 })
  24-09-2023: 24-09-2023;

  @Prop({ type: 25-09-2023 })
  25-09-2023: 25-09-2023;

  @Prop({ type: 26-09-2023 })
  26-09-2023: 26-09-2023;

  @Prop({ type: 27-09-2023 })
  27-09-2023: 27-09-2023;

  @Prop({ type: 28-09-2023 })
  28-09-2023: 28-09-2023;

  @Prop({ type: 29-09-2023 })
  29-09-2023: 29-09-2023;

  @Prop({ type: 30-09-2023 })
  30-09-2023: 30-09-2023;

  @Prop({ type: 01-10-2023 })
  01-10-2023: 01-10-2023;

  @Prop({ type: 02-10-2023 })
  02-10-2023: 02-10-2023;

  @Prop({ type: 03-10-2023 })
  03-10-2023: 03-10-2023;

  @Prop({ type: 04-10-2023 })
  04-10-2023: 04-10-2023;

  @Prop({ type: 05-10-2023 })
  05-10-2023: 05-10-2023;

  @Prop({ type: 06-10-2023 })
  06-10-2023: 06-10-2023;

  @Prop({ type: 07-10-2023 })
  07-10-2023: 07-10-2023;

  @Prop({ type: 08-10-2023 })
  08-10-2023: 08-10-2023;

  @Prop({ type: 09-10-2023 })
  09-10-2023: 09-10-2023;

  @Prop({ type: 10-10-2023 })
  10-10-2023: 10-10-2023;

  @Prop({ type: 11-10-2023 })
  11-10-2023: 11-10-2023;

  @Prop({ type: 12-10-2023 })
  12-10-2023: 12-10-2023;

  @Prop({ type: 13-10-2023 })
  13-10-2023: 13-10-2023;

  @Prop({ type: 16-04-2021 })
  16-04-2021: 16-04-2021;

  @Prop({ type: 17-04-2021 })
  17-04-2021: 17-04-2021;

  @Prop({ type: 18-04-2021 })
  18-04-2021: 18-04-2021;

  @Prop({ type: 19-04-2021 })
  19-04-2021: 19-04-2021;

  @Prop({ type: 20-04-2021 })
  20-04-2021: 20-04-2021;

  @Prop({ type: 16-10-2023 })
  16-10-2023: 16-10-2023;

  @Prop({ type: 21-10-2023 })
  21-10-2023: 21-10-2023;

  @Prop({ type: 22-10-2023 })
  22-10-2023: 22-10-2023;

  @Prop({ type: 23-10-2023 })
  23-10-2023: 23-10-2023;

  @Prop({ type: 17-10-2023 })
  17-10-2023: 17-10-2023;

  @Prop({ type: 18-10-2023 })
  18-10-2023: 18-10-2023;

  @Prop({ type: 19-10-2023 })
  19-10-2023: 19-10-2023;

  @Prop({ type: 20-10-2023 })
  20-10-2023: 20-10-2023;

  @Prop({ type: 16-12-2023 })
  16-12-2023: 16-12-2023;

  @Prop({ type: 17-12-2023 })
  17-12-2023: 17-12-2023;

  @Prop({ type: 18-12-2023 })
  18-12-2023: 18-12-2023;

  @Prop({ type: 19-12-2023 })
  19-12-2023: 19-12-2023;

  @Prop({ type: 20-12-2023 })
  20-12-2023: 20-12-2023;

  @Prop({ type: 21-12-2023 })
  21-12-2023: 21-12-2023;

  @Prop({ type: 22-12-2023 })
  22-12-2023: 22-12-2023;

  @Prop({ type: 23-12-2023 })
  23-12-2023: 23-12-2023;

  @Prop({ type: 24-12-2023 })
  24-12-2023: 24-12-2023;

  @Prop({ type: 25-12-2023 })
  25-12-2023: 25-12-2023;

  @Prop({ type: 26-12-2023 })
  26-12-2023: 26-12-2023;

  @Prop({ type: 27-12-2023 })
  27-12-2023: 27-12-2023;

  @Prop({ type: 28-12-2023 })
  28-12-2023: 28-12-2023;

  @Prop({ type: 29-12-2023 })
  29-12-2023: 29-12-2023;

  @Prop({ type: 30-12-2023 })
  30-12-2023: 30-12-2023;

  @Prop({ type: 31-12-2023 })
  31-12-2023: 31-12-2023;

  @Prop({ type: 25-10-2023 })
  25-10-2023: 25-10-2023;

  @Prop({ type: 26-10-2023 })
  26-10-2023: 26-10-2023;

  @Prop({ type: 27-10-2023 })
  27-10-2023: 27-10-2023;

  @Prop({ type: 28-10-2023 })
  28-10-2023: 28-10-2023;

  @Prop({ type: 29-10-2023 })
  29-10-2023: 29-10-2023;

  @Prop({ type: 30-10-2023 })
  30-10-2023: 30-10-2023;

  @Prop({ type: 01-11-2023 })
  01-11-2023: 01-11-2023;

  @Prop({ type: 02-11-2023 })
  02-11-2023: 02-11-2023;

  @Prop({ type: 03-11-2023 })
  03-11-2023: 03-11-2023;

  @Prop({ type: 24-10-2023 })
  24-10-2023: 24-10-2023;

  @Prop({ type: 31-10-2023 })
  31-10-2023: 31-10-2023;

  @Prop({ type: 04-11-2023 })
  04-11-2023: 04-11-2023;

  @Prop({ type: 05-11-2023 })
  05-11-2023: 05-11-2023;

  @Prop({ type: 06-11-2023 })
  06-11-2023: 06-11-2023;

  @Prop({ type: 01-12-2023 })
  01-12-2023: 01-12-2023;

  @Prop({ type: 02-12-2023 })
  02-12-2023: 02-12-2023;

  @Prop({ type: 07-11-2023 })
  07-11-2023: 07-11-2023;

  @Prop({ type: 08-11-2023 })
  08-11-2023: 08-11-2023;

  @Prop({ type: 09-11-2023 })
  09-11-2023: 09-11-2023;

  @Prop({ type: 10-11-2023 })
  10-11-2023: 10-11-2023;

  @Prop({ type: 11-11-2023 })
  11-11-2023: 11-11-2023;

  @Prop({ type: 12-11-2023 })
  12-11-2023: 12-11-2023;

  @Prop({ type: 13-11-2023 })
  13-11-2023: 13-11-2023;

  @Prop({ type: 14-11-2023 })
  14-11-2023: 14-11-2023;

  @Prop({ type: 15-11-2023 })
  15-11-2023: 15-11-2023;

  @Prop({ type: 16-11-2023 })
  16-11-2023: 16-11-2023;

  @Prop({ type: 22-11-2023 })
  22-11-2023: 22-11-2023;

  @Prop({ type: 23-11-2023 })
  23-11-2023: 23-11-2023;

  @Prop({ type: 24-11-2023 })
  24-11-2023: 24-11-2023;

  @Prop({ type: 25-11-2023 })
  25-11-2023: 25-11-2023;

  @Prop({ type: 26-11-2023 })
  26-11-2023: 26-11-2023;

  @Prop({ type: 27-11-2023 })
  27-11-2023: 27-11-2023;

  @Prop({ type: 28-11-2023 })
  28-11-2023: 28-11-2023;

  @Prop({ type: 17-11-2023 })
  17-11-2023: 17-11-2023;

  @Prop({ type: 18-11-2023 })
  18-11-2023: 18-11-2023;

  @Prop({ type: 19-11-2023 })
  19-11-2023: 19-11-2023;

  @Prop({ type: 20-11-2023 })
  20-11-2023: 20-11-2023;

  @Prop({ type: 21-11-2023 })
  21-11-2023: 21-11-2023;

  @Prop({ type: 06-12-2023 })
  06-12-2023: 06-12-2023;

  @Prop({ type: 07-12-2023 })
  07-12-2023: 07-12-2023;

  @Prop({ type: 29-11-2023 })
  29-11-2023: 29-11-2023;

  @Prop({ type: 30-11-2023 })
  30-11-2023: 30-11-2023;

  @Prop({ type: 03-12-2023 })
  03-12-2023: 03-12-2023;

  @Prop({ type: 04-12-2023 })
  04-12-2023: 04-12-2023;

  @Prop({ type: 08-12-2023 })
  08-12-2023: 08-12-2023;

  @Prop({ type: 05-12-2023 })
  05-12-2023: 05-12-2023;

  @Prop({ type: 09-12-2023 })
  09-12-2023: 09-12-2023;

  @Prop({ type: 10-12-2023 })
  10-12-2023: 10-12-2023;

  @Prop({ type: 13-12-2023 })
  13-12-2023: 13-12-2023;

  @Prop({ type: 14-12-2023 })
  14-12-2023: 14-12-2023;

  @Prop({ type: 15-12-2023 })
  15-12-2023: 15-12-2023;

  @Prop({ type: 01-01-2024 })
  01-01-2024: 01-01-2024;

  @Prop({ type: 02-01-2024 })
  02-01-2024: 02-01-2024;

  @Prop({ type: 03-01-2024 })
  03-01-2024: 03-01-2024;

  @Prop({ type: 04-01-2024 })
  04-01-2024: 04-01-2024;

  @Prop({ type: 05-01-2024 })
  05-01-2024: 05-01-2024;

  @Prop({ type: 24-01-2024 })
  24-01-2024: 24-01-2024;

  @Prop({ type: 06-01-2024 })
  06-01-2024: 06-01-2024;

  @Prop({ type: 07-01-2024 })
  07-01-2024: 07-01-2024;

  @Prop({ type: 08-01-2024 })
  08-01-2024: 08-01-2024;

  @Prop({ type: 09-01-2024 })
  09-01-2024: 09-01-2024;

  @Prop({ type: 10-01-2024 })
  10-01-2024: 10-01-2024;

  @Prop({ type: 11-01-2024 })
  11-01-2024: 11-01-2024;

  @Prop({ type: 12-01-2024 })
  12-01-2024: 12-01-2024;

  @Prop({ type: 16-01-2024 })
  16-01-2024: 16-01-2024;

  @Prop({ type: 17-01-2024 })
  17-01-2024: 17-01-2024;

  @Prop({ type: 18-01-2024 })
  18-01-2024: 18-01-2024;

  @Prop({ type: 19-01-2024 })
  19-01-2024: 19-01-2024;

  @Prop({ type: 20-01-2024 })
  20-01-2024: 20-01-2024;

  @Prop({ type: 21-01-2024 })
  21-01-2024: 21-01-2024;

  @Prop({ type: 22-01-2024 })
  22-01-2024: 22-01-2024;

  @Prop({ type: 23-01-2024 })
  23-01-2024: 23-01-2024;

  @Prop({ type: 25-01-2024 })
  25-01-2024: 25-01-2024;

  @Prop({ type: 26-01-2024 })
  26-01-2024: 26-01-2024;

  @Prop({ type: 27-01-2024 })
  27-01-2024: 27-01-2024;

  @Prop({ type: 28-01-2024 })
  28-01-2024: 28-01-2024;

  @Prop({ type: 29-01-2024 })
  29-01-2024: 29-01-2024;

  @Prop({ type: 30-01-2024 })
  30-01-2024: 30-01-2024;

  @Prop({ type: 31-01-2024 })
  31-01-2024: 31-01-2024;

  @Prop({ type: 13-01-2024 })
  13-01-2024: 13-01-2024;

  @Prop({ type: 14-01-2024 })
  14-01-2024: 14-01-2024;

  @Prop({ type: 15-01-2024 })
  15-01-2024: 15-01-2024;

  @Prop({ type: 01-02-2024 })
  01-02-2024: 01-02-2024;

  @Prop({ type: 02-02-2024 })
  02-02-2024: 02-02-2024;

  @Prop({ type: 03-02-2024 })
  03-02-2024: 03-02-2024;

  @Prop({ type: 04-02-2024 })
  04-02-2024: 04-02-2024;

  @Prop({ type: 05-02-2024 })
  05-02-2024: 05-02-2024;

  @Prop({ type: 06-02-2024 })
  06-02-2024: 06-02-2024;

  @Prop({ type: 07-02-2024 })
  07-02-2024: 07-02-2024;

  @Prop({ type: 08-02-2024 })
  08-02-2024: 08-02-2024;

  @Prop({ type: 09-02-2024 })
  09-02-2024: 09-02-2024;

  @Prop({ type: 10-02-2024 })
  10-02-2024: 10-02-2024;

  @Prop({ type: 11-02-2024 })
  11-02-2024: 11-02-2024;

  @Prop({ type: 12-02-2024 })
  12-02-2024: 12-02-2024;

  @Prop({ type: 13-02-2024 })
  13-02-2024: 13-02-2024;

  @Prop({ type: 14-02-2024 })
  14-02-2024: 14-02-2024;

  @Prop({ type: 15-02-2024 })
  15-02-2024: 15-02-2024;

  @Prop({ type: 16-02-2024 })
  16-02-2024: 16-02-2024;

  @Prop({ type: 17-02-2024 })
  17-02-2024: 17-02-2024;

  @Prop({ type: 18-02-2024 })
  18-02-2024: 18-02-2024;

  @Prop({ type: 19-02-2024 })
  19-02-2024: 19-02-2024;

  @Prop({ type: 20-02-2024 })
  20-02-2024: 20-02-2024;

  @Prop({ type: 21-02-2024 })
  21-02-2024: 21-02-2024;

  @Prop({ type: 22-02-2024 })
  22-02-2024: 22-02-2024;

  @Prop({ type: 23-02-2024 })
  23-02-2024: 23-02-2024;

  @Prop({ type: 24-02-2024 })
  24-02-2024: 24-02-2024;

  @Prop({ type: 25-02-2024 })
  25-02-2024: 25-02-2024;

  @Prop({ type: 26-02-2024 })
  26-02-2024: 26-02-2024;

  @Prop({ type: 01-03-2024 })
  01-03-2024: 01-03-2024;

  @Prop({ type: 02-03-2024 })
  02-03-2024: 02-03-2024;

  @Prop({ type: 03-03-2024 })
  03-03-2024: 03-03-2024;

  @Prop({ type: 04-03-2024 })
  04-03-2024: 04-03-2024;

  @Prop({ type: 05-03-2024 })
  05-03-2024: 05-03-2024;

  @Prop({ type: 06-03-2024 })
  06-03-2024: 06-03-2024;

  @Prop({ type: 07-03-2024 })
  07-03-2024: 07-03-2024;

  @Prop({ type: 08-03-2024 })
  08-03-2024: 08-03-2024;

  @Prop({ type: 09-03-2024 })
  09-03-2024: 09-03-2024;

  @Prop({ type: 10-03-2024 })
  10-03-2024: 10-03-2024;

  @Prop({ type: 11-03-2024 })
  11-03-2024: 11-03-2024;

  @Prop({ type: 12-03-2024 })
  12-03-2024: 12-03-2024;

  @Prop({ type: 13-03-2024 })
  13-03-2024: 13-03-2024;

  @Prop({ type: 14-03-2024 })
  14-03-2024: 14-03-2024;

  @Prop({ type: 15-03-2024 })
  15-03-2024: 15-03-2024;

  @Prop({ type: 16-03-2024 })
  16-03-2024: 16-03-2024;

  @Prop({ type: 17-03-2024 })
  17-03-2024: 17-03-2024;

  @Prop({ type: 18-03-2024 })
  18-03-2024: 18-03-2024;

  @Prop({ type: 19-03-2024 })
  19-03-2024: 19-03-2024;

  @Prop({ type: 01-04-2024 })
  01-04-2024: 01-04-2024;

  @Prop({ type: 02-04-2024 })
  02-04-2024: 02-04-2024;

  @Prop({ type: 03-04-2024 })
  03-04-2024: 03-04-2024;

  @Prop({ type: 04-04-2024 })
  04-04-2024: 04-04-2024;

  @Prop({ type: 05-04-2024 })
  05-04-2024: 05-04-2024;

  @Prop({ type: 06-04-2024 })
  06-04-2024: 06-04-2024;

  @Prop({ type: 07-04-2024 })
  07-04-2024: 07-04-2024;

  @Prop({ type: 27-03-2024 })
  27-03-2024: 27-03-2024;

  @Prop({ type: 08-04-2024 })
  08-04-2024: 08-04-2024;

  @Prop({ type: 09-04-2024 })
  09-04-2024: 09-04-2024;

  @Prop({ type: 10-04-2024 })
  10-04-2024: 10-04-2024;

  @Prop({ type: 11-04-2024 })
  11-04-2024: 11-04-2024;

  @Prop({ type: 12-04-2024 })
  12-04-2024: 12-04-2024;

  @Prop({ type: 16-04-2024 })
  16-04-2024: 16-04-2024;

  @Prop({ type: 17-04-2024 })
  17-04-2024: 17-04-2024;

  @Prop({ type: 18-04-2024 })
  18-04-2024: 18-04-2024;

  @Prop({ type: 19-04-2024 })
  19-04-2024: 19-04-2024;

  @Prop({ type: 20-04-2024 })
  20-04-2024: 20-04-2024;

  @Prop({ type: 21-04-2024 })
  21-04-2024: 21-04-2024;

  @Prop({ type: 22-04-2024 })
  22-04-2024: 22-04-2024;

  @Prop({ type: 23-04-2024 })
  23-04-2024: 23-04-2024;

  @Prop({ type: 13-04-2024 })
  13-04-2024: 13-04-2024;

  @Prop({ type: 14-04-2024 })
  14-04-2024: 14-04-2024;

  @Prop({ type: 15-04-2024 })
  15-04-2024: 15-04-2024;

  @Prop({ type: 20-03-2024 })
  20-03-2024: 20-03-2024;

  @Prop({ type: 21-03-2024 })
  21-03-2024: 21-03-2024;

  @Prop({ type: 22-03-2024 })
  22-03-2024: 22-03-2024;

  @Prop({ type: 23-03-2024 })
  23-03-2024: 23-03-2024;

  @Prop({ type: 24-03-2024 })
  24-03-2024: 24-03-2024;

  @Prop({ type: 25-03-2024 })
  25-03-2024: 25-03-2024;

  @Prop({ type: 26-03-2024 })
  26-03-2024: 26-03-2024;

  @Prop({ type: 28-03-2024 })
  28-03-2024: 28-03-2024;

  @Prop({ type: 29-03-2024 })
  29-03-2024: 29-03-2024;

  @Prop({ type: 30-03-2024 })
  30-03-2024: 30-03-2024;

  @Prop({ type: 31-03-2024 })
  31-03-2024: 31-03-2024;

  @Prop({ type: 24-04-2024 })
  24-04-2024: 24-04-2024;

  @Prop({ type: 25-04-2024 })
  25-04-2024: 25-04-2024;

  @Prop({ type: 26-04-2024 })
  26-04-2024: 26-04-2024;

  @Prop({ type: 27-04-2024 })
  27-04-2024: 27-04-2024;

  @Prop({ type: 28-04-2024 })
  28-04-2024: 28-04-2024;

  @Prop({ type: 29-04-2024 })
  29-04-2024: 29-04-2024;

  @Prop({ type: 30-04-2024 })
  30-04-2024: 30-04-2024;

  @Prop({ type: 01-05-2024 })
  01-05-2024: 01-05-2024;

  @Prop({ type: 02-05-2024 })
  02-05-2024: 02-05-2024;

  @Prop({ type: 03-05-2024 })
  03-05-2024: 03-05-2024;

  @Prop({ type: 04-05-2024 })
  04-05-2024: 04-05-2024;

  @Prop({ type: 05-05-2024 })
  05-05-2024: 05-05-2024;

  @Prop({ type: 06-05-2024 })
  06-05-2024: 06-05-2024;

  @Prop({ type: 07-05-2024 })
  07-05-2024: 07-05-2024;

  @Prop({ type: 08-05-2024 })
  08-05-2024: 08-05-2024;

  @Prop({ type: 09-05-2024 })
  09-05-2024: 09-05-2024;

  @Prop({ type: 10-05-2024 })
  10-05-2024: 10-05-2024;

  @Prop({ type: 11-05-2024 })
  11-05-2024: 11-05-2024;

  @Prop({ type: 12-05-2024 })
  12-05-2024: 12-05-2024;

  @Prop({ type: 13-05-2024 })
  13-05-2024: 13-05-2024;

  @Prop({ type: 14-05-2024 })
  14-05-2024: 14-05-2024;

  @Prop({ type: 15-05-2024 })
  15-05-2024: 15-05-2024;

  @Prop({ type: 16-05-2024 })
  16-05-2024: 16-05-2024;

  @Prop({ type: 17-05-2024 })
  17-05-2024: 17-05-2024;

  @Prop({ type: 18-05-2024 })
  18-05-2024: 18-05-2024;

  @Prop({ type: 19-05-2024 })
  19-05-2024: 19-05-2024;

  @Prop({ type: 20-05-2024 })
  20-05-2024: 20-05-2024;

  @Prop({ type: 21-05-2024 })
  21-05-2024: 21-05-2024;

  @Prop({ type: 22-05-2024 })
  22-05-2024: 22-05-2024;

  @Prop({ type: 23-05-2024 })
  23-05-2024: 23-05-2024;

  @Prop({ type: 24-05-2024 })
  24-05-2024: 24-05-2024;

  @Prop({ type: 25-05-2024 })
  25-05-2024: 25-05-2024;

  @Prop({ type: 26-05-2024 })
  26-05-2024: 26-05-2024;

  @Prop({ type: 27-05-2024 })
  27-05-2024: 27-05-2024;

  @Prop({ type: 28-05-2024 })
  28-05-2024: 28-05-2024;

  @Prop({ type: 29-05-2024 })
  29-05-2024: 29-05-2024;

  @Prop({ type: 30-05-2024 })
  30-05-2024: 30-05-2024;

  @Prop({ type: 31-05-2024 })
  31-05-2024: 31-05-2024;

  @Prop({ type: 01-06-2024 })
  01-06-2024: 01-06-2024;

  @Prop({ type: 02-06-2024 })
  02-06-2024: 02-06-2024;

  @Prop({ type: 03-06-2024 })
  03-06-2024: 03-06-2024;

  @Prop({ type: 04-06-2024 })
  04-06-2024: 04-06-2024;

  @Prop({ type: 05-06-2024 })
  05-06-2024: 05-06-2024;

  @Prop({ type: 06-06-2024 })
  06-06-2024: 06-06-2024;

  @Prop({ type: 07-06-2024 })
  07-06-2024: 07-06-2024;

  @Prop({ type: 16-06-2024 })
  16-06-2024: 16-06-2024;

  @Prop({ type: 17-06-2024 })
  17-06-2024: 17-06-2024;

  @Prop({ type: 18-06-2024 })
  18-06-2024: 18-06-2024;

  @Prop({ type: 19-06-2024 })
  19-06-2024: 19-06-2024;

  @Prop({ type: 20-06-2024 })
  20-06-2024: 20-06-2024;

  @Prop({ type: 08-06-2024 })
  08-06-2024: 08-06-2024;

  @Prop({ type: 09-06-2024 })
  09-06-2024: 09-06-2024;

  @Prop({ type: 10-06-2024 })
  10-06-2024: 10-06-2024;

  @Prop({ type: 12-06-2024 })
  12-06-2024: 12-06-2024;

  @Prop({ type: 13-06-2024 })
  13-06-2024: 13-06-2024;

  @Prop({ type: 21-06-2024 })
  21-06-2024: 21-06-2024;

  @Prop({ type: 22-06-2024 })
  22-06-2024: 22-06-2024;

  @Prop({ type: 23-06-2024 })
  23-06-2024: 23-06-2024;

  @Prop({ type: 24-06-2024 })
  24-06-2024: 24-06-2024;

  @Prop({ type: 25-06-2024 })
  25-06-2024: 25-06-2024;

  @Prop({ type: 11-06-2024 })
  11-06-2024: 11-06-2024;

  @Prop({ type: 14-06-2024 })
  14-06-2024: 14-06-2024;

  @Prop({ type: 15-06-2024 })
  15-06-2024: 15-06-2024;

  @Prop({ type: 26-06-2024 })
  26-06-2024: 26-06-2024;

  @Prop({ type: 01-07-2024 })
  01-07-2024: 01-07-2024;

  @Prop({ type: 27-06-2024 })
  27-06-2024: 27-06-2024;

  @Prop({ type: 28-06-2024 })
  28-06-2024: 28-06-2024;

  @Prop({ type: 29-06-2024 })
  29-06-2024: 29-06-2024;

  @Prop({ type: 30-06-2024 })
  30-06-2024: 30-06-2024;

  @Prop({ type: 02-07-2024 })
  02-07-2024: 02-07-2024;

  @Prop({ type: 03-07-2024 })
  03-07-2024: 03-07-2024;

  @Prop({ type: 04-07-2024 })
  04-07-2024: 04-07-2024;

  @Prop({ type: 05-07-2024 })
  05-07-2024: 05-07-2024;

  @Prop({ type: 06-07-2024 })
  06-07-2024: 06-07-2024;

  @Prop({ type: 07-07-2024 })
  07-07-2024: 07-07-2024;

  @Prop({ type: 08-07-2024 })
  08-07-2024: 08-07-2024;

  @Prop({ type: 09-07-2024 })
  09-07-2024: 09-07-2024;

  @Prop({ type: 10-07-2024 })
  10-07-2024: 10-07-2024;

  @Prop({ type: 11-07-2024 })
  11-07-2024: 11-07-2024;

  @Prop({ type: 12-07-2024 })
  12-07-2024: 12-07-2024;

  @Prop({ type: 16-07-2024 })
  16-07-2024: 16-07-2024;

  @Prop({ type: 17-07-2024 })
  17-07-2024: 17-07-2024;

  @Prop({ type: 18-07-2024 })
  18-07-2024: 18-07-2024;

  @Prop({ type: 19-07-2024 })
  19-07-2024: 19-07-2024;

  @Prop({ type: 13-07-2024 })
  13-07-2024: 13-07-2024;

  @Prop({ type: 14-07-2024 })
  14-07-2024: 14-07-2024;

  @Prop({ type: 15-07-2024 })
  15-07-2024: 15-07-2024;

  @Prop({ type: 20-07-2024 })
  20-07-2024: 20-07-2024;

  @Prop({ type: 21-07-2024 })
  21-07-2024: 21-07-2024;

  @Prop({ type: 22-07-2024 })
  22-07-2024: 22-07-2024;

  @Prop({ type: 23-07-2024 })
  23-07-2024: 23-07-2024;

  @Prop({ type: 24-07-2024 })
  24-07-2024: 24-07-2024;

  @Prop({ type: 25-07-2024 })
  25-07-2024: 25-07-2024;

  @Prop({ type: 26-07-2024 })
  26-07-2024: 26-07-2024;

  @Prop({ type: 27-07-2024 })
  27-07-2024: 27-07-2024;

  @Prop({ type: 28-07-2024 })
  28-07-2024: 28-07-2024;

  @Prop({ type: 29-07-2024 })
  29-07-2024: 29-07-2024;

  @Prop({ type: 30-07-2024 })
  30-07-2024: 30-07-2024;

  @Prop({ type: 31-07-2024 })
  31-07-2024: 31-07-2024;

  @Prop({ type: 01-08-2024 })
  01-08-2024: 01-08-2024;

  @Prop({ type: 02-08-2024 })
  02-08-2024: 02-08-2024;

  @Prop({ type: 03-08-2024 })
  03-08-2024: 03-08-2024;

  @Prop({ type: 04-08-2024 })
  04-08-2024: 04-08-2024;

  @Prop({ type: 05-08-2024 })
  05-08-2024: 05-08-2024;

  @Prop({ type: 06-08-2024 })
  06-08-2024: 06-08-2024;

  @Prop({ type: 07-08-2024 })
  07-08-2024: 07-08-2024;

  @Prop({ type: 08-08-2024 })
  08-08-2024: 08-08-2024;

  @Prop({ type: 09-08-2024 })
  09-08-2024: 09-08-2024;

  @Prop({ type: 10-08-2024 })
  10-08-2024: 10-08-2024;

  @Prop({ type: 16-08-2024 })
  16-08-2024: 16-08-2024;

  @Prop({ type: 17-08-2024 })
  17-08-2024: 17-08-2024;

  @Prop({ type: 18-08-2024 })
  18-08-2024: 18-08-2024;

  @Prop({ type: 19-08-2024 })
  19-08-2024: 19-08-2024;

  @Prop({ type: 20-08-2024 })
  20-08-2024: 20-08-2024;

  @Prop({ type: 21-08-2024 })
  21-08-2024: 21-08-2024;

  @Prop({ type: 22-08-2024 })
  22-08-2024: 22-08-2024;

  @Prop({ type: 23-08-2024 })
  23-08-2024: 23-08-2024;

  @Prop({ type: 11-08-2024 })
  11-08-2024: 11-08-2024;

  @Prop({ type: 12-08-2024 })
  12-08-2024: 12-08-2024;

  @Prop({ type: 13-08-2024 })
  13-08-2024: 13-08-2024;

  @Prop({ type: 14-08-2024 })
  14-08-2024: 14-08-2024;

  @Prop({ type: 15-08-2024 })
  15-08-2024: 15-08-2024;

  @Prop({ type: 24-08-2024 })
  24-08-2024: 24-08-2024;

  @Prop({ type: 25-08-2024 })
  25-08-2024: 25-08-2024;

  @Prop({ type: 26-08-2024 })
  26-08-2024: 26-08-2024;

  @Prop({ type: 27-08-2024 })
  27-08-2024: 27-08-2024;

  @Prop({ type: 28-08-2024 })
  28-08-2024: 28-08-2024;

  @Prop({ type: 29-08-2024 })
  29-08-2024: 29-08-2024;

  @Prop({ type: 01-09-2024 })
  01-09-2024: 01-09-2024;

  @Prop({ type: 02-09-2024 })
  02-09-2024: 02-09-2024;

  @Prop({ type: 30-08-2024 })
  30-08-2024: 30-08-2024;

  @Prop({ type: 31-08-2024 })
  31-08-2024: 31-08-2024;

  @Prop({ type: 03-09-2024 })
  03-09-2024: 03-09-2024;

  @Prop({ type: 04-09-2024 })
  04-09-2024: 04-09-2024;

  @Prop({ type: 05-09-2024 })
  05-09-2024: 05-09-2024;

  @Prop({ type: 06-09-2024 })
  06-09-2024: 06-09-2024;

  @Prop({ type: 07-09-2024 })
  07-09-2024: 07-09-2024;

  @Prop({ type: 08-09-2024 })
  08-09-2024: 08-09-2024;

  @Prop({ type: 09-09-2024 })
  09-09-2024: 09-09-2024;

  @Prop({ type: 11-09-2024 })
  11-09-2024: 11-09-2024;

  @Prop({ type: 25-09-2024 })
  25-09-2024: 25-09-2024;

  @Prop({ type: 26-09-2024 })
  26-09-2024: 26-09-2024;

  @Prop({ type: 27-09-2024 })
  27-09-2024: 27-09-2024;

  @Prop({ type: 28-09-2024 })
  28-09-2024: 28-09-2024;

  @Prop({ type: 29-09-2024 })
  29-09-2024: 29-09-2024;

  @Prop({ type: 30-09-2024 })
  30-09-2024: 30-09-2024;

  @Prop({ type: 16-09-2024 })
  16-09-2024: 16-09-2024;

  @Prop({ type: 17-09-2024 })
  17-09-2024: 17-09-2024;

  @Prop({ type: 18-09-2024 })
  18-09-2024: 18-09-2024;

  @Prop({ type: 19-09-2024 })
  19-09-2024: 19-09-2024;

  @Prop({ type: 20-09-2024 })
  20-09-2024: 20-09-2024;

  @Prop({ type: 21-09-2024 })
  21-09-2024: 21-09-2024;

  @Prop({ type: 22-09-2024 })
  22-09-2024: 22-09-2024;

  @Prop({ type: 23-09-2024 })
  23-09-2024: 23-09-2024;

  @Prop({ type: 24-09-2024 })
  24-09-2024: 24-09-2024;

  @Prop({ type: 01-10-2024 })
  01-10-2024: 01-10-2024;

  @Prop({ type: 02-10-2024 })
  02-10-2024: 02-10-2024;

  @Prop({ type: 03-10-2024 })
  03-10-2024: 03-10-2024;

  @Prop({ type: 04-10-2024 })
  04-10-2024: 04-10-2024;

  @Prop({ type: 05-10-2024 })
  05-10-2024: 05-10-2024;

  @Prop({ type: 06-10-2024 })
  06-10-2024: 06-10-2024;

  @Prop({ type: 07-10-2024 })
  07-10-2024: 07-10-2024;

  @Prop({ type: 08-10-2024 })
  08-10-2024: 08-10-2024;

  @Prop({ type: 16-10-2024 })
  16-10-2024: 16-10-2024;

  @Prop({ type: 17-10-2024 })
  17-10-2024: 17-10-2024;

  @Prop({ type: 18-10-2024 })
  18-10-2024: 18-10-2024;

  @Prop({ type: 09-10-2024 })
  09-10-2024: 09-10-2024;

  @Prop({ type: 10-10-2024 })
  10-10-2024: 10-10-2024;

  @Prop({ type: 11-10-2024 })
  11-10-2024: 11-10-2024;

  @Prop({ type: 12-10-2024 })
  12-10-2024: 12-10-2024;

  @Prop({ type: 13-10-2024 })
  13-10-2024: 13-10-2024;

  @Prop({ type: 14-10-2024 })
  14-10-2024: 14-10-2024;

  @Prop({ type: 19-10-2024 })
  19-10-2024: 19-10-2024;

  @Prop({ type: 20-10-2024 })
  20-10-2024: 20-10-2024;

  @Prop({ type: 21-10-2024 })
  21-10-2024: 21-10-2024;

  @Prop({ type: 01-11-2024 })
  01-11-2024: 01-11-2024;

  @Prop({ type: 02-11-2024 })
  02-11-2024: 02-11-2024;

  @Prop({ type: 03-11-2024 })
  03-11-2024: 03-11-2024;

  @Prop({ type: 04-11-2024 })
  04-11-2024: 04-11-2024;

  @Prop({ type: 05-11-2024 })
  05-11-2024: 05-11-2024;

  @Prop({ type: 22-10-2024 })
  22-10-2024: 22-10-2024;

  @Prop({ type: 23-10-2024 })
  23-10-2024: 23-10-2024;

  @Prop({ type: 24-10-2024 })
  24-10-2024: 24-10-2024;

  @Prop({ type: 15-10-2024 })
  15-10-2024: 15-10-2024;

  @Prop({ type: 28-10-2024 })
  28-10-2024: 28-10-2024;

  @Prop({ type: 29-10-2024 })
  29-10-2024: 29-10-2024;

  @Prop({ type: 30-10-2024 })
  30-10-2024: 30-10-2024;

  @Prop({ type: 31-10-2024 })
  31-10-2024: 31-10-2024;

  @Prop({ type: 06-11-2024 })
  06-11-2024: 06-11-2024;

  @Prop({ type: 07-11-2024 })
  07-11-2024: 07-11-2024;

  @Prop({ type: 08-11-2024 })
  08-11-2024: 08-11-2024;

  @Prop({ type: 09-11-2024 })
  09-11-2024: 09-11-2024;

  @Prop({ type: 10-11-2024 })
  10-11-2024: 10-11-2024;

  @Prop({ type: 11-11-2024 })
  11-11-2024: 11-11-2024;

  @Prop({ type: 12-11-2024 })
  12-11-2024: 12-11-2024;

  @Prop({ type: 13-11-2024 })
  13-11-2024: 13-11-2024;

  @Prop({ type: 14-11-2024 })
  14-11-2024: 14-11-2024;

  @Prop({ type: 15-11-2024 })
  15-11-2024: 15-11-2024;

  @Prop({ type: 16-11-2024 })
  16-11-2024: 16-11-2024;

  @Prop({ type: 17-11-2024 })
  17-11-2024: 17-11-2024;

  @Prop({ type: 18-11-2024 })
  18-11-2024: 18-11-2024;

  @Prop({ type: 19-11-2024 })
  19-11-2024: 19-11-2024;

  @Prop({ type: 20-11-2024 })
  20-11-2024: 20-11-2024;

  @Prop({ type: 21-11-2024 })
  21-11-2024: 21-11-2024;

  @Prop({ type: 22-11-2024 })
  22-11-2024: 22-11-2024;

  @Prop({ type: 23-11-2024 })
  23-11-2024: 23-11-2024;

  @Prop({ type: 24-11-2024 })
  24-11-2024: 24-11-2024;

  @Prop({ type: 25-11-2024 })
  25-11-2024: 25-11-2024;

  @Prop({ type: 26-11-2024 })
  26-11-2024: 26-11-2024;

  @Prop({ type: 27-11-2024 })
  27-11-2024: 27-11-2024;

  @Prop({ type: 28-11-2024 })
  28-11-2024: 28-11-2024;

  @Prop({ type: 29-11-2024 })
  29-11-2024: 29-11-2024;

  @Prop({ type: 01-12-2024 })
  01-12-2024: 01-12-2024;

  @Prop({ type: 02-12-2024 })
  02-12-2024: 02-12-2024;

  @Prop({ type: 03-12-2024 })
  03-12-2024: 03-12-2024;

  @Prop({ type: 04-12-2024 })
  04-12-2024: 04-12-2024;

  @Prop({ type: 05-12-2024 })
  05-12-2024: 05-12-2024;

  @Prop({ type: 06-12-2024 })
  06-12-2024: 06-12-2024;

  @Prop({ type: 07-12-2024 })
  07-12-2024: 07-12-2024;

  @Prop({ type: 08-12-2024 })
  08-12-2024: 08-12-2024;

  @Prop({ type: 11-12-2024 })
  11-12-2024: 11-12-2024;

  @Prop({ type: 12-12-2024 })
  12-12-2024: 12-12-2024;

  @Prop({ type: 16-12-2024 })
  16-12-2024: 16-12-2024;

  @Prop({ type: 17-12-2024 })
  17-12-2024: 17-12-2024;

  @Prop({ type: 18-12-2024 })
  18-12-2024: 18-12-2024;

  @Prop({ type: 19-12-2024 })
  19-12-2024: 19-12-2024;

  @Prop({ type: 09-12-2024 })
  09-12-2024: 09-12-2024;

  @Prop({ type: 10-12-2024 })
  10-12-2024: 10-12-2024;

  @Prop({ type: 20-12-2024 })
  20-12-2024: 20-12-2024;

  @Prop({ type: 30-12-2024 })
  30-12-2024: 30-12-2024;

  @Prop({ type: 31-12-2024 })
  31-12-2024: 31-12-2024;

  @Prop({ type: 01-01-2025 })
  01-01-2025: 01-01-2025;

  @Prop({ type: 02-01-2025 })
  02-01-2025: 02-01-2025;

  @Prop({ type: 03-01-2025 })
  03-01-2025: 03-01-2025;

  @Prop({ type: 21-12-2024 })
  21-12-2024: 21-12-2024;

  @Prop({ type: 08-01-2025 })
  08-01-2025: 08-01-2025;

  @Prop({ type: 09-01-2025 })
  09-01-2025: 09-01-2025;

  @Prop({ type: 10-01-2025 })
  10-01-2025: 10-01-2025;

  @Prop({ type: 11-01-2025 })
  11-01-2025: 11-01-2025;

  @Prop({ type: 12-01-2025 })
  12-01-2025: 12-01-2025;

  @Prop({ type: 13-01-2025 })
  13-01-2025: 13-01-2025;

  @Prop({ type: 04-01-2025 })
  04-01-2025: 04-01-2025;

  @Prop({ type: 05-01-2025 })
  05-01-2025: 05-01-2025;

  @Prop({ type: 06-01-2025 })
  06-01-2025: 06-01-2025;

  @Prop({ type: 07-01-2025 })
  07-01-2025: 07-01-2025;

  @Prop({ type: 14-01-2025 })
  14-01-2025: 14-01-2025;

  @Prop({ type: 15-01-2025 })
  15-01-2025: 15-01-2025;

  @Prop({ type: 16-01-2025 })
  16-01-2025: 16-01-2025;

  @Prop({ type: 17-01-2025 })
  17-01-2025: 17-01-2025;

  @Prop({ type: 29-12-2024 })
  29-12-2024: 29-12-2024;

  @Prop({ type: 18-01-2025 })
  18-01-2025: 18-01-2025;

  @Prop({ type: 19-01-2025 })
  19-01-2025: 19-01-2025;

  @Prop({ type: 20-01-2025 })
  20-01-2025: 20-01-2025;

  @Prop({ type: 21-01-2025 })
  21-01-2025: 21-01-2025;

  @Prop({ type: 22-01-2025 })
  22-01-2025: 22-01-2025;

  @Prop({ type: 23-01-2025 })
  23-01-2025: 23-01-2025;

  @Prop({ type: 24-01-2025 })
  24-01-2025: 24-01-2025;

  @Prop({ type: 25-01-2025 })
  25-01-2025: 25-01-2025;

  @Prop({ type: 26-01-2025 })
  26-01-2025: 26-01-2025;

  @Prop({ type: 27-01-2025 })
  27-01-2025: 27-01-2025;

  @Prop({ type: 28-01-2025 })
  28-01-2025: 28-01-2025;

  @Prop({ type: 29-01-2025 })
  29-01-2025: 29-01-2025;

  @Prop({ type: 30-01-2025 })
  30-01-2025: 30-01-2025;

  @Prop({ type: 31-01-2025 })
  31-01-2025: 31-01-2025;

  @Prop({ type: 01-02-2025 })
  01-02-2025: 01-02-2025;

  @Prop({ type: 02-02-2025 })
  02-02-2025: 02-02-2025;

  @Prop({ type: 03-02-2025 })
  03-02-2025: 03-02-2025;

  @Prop({ type: 04-02-2025 })
  04-02-2025: 04-02-2025;

  @Prop({ type: 05-02-2025 })
  05-02-2025: 05-02-2025;

  @Prop({ type: 06-02-2025 })
  06-02-2025: 06-02-2025;

  @Prop({ type: 07-02-2025 })
  07-02-2025: 07-02-2025;

  @Prop({ type: 08-02-2025 })
  08-02-2025: 08-02-2025;

  @Prop({ type: 09-02-2025 })
  09-02-2025: 09-02-2025;

  @Prop({ type: 10-02-2025 })
  10-02-2025: 10-02-2025;

  @Prop({ type: 11-02-2025 })
  11-02-2025: 11-02-2025;

  @Prop({ type: 12-02-2025 })
  12-02-2025: 12-02-2025;

  @Prop({ type: 13-02-2025 })
  13-02-2025: 13-02-2025;

  @Prop({ type: 16-02-2025 })
  16-02-2025: 16-02-2025;

  @Prop({ type: 17-02-2025 })
  17-02-2025: 17-02-2025;

  @Prop({ type: 18-02-2025 })
  18-02-2025: 18-02-2025;

  @Prop({ type: 19-02-2025 })
  19-02-2025: 19-02-2025;

  @Prop({ type: 20-02-2025 })
  20-02-2025: 20-02-2025;

  @Prop({ type: 21-02-2025 })
  21-02-2025: 21-02-2025;

  @Prop({ type: 14-02-2025 })
  14-02-2025: 14-02-2025;

  @Prop({ type: 15-02-2025 })
  15-02-2025: 15-02-2025;

  @Prop({ type: 26-02-2025 })
  26-02-2025: 26-02-2025;

  @Prop({ type: 27-02-2025 })
  27-02-2025: 27-02-2025;

  @Prop({ type: 28-02-2025 })
  28-02-2025: 28-02-2025;

  @Prop({ type: 22-02-2025 })
  22-02-2025: 22-02-2025;

  @Prop({ type: 23-02-2025 })
  23-02-2025: 23-02-2025;

  @Prop({ type: 24-02-2025 })
  24-02-2025: 24-02-2025;

  @Prop({ type: 25-02-2025 })
  25-02-2025: 25-02-2025;

  @Prop({ type: 01-03-2025 })
  01-03-2025: 01-03-2025;

  @Prop({ type: 02-03-2025 })
  02-03-2025: 02-03-2025;

  @Prop({ type: 03-03-2025 })
  03-03-2025: 03-03-2025;

  @Prop({ type: 04-03-2025 })
  04-03-2025: 04-03-2025;

  @Prop({ type: 05-03-2025 })
  05-03-2025: 05-03-2025;

  @Prop({ type: 06-03-2025 })
  06-03-2025: 06-03-2025;

  @Prop({ type: 07-03-2025 })
  07-03-2025: 07-03-2025;

  @Prop({ type: 08-03-2025 })
  08-03-2025: 08-03-2025;

  @Prop({ type: 09-03-2025 })
  09-03-2025: 09-03-2025;

  @Prop({ type: 10-03-2025 })
  10-03-2025: 10-03-2025;

  @Prop({ type: 11-03-2025 })
  11-03-2025: 11-03-2025;

  @Prop({ type: 12-03-2025 })
  12-03-2025: 12-03-2025;

  @Prop({ type: 13-03-2025 })
  13-03-2025: 13-03-2025;

  @Prop({ type: 14-03-2025 })
  14-03-2025: 14-03-2025;

  @Prop({ type: 15-03-2025 })
  15-03-2025: 15-03-2025;

  @Prop({ type: 16-03-2025 })
  16-03-2025: 16-03-2025;

  @Prop({ type: 17-03-2025 })
  17-03-2025: 17-03-2025;

  @Prop({ type: 18-03-2025 })
  18-03-2025: 18-03-2025;

  @Prop({ type: 19-03-2025 })
  19-03-2025: 19-03-2025;

  @Prop({ type: 20-03-2025 })
  20-03-2025: 20-03-2025;

  @Prop({ type: 21-03-2025 })
  21-03-2025: 21-03-2025;

  @Prop({ type: 22-03-2025 })
  22-03-2025: 22-03-2025;

  @Prop({ type: 23-03-2025 })
  23-03-2025: 23-03-2025;

  @Prop({ type: 24-03-2025 })
  24-03-2025: 24-03-2025;

  @Prop({ type: 25-03-2025 })
  25-03-2025: 25-03-2025;

  @Prop({ type: 26-03-2025 })
  26-03-2025: 26-03-2025;

  @Prop({ type: 27-03-2025 })
  27-03-2025: 27-03-2025;

  @Prop({ type: 28-03-2025 })
  28-03-2025: 28-03-2025;

  @Prop({ type: 29-03-2025 })
  29-03-2025: 29-03-2025;

  @Prop({ type: 01-04-2025 })
  01-04-2025: 01-04-2025;

  @Prop({ type: 02-04-2025 })
  02-04-2025: 02-04-2025;

  @Prop({ type: 03-04-2025 })
  03-04-2025: 03-04-2025;

  @Prop({ type: 04-04-2025 })
  04-04-2025: 04-04-2025;

  @Prop({ type: 30-03-2025 })
  30-03-2025: 30-03-2025;

  @Prop({ type: 31-03-2025 })
  31-03-2025: 31-03-2025;

  @Prop({ type: 05-04-2025 })
  05-04-2025: 05-04-2025;

  @Prop({ type: 06-04-2025 })
  06-04-2025: 06-04-2025;

  @Prop({ type: 07-04-2025 })
  07-04-2025: 07-04-2025;

  @Prop({ type: 08-04-2025 })
  08-04-2025: 08-04-2025;

  @Prop({ type: 09-04-2025 })
  09-04-2025: 09-04-2025;

  @Prop({ type: 10-04-2025 })
  10-04-2025: 10-04-2025;

  @Prop({ type: 11-04-2025 })
  11-04-2025: 11-04-2025;

  @Prop({ type: 16-04-2025 })
  16-04-2025: 16-04-2025;

  @Prop({ type: 17-04-2025 })
  17-04-2025: 17-04-2025;

  @Prop({ type: 18-04-2025 })
  18-04-2025: 18-04-2025;

  @Prop({ type: 19-04-2025 })
  19-04-2025: 19-04-2025;

  @Prop({ type: 20-04-2025 })
  20-04-2025: 20-04-2025;

  @Prop({ type: 12-04-2025 })
  12-04-2025: 12-04-2025;

  @Prop({ type: 14-05-2025 })
  14-05-2025: 14-05-2025;

  @Prop({ type: 15-05-2025 })
  15-05-2025: 15-05-2025;

  @Prop({ type: 16-07-2025 })
  16-07-2025: 16-07-2025;

  @Prop({ type: 17-07-2025 })
  17-07-2025: 17-07-2025;

  @Prop({ type: 18-07-2025 })
  18-07-2025: 18-07-2025;

  @Prop({ type: 13-04-2025 })
  13-04-2025: 13-04-2025;

  @Prop({ type: 14-04-2025 })
  14-04-2025: 14-04-2025;

  @Prop({ type: 15-04-2025 })
  15-04-2025: 15-04-2025;

  @Prop({ type: 21-04-2025 })
  21-04-2025: 21-04-2025;

  @Prop({ type: 22-04-2025 })
  22-04-2025: 22-04-2025;

  @Prop({ type: 23-04-2025 })
  23-04-2025: 23-04-2025;

  @Prop({ type: 24-04-2025 })
  24-04-2025: 24-04-2025;

  @Prop({ type: 25-04-2025 })
  25-04-2025: 25-04-2025;

  @Prop({ type: 01-05-2025 })
  01-05-2025: 01-05-2025;

  @Prop({ type: 02-05-2025 })
  02-05-2025: 02-05-2025;

  @Prop({ type: 03-05-2025 })
  03-05-2025: 03-05-2025;

  @Prop({ type: 04-05-2025 })
  04-05-2025: 04-05-2025;

  @Prop({ type: 05-05-2025 })
  05-05-2025: 05-05-2025;

  @Prop({ type: 06-05-2025 })
  06-05-2025: 06-05-2025;

  @Prop({ type: 26-04-2025 })
  26-04-2025: 26-04-2025;

  @Prop({ type: 27-04-2025 })
  27-04-2025: 27-04-2025;

  @Prop({ type: 28-04-2025 })
  28-04-2025: 28-04-2025;

  @Prop({ type: 29-04-2025 })
  29-04-2025: 29-04-2025;
}

@Schema()
export class DailySalariesWithInc {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];
}

@Schema()
export class 16-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class Result {
  @Prop({ type: 16-05-2022 })
  16-05-2022: 16-05-2022;

  @Prop({ type: 17-05-2022 })
  17-05-2022: 17-05-2022;

  @Prop({ type: 18-05-2022 })
  18-05-2022: 18-05-2022;

  @Prop({ type: 19-05-2022 })
  19-05-2022: 19-05-2022;

  @Prop({ type: 20-05-2022 })
  20-05-2022: 20-05-2022;

  @Prop({ type: 21-05-2022 })
  21-05-2022: 21-05-2022;

  @Prop({ type: 22-05-2022 })
  22-05-2022: 22-05-2022;

  @Prop({ type: 23-05-2022 })
  23-05-2022: 23-05-2022;

  @Prop({ type: 24-05-2022 })
  24-05-2022: 24-05-2022;

  @Prop({ type: 25-05-2022 })
  25-05-2022: 25-05-2022;

  @Prop({ type: 26-05-2022 })
  26-05-2022: 26-05-2022;

  @Prop({ type: 27-05-2022 })
  27-05-2022: 27-05-2022;

  @Prop({ type: 28-05-2022 })
  28-05-2022: 28-05-2022;

  @Prop({ type: 29-05-2022 })
  29-05-2022: 29-05-2022;

  @Prop({ type: 30-05-2022 })
  30-05-2022: 30-05-2022;

  @Prop({ type: 31-05-2022 })
  31-05-2022: 31-05-2022;

  @Prop({ type: 01-05-2022 })
  01-05-2022: 01-05-2022;

  @Prop({ type: 02-05-2022 })
  02-05-2022: 02-05-2022;

  @Prop({ type: 03-05-2022 })
  03-05-2022: 03-05-2022;

  @Prop({ type: 04-05-2022 })
  04-05-2022: 04-05-2022;

  @Prop({ type: 05-05-2022 })
  05-05-2022: 05-05-2022;

  @Prop({ type: 06-05-2022 })
  06-05-2022: 06-05-2022;

  @Prop({ type: 07-05-2022 })
  07-05-2022: 07-05-2022;

  @Prop({ type: 08-05-2022 })
  08-05-2022: 08-05-2022;

  @Prop({ type: 09-05-2022 })
  09-05-2022: 09-05-2022;

  @Prop({ type: 10-05-2022 })
  10-05-2022: 10-05-2022;

  @Prop({ type: 01-02-2021 })
  01-02-2021: 01-02-2021;

  @Prop({ type: 02-02-2021 })
  02-02-2021: 02-02-2021;

  @Prop({ type: 03-02-2021 })
  03-02-2021: 03-02-2021;

  @Prop({ type: 04-02-2021 })
  04-02-2021: 04-02-2021;

  @Prop({ type: 05-02-2021 })
  05-02-2021: 05-02-2021;

  @Prop({ type: 06-02-2021 })
  06-02-2021: 06-02-2021;

  @Prop({ type: 07-02-2021 })
  07-02-2021: 07-02-2021;

  @Prop({ type: 08-02-2021 })
  08-02-2021: 08-02-2021;

  @Prop({ type: 08-06-2022 })
  08-06-2022: 08-06-2022;

  @Prop({ type: 09-06-2022 })
  09-06-2022: 09-06-2022;

  @Prop({ type: 10-06-2022 })
  10-06-2022: 10-06-2022;

  @Prop({ type: 11-06-2022 })
  11-06-2022: 11-06-2022;

  @Prop({ type: 01-06-2022 })
  01-06-2022: 01-06-2022;

  @Prop({ type: 02-06-2022 })
  02-06-2022: 02-06-2022;

  @Prop({ type: 03-06-2022 })
  03-06-2022: 03-06-2022;

  @Prop({ type: 04-06-2022 })
  04-06-2022: 04-06-2022;

  @Prop({ type: 05-06-2022 })
  05-06-2022: 05-06-2022;

  @Prop({ type: 06-06-2022 })
  06-06-2022: 06-06-2022;

  @Prop({ type: 07-06-2022 })
  07-06-2022: 07-06-2022;

  @Prop({ type: 12-06-2022 })
  12-06-2022: 12-06-2022;

  @Prop({ type: 13-06-2022 })
  13-06-2022: 13-06-2022;

  @Prop({ type: 14-06-2022 })
  14-06-2022: 14-06-2022;

  @Prop({ type: 15-06-2022 })
  15-06-2022: 15-06-2022;

  @Prop({ type: 16-06-2022 })
  16-06-2022: 16-06-2022;

  @Prop({ type: 17-06-2022 })
  17-06-2022: 17-06-2022;

  @Prop({ type: 18-06-2022 })
  18-06-2022: 18-06-2022;

  @Prop({ type: 19-06-2022 })
  19-06-2022: 19-06-2022;

  @Prop({ type: 20-06-2022 })
  20-06-2022: 20-06-2022;

  @Prop({ type: 21-06-2022 })
  21-06-2022: 21-06-2022;

  @Prop({ type: 22-06-2022 })
  22-06-2022: 22-06-2022;

  @Prop({ type: 23-06-2022 })
  23-06-2022: 23-06-2022;

  @Prop({ type: 24-06-2022 })
  24-06-2022: 24-06-2022;

  @Prop({ type: 25-06-2022 })
  25-06-2022: 25-06-2022;

  @Prop({ type: 26-06-2022 })
  26-06-2022: 26-06-2022;

  @Prop({ type: 27-06-2022 })
  27-06-2022: 27-06-2022;

  @Prop({ type: 28-06-2022 })
  28-06-2022: 28-06-2022;

  @Prop({ type: 29-06-2022 })
  29-06-2022: 29-06-2022;

  @Prop({ type: 30-06-2022 })
  30-06-2022: 30-06-2022;

  @Prop({ type: 16-03-2022 })
  16-03-2022: 16-03-2022;

  @Prop({ type: 17-03-2022 })
  17-03-2022: 17-03-2022;

  @Prop({ type: 18-03-2022 })
  18-03-2022: 18-03-2022;

  @Prop({ type: 19-03-2022 })
  19-03-2022: 19-03-2022;

  @Prop({ type: 20-03-2022 })
  20-03-2022: 20-03-2022;

  @Prop({ type: 21-03-2022 })
  21-03-2022: 21-03-2022;

  @Prop({ type: 22-03-2022 })
  22-03-2022: 22-03-2022;

  @Prop({ type: 23-03-2022 })
  23-03-2022: 23-03-2022;

  @Prop({ type: 01-07-2022 })
  01-07-2022: 01-07-2022;

  @Prop({ type: 02-07-2022 })
  02-07-2022: 02-07-2022;

  @Prop({ type: 03-07-2022 })
  03-07-2022: 03-07-2022;

  @Prop({ type: 04-07-2022 })
  04-07-2022: 04-07-2022;

  @Prop({ type: 05-07-2022 })
  05-07-2022: 05-07-2022;

  @Prop({ type: 06-07-2022 })
  06-07-2022: 06-07-2022;

  @Prop({ type: 07-07-2022 })
  07-07-2022: 07-07-2022;

  @Prop({ type: 08-07-2022 })
  08-07-2022: 08-07-2022;

  @Prop({ type: 09-07-2022 })
  09-07-2022: 09-07-2022;

  @Prop({ type: 10-07-2022 })
  10-07-2022: 10-07-2022;

  @Prop({ type: 11-07-2022 })
  11-07-2022: 11-07-2022;

  @Prop({ type: 12-07-2022 })
  12-07-2022: 12-07-2022;

  @Prop({ type: 13-07-2022 })
  13-07-2022: 13-07-2022;

  @Prop({ type: 14-07-2022 })
  14-07-2022: 14-07-2022;

  @Prop({ type: 15-07-2022 })
  15-07-2022: 15-07-2022;

  @Prop({ type: 16-07-2022 })
  16-07-2022: 16-07-2022;

  @Prop({ type: 17-07-2022 })
  17-07-2022: 17-07-2022;

  @Prop({ type: 18-07-2022 })
  18-07-2022: 18-07-2022;

  @Prop({ type: 19-07-2022 })
  19-07-2022: 19-07-2022;

  @Prop({ type: 20-07-2022 })
  20-07-2022: 20-07-2022;

  @Prop({ type: 21-07-2022 })
  21-07-2022: 21-07-2022;

  @Prop({ type: 22-07-2022 })
  22-07-2022: 22-07-2022;

  @Prop({ type: 23-07-2022 })
  23-07-2022: 23-07-2022;

  @Prop({ type: 24-07-2022 })
  24-07-2022: 24-07-2022;

  @Prop({ type: 25-07-2022 })
  25-07-2022: 25-07-2022;

  @Prop({ type: 26-07-2022 })
  26-07-2022: 26-07-2022;

  @Prop({ type: 27-07-2022 })
  27-07-2022: 27-07-2022;

  @Prop({ type: 28-07-2022 })
  28-07-2022: 28-07-2022;

  @Prop({ type: 29-07-2022 })
  29-07-2022: 29-07-2022;

  @Prop({ type: 30-07-2022 })
  30-07-2022: 30-07-2022;

  @Prop({ type: 01-06-2020 })
  01-06-2020: 01-06-2020;

  @Prop({ type: 02-06-2020 })
  02-06-2020: 02-06-2020;

  @Prop({ type: 03-06-2020 })
  03-06-2020: 03-06-2020;

  @Prop({ type: 04-06-2020 })
  04-06-2020: 04-06-2020;

  @Prop({ type: 05-06-2020 })
  05-06-2020: 05-06-2020;

  @Prop({ type: 06-06-2020 })
  06-06-2020: 06-06-2020;

  @Prop({ type: 07-06-2020 })
  07-06-2020: 07-06-2020;

  @Prop({ type: 08-06-2020 })
  08-06-2020: 08-06-2020;

  @Prop({ type: 09-06-2020 })
  09-06-2020: 09-06-2020;

  @Prop({ type: 10-06-2020 })
  10-06-2020: 10-06-2020;

  @Prop({ type: 11-06-2020 })
  11-06-2020: 11-06-2020;

  @Prop({ type: 12-06-2020 })
  12-06-2020: 12-06-2020;

  @Prop({ type: 13-06-2020 })
  13-06-2020: 13-06-2020;

  @Prop({ type: 14-06-2020 })
  14-06-2020: 14-06-2020;

  @Prop({ type: 15-06-2020 })
  15-06-2020: 15-06-2020;

  @Prop({ type: 31-07-2022 })
  31-07-2022: 31-07-2022;

  @Prop({ type: 01-08-2022 })
  01-08-2022: 01-08-2022;

  @Prop({ type: 02-08-2022 })
  02-08-2022: 02-08-2022;

  @Prop({ type: 03-08-2022 })
  03-08-2022: 03-08-2022;

  @Prop({ type: 04-08-2022 })
  04-08-2022: 04-08-2022;

  @Prop({ type: 05-08-2022 })
  05-08-2022: 05-08-2022;

  @Prop({ type: 06-08-2022 })
  06-08-2022: 06-08-2022;

  @Prop({ type: 07-08-2022 })
  07-08-2022: 07-08-2022;

  @Prop({ type: 08-08-2022 })
  08-08-2022: 08-08-2022;

  @Prop({ type: 09-08-2022 })
  09-08-2022: 09-08-2022;

  @Prop({ type: 10-08-2022 })
  10-08-2022: 10-08-2022;

  @Prop({ type: 11-08-2022 })
  11-08-2022: 11-08-2022;

  @Prop({ type: 12-08-2022 })
  12-08-2022: 12-08-2022;

  @Prop({ type: 13-08-2022 })
  13-08-2022: 13-08-2022;

  @Prop({ type: 14-08-2022 })
  14-08-2022: 14-08-2022;

  @Prop({ type: 15-08-2022 })
  15-08-2022: 15-08-2022;

  @Prop({ type: 16-08-2022 })
  16-08-2022: 16-08-2022;

  @Prop({ type: 17-08-2022 })
  17-08-2022: 17-08-2022;

  @Prop({ type: 18-08-2022 })
  18-08-2022: 18-08-2022;

  @Prop({ type: 19-08-2022 })
  19-08-2022: 19-08-2022;

  @Prop({ type: 20-08-2022 })
  20-08-2022: 20-08-2022;

  @Prop({ type: 21-08-2022 })
  21-08-2022: 21-08-2022;

  @Prop({ type: 22-08-2022 })
  22-08-2022: 22-08-2022;

  @Prop({ type: 23-08-2022 })
  23-08-2022: 23-08-2022;

  @Prop({ type: 24-08-2022 })
  24-08-2022: 24-08-2022;

  @Prop({ type: 25-08-2022 })
  25-08-2022: 25-08-2022;

  @Prop({ type: 26-08-2022 })
  26-08-2022: 26-08-2022;

  @Prop({ type: 31-08-2022 })
  31-08-2022: 31-08-2022;

  @Prop({ type: 01-09-2022 })
  01-09-2022: 01-09-2022;

  @Prop({ type: 02-09-2022 })
  02-09-2022: 02-09-2022;

  @Prop({ type: 03-09-2022 })
  03-09-2022: 03-09-2022;

  @Prop({ type: 04-09-2022 })
  04-09-2022: 04-09-2022;

  @Prop({ type: 05-09-2022 })
  05-09-2022: 05-09-2022;

  @Prop({ type: 27-08-2022 })
  27-08-2022: 27-08-2022;

  @Prop({ type: 28-08-2022 })
  28-08-2022: 28-08-2022;

  @Prop({ type: 29-08-2022 })
  29-08-2022: 29-08-2022;

  @Prop({ type: 30-08-2022 })
  30-08-2022: 30-08-2022;

  @Prop({ type: 06-09-2022 })
  06-09-2022: 06-09-2022;

  @Prop({ type: 07-09-2022 })
  07-09-2022: 07-09-2022;

  @Prop({ type: 08-09-2022 })
  08-09-2022: 08-09-2022;

  @Prop({ type: 09-09-2022 })
  09-09-2022: 09-09-2022;

  @Prop({ type: 16-09-2022 })
  16-09-2022: 16-09-2022;

  @Prop({ type: 17-09-2022 })
  17-09-2022: 17-09-2022;

  @Prop({ type: 18-09-2022 })
  18-09-2022: 18-09-2022;

  @Prop({ type: 19-09-2022 })
  19-09-2022: 19-09-2022;

  @Prop({ type: 14-09-2022 })
  14-09-2022: 14-09-2022;

  @Prop({ type: 28-09-2022 })
  28-09-2022: 28-09-2022;

  @Prop({ type: 29-09-2022 })
  29-09-2022: 29-09-2022;

  @Prop({ type: 30-09-2022 })
  30-09-2022: 30-09-2022;

  @Prop({ type: 20-09-2022 })
  20-09-2022: 20-09-2022;

  @Prop({ type: 21-09-2022 })
  21-09-2022: 21-09-2022;

  @Prop({ type: 15-09-2022 })
  15-09-2022: 15-09-2022;

  @Prop({ type: 01-10-2022 })
  01-10-2022: 01-10-2022;

  @Prop({ type: 02-10-2022 })
  02-10-2022: 02-10-2022;

  @Prop({ type: 03-10-2022 })
  03-10-2022: 03-10-2022;

  @Prop({ type: 04-10-2022 })
  04-10-2022: 04-10-2022;

  @Prop({ type: 05-10-2022 })
  05-10-2022: 05-10-2022;

  @Prop({ type: 06-10-2022 })
  06-10-2022: 06-10-2022;

  @Prop({ type: 07-10-2022 })
  07-10-2022: 07-10-2022;

  @Prop({ type: 08-10-2022 })
  08-10-2022: 08-10-2022;

  @Prop({ type: 16-10-2022 })
  16-10-2022: 16-10-2022;

  @Prop({ type: 17-10-2022 })
  17-10-2022: 17-10-2022;

  @Prop({ type: 19-10-2022 })
  19-10-2022: 19-10-2022;

  @Prop({ type: 20-10-2022 })
  20-10-2022: 20-10-2022;

  @Prop({ type: 21-10-2022 })
  21-10-2022: 21-10-2022;

  @Prop({ type: 22-10-2022 })
  22-10-2022: 22-10-2022;

  @Prop({ type: 23-10-2022 })
  23-10-2022: 23-10-2022;

  @Prop({ type: 24-10-2022 })
  24-10-2022: 24-10-2022;

  @Prop({ type: 25-10-2022 })
  25-10-2022: 25-10-2022;

  @Prop({ type: 18-10-2022 })
  18-10-2022: 18-10-2022;

  @Prop({ type: 26-10-2022 })
  26-10-2022: 26-10-2022;

  @Prop({ type: 27-10-2022 })
  27-10-2022: 27-10-2022;

  @Prop({ type: 28-10-2022 })
  28-10-2022: 28-10-2022;

  @Prop({ type: 01-11-2022 })
  01-11-2022: 01-11-2022;

  @Prop({ type: 02-11-2022 })
  02-11-2022: 02-11-2022;

  @Prop({ type: 03-11-2022 })
  03-11-2022: 03-11-2022;

  @Prop({ type: 04-11-2022 })
  04-11-2022: 04-11-2022;

  @Prop({ type: 05-11-2022 })
  05-11-2022: 05-11-2022;

  @Prop({ type: 06-11-2022 })
  06-11-2022: 06-11-2022;

  @Prop({ type: 07-11-2022 })
  07-11-2022: 07-11-2022;

  @Prop({ type: 08-11-2022 })
  08-11-2022: 08-11-2022;

  @Prop({ type: 09-11-2022 })
  09-11-2022: 09-11-2022;

  @Prop({ type: 10-11-2022 })
  10-11-2022: 10-11-2022;

  @Prop({ type: 11-11-2022 })
  11-11-2022: 11-11-2022;

  @Prop({ type: 12-11-2022 })
  12-11-2022: 12-11-2022;

  @Prop({ type: 13-11-2022 })
  13-11-2022: 13-11-2022;

  @Prop({ type: 14-11-2022 })
  14-11-2022: 14-11-2022;

  @Prop({ type: 15-11-2022 })
  15-11-2022: 15-11-2022;

  @Prop({ type: 31-10-2022 })
  31-10-2022: 31-10-2022;

  @Prop({ type: 16-11-2022 })
  16-11-2022: 16-11-2022;

  @Prop({ type: 17-11-2022 })
  17-11-2022: 17-11-2022;

  @Prop({ type: 18-11-2022 })
  18-11-2022: 18-11-2022;

  @Prop({ type: 19-11-2022 })
  19-11-2022: 19-11-2022;

  @Prop({ type: 20-11-2022 })
  20-11-2022: 20-11-2022;

  @Prop({ type: 21-11-2022 })
  21-11-2022: 21-11-2022;

  @Prop({ type: 22-11-2022 })
  22-11-2022: 22-11-2022;

  @Prop({ type: 23-11-2022 })
  23-11-2022: 23-11-2022;

  @Prop({ type: 24-11-2022 })
  24-11-2022: 24-11-2022;

  @Prop({ type: 25-11-2022 })
  25-11-2022: 25-11-2022;

  @Prop({ type: 30-11-2022 })
  30-11-2022: 30-11-2022;

  @Prop({ type: 01-12-2022 })
  01-12-2022: 01-12-2022;

  @Prop({ type: 02-12-2022 })
  02-12-2022: 02-12-2022;

  @Prop({ type: 03-12-2022 })
  03-12-2022: 03-12-2022;

  @Prop({ type: 04-12-2022 })
  04-12-2022: 04-12-2022;

  @Prop({ type: 05-12-2022 })
  05-12-2022: 05-12-2022;

  @Prop({ type: 06-12-2022 })
  06-12-2022: 06-12-2022;

  @Prop({ type: 07-12-2022 })
  07-12-2022: 07-12-2022;

  @Prop({ type: 08-12-2022 })
  08-12-2022: 08-12-2022;

  @Prop({ type: 09-12-2022 })
  09-12-2022: 09-12-2022;

  @Prop({ type: 16-12-2022 })
  16-12-2022: 16-12-2022;

  @Prop({ type: 17-12-2022 })
  17-12-2022: 17-12-2022;

  @Prop({ type: 18-12-2022 })
  18-12-2022: 18-12-2022;

  @Prop({ type: 19-12-2022 })
  19-12-2022: 19-12-2022;

  @Prop({ type: 20-12-2022 })
  20-12-2022: 20-12-2022;

  @Prop({ type: 21-12-2022 })
  21-12-2022: 21-12-2022;

  @Prop({ type: 22-12-2022 })
  22-12-2022: 22-12-2022;

  @Prop({ type: 23-12-2022 })
  23-12-2022: 23-12-2022;

  @Prop({ type: 24-12-2022 })
  24-12-2022: 24-12-2022;

  @Prop({ type: 25-12-2022 })
  25-12-2022: 25-12-2022;

  @Prop({ type: 26-12-2022 })
  26-12-2022: 26-12-2022;

  @Prop({ type: 27-12-2022 })
  27-12-2022: 27-12-2022;

  @Prop({ type: 28-12-2022 })
  28-12-2022: 28-12-2022;

  @Prop({ type: 29-12-2022 })
  29-12-2022: 29-12-2022;

  @Prop({ type: 30-12-2022 })
  30-12-2022: 30-12-2022;

  @Prop({ type: 31-12-2022 })
  31-12-2022: 31-12-2022;

  @Prop({ type: 01-01-2023 })
  01-01-2023: 01-01-2023;

  @Prop({ type: 02-01-2023 })
  02-01-2023: 02-01-2023;

  @Prop({ type: 04-01-2023 })
  04-01-2023: 04-01-2023;

  @Prop({ type: 05-01-2023 })
  05-01-2023: 05-01-2023;

  @Prop({ type: 06-01-2023 })
  06-01-2023: 06-01-2023;

  @Prop({ type: 03-01-2023 })
  03-01-2023: 03-01-2023;

  @Prop({ type: 07-01-2023 })
  07-01-2023: 07-01-2023;

  @Prop({ type: 08-01-2023 })
  08-01-2023: 08-01-2023;

  @Prop({ type: 09-01-2023 })
  09-01-2023: 09-01-2023;

  @Prop({ type: 10-01-2023 })
  10-01-2023: 10-01-2023;

  @Prop({ type: 11-01-2023 })
  11-01-2023: 11-01-2023;

  @Prop({ type: 12-01-2023 })
  12-01-2023: 12-01-2023;

  @Prop({ type: 13-01-2023 })
  13-01-2023: 13-01-2023;

  @Prop({ type: 14-01-2023 })
  14-01-2023: 14-01-2023;

  @Prop({ type: 15-01-2023 })
  15-01-2023: 15-01-2023;

  @Prop({ type: 14-12-2022 })
  14-12-2022: 14-12-2022;

  @Prop({ type: 15-12-2022 })
  15-12-2022: 15-12-2022;

  @Prop({ type: 16-01-2023 })
  16-01-2023: 16-01-2023;

  @Prop({ type: 17-01-2023 })
  17-01-2023: 17-01-2023;

  @Prop({ type: 18-01-2023 })
  18-01-2023: 18-01-2023;

  @Prop({ type: 19-01-2023 })
  19-01-2023: 19-01-2023;

  @Prop({ type: 20-01-2023 })
  20-01-2023: 20-01-2023;

  @Prop({ type: 21-01-2023 })
  21-01-2023: 21-01-2023;

  @Prop({ type: 22-01-2023 })
  22-01-2023: 22-01-2023;

  @Prop({ type: 01-02-2023 })
  01-02-2023: 01-02-2023;

  @Prop({ type: 02-02-2023 })
  02-02-2023: 02-02-2023;

  @Prop({ type: 03-02-2023 })
  03-02-2023: 03-02-2023;

  @Prop({ type: 04-02-2023 })
  04-02-2023: 04-02-2023;

  @Prop({ type: 05-02-2023 })
  05-02-2023: 05-02-2023;

  @Prop({ type: 06-02-2023 })
  06-02-2023: 06-02-2023;

  @Prop({ type: 07-02-2023 })
  07-02-2023: 07-02-2023;

  @Prop({ type: 08-02-2023 })
  08-02-2023: 08-02-2023;

  @Prop({ type: 23-01-2023 })
  23-01-2023: 23-01-2023;

  @Prop({ type: 24-01-2023 })
  24-01-2023: 24-01-2023;

  @Prop({ type: 25-01-2023 })
  25-01-2023: 25-01-2023;

  @Prop({ type: 26-01-2023 })
  26-01-2023: 26-01-2023;

  @Prop({ type: 27-01-2023 })
  27-01-2023: 27-01-2023;

  @Prop({ type: 28-01-2023 })
  28-01-2023: 28-01-2023;

  @Prop({ type: 29-01-2023 })
  29-01-2023: 29-01-2023;

  @Prop({ type: 30-01-2023 })
  30-01-2023: 30-01-2023;

  @Prop({ type: 31-01-2023 })
  31-01-2023: 31-01-2023;

  @Prop({ type: 10-02-2023 })
  10-02-2023: 10-02-2023;

  @Prop({ type: 11-02-2023 })
  11-02-2023: 11-02-2023;

  @Prop({ type: 09-02-2023 })
  09-02-2023: 09-02-2023;

  @Prop({ type: 15-02-2023 })
  15-02-2023: 15-02-2023;

  @Prop({ type: 16-02-2023 })
  16-02-2023: 16-02-2023;

  @Prop({ type: 17-02-2023 })
  17-02-2023: 17-02-2023;

  @Prop({ type: 26-02-2023 })
  26-02-2023: 26-02-2023;

  @Prop({ type: 27-02-2023 })
  27-02-2023: 27-02-2023;

  @Prop({ type: 28-02-2023 })
  28-02-2023: 28-02-2023;

  @Prop({ type: 08-03-2023 })
  08-03-2023: 08-03-2023;

  @Prop({ type: 09-03-2023 })
  09-03-2023: 09-03-2023;

  @Prop({ type: 10-03-2023 })
  10-03-2023: 10-03-2023;

  @Prop({ type: 01-03-2023 })
  01-03-2023: 01-03-2023;

  @Prop({ type: 02-03-2023 })
  02-03-2023: 02-03-2023;

  @Prop({ type: 03-03-2023 })
  03-03-2023: 03-03-2023;

  @Prop({ type: 04-03-2023 })
  04-03-2023: 04-03-2023;

  @Prop({ type: 05-03-2023 })
  05-03-2023: 05-03-2023;

  @Prop({ type: 06-03-2023 })
  06-03-2023: 06-03-2023;

  @Prop({ type: 07-03-2023 })
  07-03-2023: 07-03-2023;

  @Prop({ type: 16-03-2023 })
  16-03-2023: 16-03-2023;

  @Prop({ type: 17-03-2023 })
  17-03-2023: 17-03-2023;

  @Prop({ type: 18-03-2023 })
  18-03-2023: 18-03-2023;

  @Prop({ type: 19-03-2023 })
  19-03-2023: 19-03-2023;

  @Prop({ type: 20-03-2023 })
  20-03-2023: 20-03-2023;

  @Prop({ type: 21-03-2023 })
  21-03-2023: 21-03-2023;

  @Prop({ type: 22-03-2023 })
  22-03-2023: 22-03-2023;

  @Prop({ type: 23-03-2023 })
  23-03-2023: 23-03-2023;

  @Prop({ type: 24-03-2023 })
  24-03-2023: 24-03-2023;

  @Prop({ type: 25-03-2023 })
  25-03-2023: 25-03-2023;

  @Prop({ type: 26-03-2023 })
  26-03-2023: 26-03-2023;

  @Prop({ type: 27-03-2023 })
  27-03-2023: 27-03-2023;

  @Prop({ type: 28-03-2023 })
  28-03-2023: 28-03-2023;

  @Prop({ type: 01-04-2023 })
  01-04-2023: 01-04-2023;

  @Prop({ type: 02-04-2023 })
  02-04-2023: 02-04-2023;

  @Prop({ type: 03-04-2023 })
  03-04-2023: 03-04-2023;

  @Prop({ type: 04-04-2023 })
  04-04-2023: 04-04-2023;

  @Prop({ type: 05-04-2023 })
  05-04-2023: 05-04-2023;

  @Prop({ type: 06-04-2023 })
  06-04-2023: 06-04-2023;

  @Prop({ type: 07-04-2023 })
  07-04-2023: 07-04-2023;

  @Prop({ type: 08-04-2023 })
  08-04-2023: 08-04-2023;

  @Prop({ type: 09-04-2023 })
  09-04-2023: 09-04-2023;

  @Prop({ type: 10-04-2023 })
  10-04-2023: 10-04-2023;

  @Prop({ type: 16-04-2023 })
  16-04-2023: 16-04-2023;

  @Prop({ type: 17-04-2023 })
  17-04-2023: 17-04-2023;

  @Prop({ type: 18-04-2023 })
  18-04-2023: 18-04-2023;

  @Prop({ type: 19-04-2023 })
  19-04-2023: 19-04-2023;

  @Prop({ type: 20-04-2023 })
  20-04-2023: 20-04-2023;

  @Prop({ type: 21-04-2023 })
  21-04-2023: 21-04-2023;

  @Prop({ type: 22-04-2023 })
  22-04-2023: 22-04-2023;

  @Prop({ type: 23-04-2023 })
  23-04-2023: 23-04-2023;

  @Prop({ type: 24-04-2023 })
  24-04-2023: 24-04-2023;

  @Prop({ type: 25-04-2023 })
  25-04-2023: 25-04-2023;

  @Prop({ type: 26-04-2023 })
  26-04-2023: 26-04-2023;

  @Prop({ type: 01-05-2023 })
  01-05-2023: 01-05-2023;

  @Prop({ type: 02-05-2023 })
  02-05-2023: 02-05-2023;

  @Prop({ type: 03-05-2023 })
  03-05-2023: 03-05-2023;

  @Prop({ type: 04-05-2023 })
  04-05-2023: 04-05-2023;

  @Prop({ type: 05-05-2023 })
  05-05-2023: 05-05-2023;

  @Prop({ type: 06-05-2023 })
  06-05-2023: 06-05-2023;

  @Prop({ type: 07-05-2023 })
  07-05-2023: 07-05-2023;

  @Prop({ type: 08-05-2023 })
  08-05-2023: 08-05-2023;

  @Prop({ type: 09-05-2023 })
  09-05-2023: 09-05-2023;

  @Prop({ type: 10-05-2023 })
  10-05-2023: 10-05-2023;

  @Prop({ type: 11-05-2023 })
  11-05-2023: 11-05-2023;

  @Prop({ type: 12-05-2023 })
  12-05-2023: 12-05-2023;

  @Prop({ type: 16-05-2023 })
  16-05-2023: 16-05-2023;

  @Prop({ type: 17-05-2023 })
  17-05-2023: 17-05-2023;

  @Prop({ type: 18-05-2023 })
  18-05-2023: 18-05-2023;

  @Prop({ type: 19-05-2023 })
  19-05-2023: 19-05-2023;

  @Prop({ type: 20-05-2023 })
  20-05-2023: 20-05-2023;

  @Prop({ type: 21-05-2023 })
  21-05-2023: 21-05-2023;

  @Prop({ type: 22-05-2023 })
  22-05-2023: 22-05-2023;

  @Prop({ type: 23-05-2023 })
  23-05-2023: 23-05-2023;

  @Prop({ type: 24-05-2023 })
  24-05-2023: 24-05-2023;

  @Prop({ type: 25-05-2023 })
  25-05-2023: 25-05-2023;

  @Prop({ type: 01-06-2023 })
  01-06-2023: 01-06-2023;

  @Prop({ type: 02-06-2023 })
  02-06-2023: 02-06-2023;

  @Prop({ type: 03-06-2023 })
  03-06-2023: 03-06-2023;

  @Prop({ type: 04-06-2023 })
  04-06-2023: 04-06-2023;

  @Prop({ type: 05-06-2023 })
  05-06-2023: 05-06-2023;

  @Prop({ type: 06-06-2023 })
  06-06-2023: 06-06-2023;

  @Prop({ type: 07-06-2023 })
  07-06-2023: 07-06-2023;

  @Prop({ type: 08-06-2023 })
  08-06-2023: 08-06-2023;

  @Prop({ type: 09-06-2023 })
  09-06-2023: 09-06-2023;

  @Prop({ type: 10-06-2023 })
  10-06-2023: 10-06-2023;

  @Prop({ type: 11-06-2023 })
  11-06-2023: 11-06-2023;

  @Prop({ type: 12-06-2023 })
  12-06-2023: 12-06-2023;

  @Prop({ type: 16-06-2023 })
  16-06-2023: 16-06-2023;

  @Prop({ type: 14-06-2023 })
  14-06-2023: 14-06-2023;

  @Prop({ type: 15-06-2023 })
  15-06-2023: 15-06-2023;

  @Prop({ type: 17-06-2023 })
  17-06-2023: 17-06-2023;

  @Prop({ type: 18-06-2023 })
  18-06-2023: 18-06-2023;

  @Prop({ type: 19-06-2023 })
  19-06-2023: 19-06-2023;

  @Prop({ type: 20-06-2023 })
  20-06-2023: 20-06-2023;

  @Prop({ type: 21-06-2023 })
  21-06-2023: 21-06-2023;

  @Prop({ type: 22-06-2023 })
  22-06-2023: 22-06-2023;

  @Prop({ type: 01-07-2023 })
  01-07-2023: 01-07-2023;

  @Prop({ type: 28-06-2023 })
  28-06-2023: 28-06-2023;

  @Prop({ type: 29-06-2023 })
  29-06-2023: 29-06-2023;

  @Prop({ type: 30-06-2023 })
  30-06-2023: 30-06-2023;

  @Prop({ type: 02-07-2023 })
  02-07-2023: 02-07-2023;

  @Prop({ type: 03-07-2023 })
  03-07-2023: 03-07-2023;

  @Prop({ type: 04-07-2023 })
  04-07-2023: 04-07-2023;

  @Prop({ type: 05-07-2023 })
  05-07-2023: 05-07-2023;

  @Prop({ type: 06-07-2023 })
  06-07-2023: 06-07-2023;

  @Prop({ type: 07-07-2023 })
  07-07-2023: 07-07-2023;

  @Prop({ type: 08-07-2023 })
  08-07-2023: 08-07-2023;

  @Prop({ type: 09-07-2023 })
  09-07-2023: 09-07-2023;

  @Prop({ type: 10-07-2023 })
  10-07-2023: 10-07-2023;

  @Prop({ type: 11-07-2023 })
  11-07-2023: 11-07-2023;

  @Prop({ type: 12-07-2023 })
  12-07-2023: 12-07-2023;

  @Prop({ type: 13-07-2023 })
  13-07-2023: 13-07-2023;

  @Prop({ type: 14-07-2023 })
  14-07-2023: 14-07-2023;

  @Prop({ type: 16-07-2023 })
  16-07-2023: 16-07-2023;

  @Prop({ type: 17-07-2023 })
  17-07-2023: 17-07-2023;

  @Prop({ type: 18-07-2023 })
  18-07-2023: 18-07-2023;

  @Prop({ type: 19-07-2023 })
  19-07-2023: 19-07-2023;

  @Prop({ type: 20-07-2023 })
  20-07-2023: 20-07-2023;

  @Prop({ type: 21-07-2023 })
  21-07-2023: 21-07-2023;

  @Prop({ type: 22-07-2023 })
  22-07-2023: 22-07-2023;

  @Prop({ type: 23-07-2023 })
  23-07-2023: 23-07-2023;

  @Prop({ type: 24-07-2023 })
  24-07-2023: 24-07-2023;

  @Prop({ type: 25-07-2023 })
  25-07-2023: 25-07-2023;

  @Prop({ type: 26-07-2023 })
  26-07-2023: 26-07-2023;

  @Prop({ type: 27-07-2023 })
  27-07-2023: 27-07-2023;

  @Prop({ type: 28-07-2023 })
  28-07-2023: 28-07-2023;

  @Prop({ type: 29-07-2023 })
  29-07-2023: 29-07-2023;

  @Prop({ type: 30-07-2023 })
  30-07-2023: 30-07-2023;

  @Prop({ type: 31-07-2023 })
  31-07-2023: 31-07-2023;

  @Prop({ type: 01-08-2023 })
  01-08-2023: 01-08-2023;

  @Prop({ type: 15-07-2023 })
  15-07-2023: 15-07-2023;

  @Prop({ type: 02-08-2023 })
  02-08-2023: 02-08-2023;

  @Prop({ type: 03-08-2023 })
  03-08-2023: 03-08-2023;

  @Prop({ type: 04-08-2023 })
  04-08-2023: 04-08-2023;

  @Prop({ type: 05-08-2023 })
  05-08-2023: 05-08-2023;

  @Prop({ type: 06-08-2023 })
  06-08-2023: 06-08-2023;

  @Prop({ type: 07-08-2023 })
  07-08-2023: 07-08-2023;

  @Prop({ type: 08-08-2023 })
  08-08-2023: 08-08-2023;

  @Prop({ type: 16-08-2023 })
  16-08-2023: 16-08-2023;

  @Prop({ type: 17-08-2023 })
  17-08-2023: 17-08-2023;

  @Prop({ type: 18-08-2023 })
  18-08-2023: 18-08-2023;

  @Prop({ type: 19-08-2023 })
  19-08-2023: 19-08-2023;

  @Prop({ type: 20-08-2023 })
  20-08-2023: 20-08-2023;

  @Prop({ type: 21-08-2023 })
  21-08-2023: 21-08-2023;

  @Prop({ type: 22-08-2023 })
  22-08-2023: 22-08-2023;

  @Prop({ type: 23-08-2023 })
  23-08-2023: 23-08-2023;

  @Prop({ type: 24-08-2023 })
  24-08-2023: 24-08-2023;

  @Prop({ type: 25-08-2023 })
  25-08-2023: 25-08-2023;

  @Prop({ type: 26-08-2023 })
  26-08-2023: 26-08-2023;

  @Prop({ type: 27-08-2023 })
  27-08-2023: 27-08-2023;

  @Prop({ type: 28-08-2023 })
  28-08-2023: 28-08-2023;

  @Prop({ type: 29-08-2023 })
  29-08-2023: 29-08-2023;

  @Prop({ type: 01-09-2023 })
  01-09-2023: 01-09-2023;

  @Prop({ type: 02-09-2023 })
  02-09-2023: 02-09-2023;

  @Prop({ type: 03-09-2023 })
  03-09-2023: 03-09-2023;

  @Prop({ type: 04-09-2023 })
  04-09-2023: 04-09-2023;

  @Prop({ type: 05-09-2023 })
  05-09-2023: 05-09-2023;

  @Prop({ type: 06-09-2023 })
  06-09-2023: 06-09-2023;

  @Prop({ type: 07-09-2023 })
  07-09-2023: 07-09-2023;

  @Prop({ type: 08-09-2023 })
  08-09-2023: 08-09-2023;

  @Prop({ type: 09-09-2023 })
  09-09-2023: 09-09-2023;

  @Prop({ type: 10-09-2023 })
  10-09-2023: 10-09-2023;

  @Prop({ type: 11-09-2023 })
  11-09-2023: 11-09-2023;

  @Prop({ type: 12-09-2023 })
  12-09-2023: 12-09-2023;

  @Prop({ type: 13-09-2023 })
  13-09-2023: 13-09-2023;

  @Prop({ type: 14-09-2023 })
  14-09-2023: 14-09-2023;

  @Prop({ type: 15-09-2023 })
  15-09-2023: 15-09-2023;

  @Prop({ type: 16-09-2023 })
  16-09-2023: 16-09-2023;

  @Prop({ type: 17-09-2023 })
  17-09-2023: 17-09-2023;

  @Prop({ type: 18-09-2023 })
  18-09-2023: 18-09-2023;

  @Prop({ type: 30-08-2023 })
  30-08-2023: 30-08-2023;

  @Prop({ type: 31-08-2023 })
  31-08-2023: 31-08-2023;

  @Prop({ type: 19-09-2023 })
  19-09-2023: 19-09-2023;

  @Prop({ type: 20-09-2023 })
  20-09-2023: 20-09-2023;

  @Prop({ type: 21-09-2023 })
  21-09-2023: 21-09-2023;

  @Prop({ type: 22-09-2023 })
  22-09-2023: 22-09-2023;

  @Prop({ type: 23-09-2023 })
  23-09-2023: 23-09-2023;

  @Prop({ type: 24-09-2023 })
  24-09-2023: 24-09-2023;

  @Prop({ type: 25-09-2023 })
  25-09-2023: 25-09-2023;

  @Prop({ type: 26-09-2023 })
  26-09-2023: 26-09-2023;

  @Prop({ type: 27-09-2023 })
  27-09-2023: 27-09-2023;

  @Prop({ type: 28-09-2023 })
  28-09-2023: 28-09-2023;

  @Prop({ type: 29-09-2023 })
  29-09-2023: 29-09-2023;

  @Prop({ type: 30-09-2023 })
  30-09-2023: 30-09-2023;

  @Prop({ type: 01-10-2023 })
  01-10-2023: 01-10-2023;

  @Prop({ type: 02-10-2023 })
  02-10-2023: 02-10-2023;

  @Prop({ type: 03-10-2023 })
  03-10-2023: 03-10-2023;

  @Prop({ type: 04-10-2023 })
  04-10-2023: 04-10-2023;

  @Prop({ type: 05-10-2023 })
  05-10-2023: 05-10-2023;

  @Prop({ type: 06-10-2023 })
  06-10-2023: 06-10-2023;

  @Prop({ type: 07-10-2023 })
  07-10-2023: 07-10-2023;

  @Prop({ type: 08-10-2023 })
  08-10-2023: 08-10-2023;

  @Prop({ type: 09-10-2023 })
  09-10-2023: 09-10-2023;

  @Prop({ type: 10-10-2023 })
  10-10-2023: 10-10-2023;

  @Prop({ type: 11-10-2023 })
  11-10-2023: 11-10-2023;

  @Prop({ type: 12-10-2023 })
  12-10-2023: 12-10-2023;

  @Prop({ type: 13-10-2023 })
  13-10-2023: 13-10-2023;

  @Prop({ type: 16-04-2021 })
  16-04-2021: 16-04-2021;

  @Prop({ type: 17-04-2021 })
  17-04-2021: 17-04-2021;

  @Prop({ type: 18-04-2021 })
  18-04-2021: 18-04-2021;

  @Prop({ type: 19-04-2021 })
  19-04-2021: 19-04-2021;

  @Prop({ type: 20-04-2021 })
  20-04-2021: 20-04-2021;

  @Prop({ type: 16-10-2023 })
  16-10-2023: 16-10-2023;

  @Prop({ type: 21-10-2023 })
  21-10-2023: 21-10-2023;

  @Prop({ type: 22-10-2023 })
  22-10-2023: 22-10-2023;

  @Prop({ type: 23-10-2023 })
  23-10-2023: 23-10-2023;

  @Prop({ type: 17-10-2023 })
  17-10-2023: 17-10-2023;

  @Prop({ type: 18-10-2023 })
  18-10-2023: 18-10-2023;

  @Prop({ type: 19-10-2023 })
  19-10-2023: 19-10-2023;

  @Prop({ type: 20-10-2023 })
  20-10-2023: 20-10-2023;

  @Prop({ type: 16-12-2023 })
  16-12-2023: 16-12-2023;

  @Prop({ type: 17-12-2023 })
  17-12-2023: 17-12-2023;

  @Prop({ type: 18-12-2023 })
  18-12-2023: 18-12-2023;

  @Prop({ type: 19-12-2023 })
  19-12-2023: 19-12-2023;

  @Prop({ type: 20-12-2023 })
  20-12-2023: 20-12-2023;

  @Prop({ type: 21-12-2023 })
  21-12-2023: 21-12-2023;

  @Prop({ type: 22-12-2023 })
  22-12-2023: 22-12-2023;

  @Prop({ type: 23-12-2023 })
  23-12-2023: 23-12-2023;

  @Prop({ type: 24-12-2023 })
  24-12-2023: 24-12-2023;

  @Prop({ type: 25-12-2023 })
  25-12-2023: 25-12-2023;

  @Prop({ type: 26-12-2023 })
  26-12-2023: 26-12-2023;

  @Prop({ type: 27-12-2023 })
  27-12-2023: 27-12-2023;

  @Prop({ type: 28-12-2023 })
  28-12-2023: 28-12-2023;

  @Prop({ type: 29-12-2023 })
  29-12-2023: 29-12-2023;

  @Prop({ type: 30-12-2023 })
  30-12-2023: 30-12-2023;

  @Prop({ type: 31-12-2023 })
  31-12-2023: 31-12-2023;

  @Prop({ type: 25-10-2023 })
  25-10-2023: 25-10-2023;

  @Prop({ type: 26-10-2023 })
  26-10-2023: 26-10-2023;

  @Prop({ type: 27-10-2023 })
  27-10-2023: 27-10-2023;

  @Prop({ type: 28-10-2023 })
  28-10-2023: 28-10-2023;

  @Prop({ type: 29-10-2023 })
  29-10-2023: 29-10-2023;

  @Prop({ type: 30-10-2023 })
  30-10-2023: 30-10-2023;

  @Prop({ type: 01-11-2023 })
  01-11-2023: 01-11-2023;

  @Prop({ type: 02-11-2023 })
  02-11-2023: 02-11-2023;

  @Prop({ type: 03-11-2023 })
  03-11-2023: 03-11-2023;

  @Prop({ type: 24-10-2023 })
  24-10-2023: 24-10-2023;

  @Prop({ type: 31-10-2023 })
  31-10-2023: 31-10-2023;

  @Prop({ type: 04-11-2023 })
  04-11-2023: 04-11-2023;

  @Prop({ type: 05-11-2023 })
  05-11-2023: 05-11-2023;

  @Prop({ type: 06-11-2023 })
  06-11-2023: 06-11-2023;

  @Prop({ type: 01-12-2023 })
  01-12-2023: 01-12-2023;

  @Prop({ type: 02-12-2023 })
  02-12-2023: 02-12-2023;

  @Prop({ type: 07-11-2023 })
  07-11-2023: 07-11-2023;

  @Prop({ type: 08-11-2023 })
  08-11-2023: 08-11-2023;

  @Prop({ type: 09-11-2023 })
  09-11-2023: 09-11-2023;

  @Prop({ type: 10-11-2023 })
  10-11-2023: 10-11-2023;

  @Prop({ type: 11-11-2023 })
  11-11-2023: 11-11-2023;

  @Prop({ type: 12-11-2023 })
  12-11-2023: 12-11-2023;

  @Prop({ type: 13-11-2023 })
  13-11-2023: 13-11-2023;

  @Prop({ type: 14-11-2023 })
  14-11-2023: 14-11-2023;

  @Prop({ type: 15-11-2023 })
  15-11-2023: 15-11-2023;

  @Prop({ type: 16-11-2023 })
  16-11-2023: 16-11-2023;

  @Prop({ type: 22-11-2023 })
  22-11-2023: 22-11-2023;

  @Prop({ type: 23-11-2023 })
  23-11-2023: 23-11-2023;

  @Prop({ type: 24-11-2023 })
  24-11-2023: 24-11-2023;

  @Prop({ type: 25-11-2023 })
  25-11-2023: 25-11-2023;

  @Prop({ type: 26-11-2023 })
  26-11-2023: 26-11-2023;

  @Prop({ type: 27-11-2023 })
  27-11-2023: 27-11-2023;

  @Prop({ type: 28-11-2023 })
  28-11-2023: 28-11-2023;

  @Prop({ type: 17-11-2023 })
  17-11-2023: 17-11-2023;

  @Prop({ type: 18-11-2023 })
  18-11-2023: 18-11-2023;

  @Prop({ type: 19-11-2023 })
  19-11-2023: 19-11-2023;

  @Prop({ type: 20-11-2023 })
  20-11-2023: 20-11-2023;

  @Prop({ type: 21-11-2023 })
  21-11-2023: 21-11-2023;

  @Prop({ type: 06-12-2023 })
  06-12-2023: 06-12-2023;

  @Prop({ type: 07-12-2023 })
  07-12-2023: 07-12-2023;

  @Prop({ type: 29-11-2023 })
  29-11-2023: 29-11-2023;

  @Prop({ type: 30-11-2023 })
  30-11-2023: 30-11-2023;

  @Prop({ type: 03-12-2023 })
  03-12-2023: 03-12-2023;

  @Prop({ type: 04-12-2023 })
  04-12-2023: 04-12-2023;

  @Prop({ type: 08-12-2023 })
  08-12-2023: 08-12-2023;

  @Prop({ type: 05-12-2023 })
  05-12-2023: 05-12-2023;

  @Prop({ type: 09-12-2023 })
  09-12-2023: 09-12-2023;

  @Prop({ type: 10-12-2023 })
  10-12-2023: 10-12-2023;

  @Prop({ type: 13-12-2023 })
  13-12-2023: 13-12-2023;

  @Prop({ type: 14-12-2023 })
  14-12-2023: 14-12-2023;

  @Prop({ type: 15-12-2023 })
  15-12-2023: 15-12-2023;

  @Prop({ type: 01-01-2024 })
  01-01-2024: 01-01-2024;

  @Prop({ type: 02-01-2024 })
  02-01-2024: 02-01-2024;

  @Prop({ type: 03-01-2024 })
  03-01-2024: 03-01-2024;

  @Prop({ type: 04-01-2024 })
  04-01-2024: 04-01-2024;

  @Prop({ type: 05-01-2024 })
  05-01-2024: 05-01-2024;

  @Prop({ type: 24-01-2024 })
  24-01-2024: 24-01-2024;

  @Prop({ type: 06-01-2024 })
  06-01-2024: 06-01-2024;

  @Prop({ type: 07-01-2024 })
  07-01-2024: 07-01-2024;

  @Prop({ type: 08-01-2024 })
  08-01-2024: 08-01-2024;

  @Prop({ type: 09-01-2024 })
  09-01-2024: 09-01-2024;

  @Prop({ type: 10-01-2024 })
  10-01-2024: 10-01-2024;

  @Prop({ type: 11-01-2024 })
  11-01-2024: 11-01-2024;

  @Prop({ type: 12-01-2024 })
  12-01-2024: 12-01-2024;

  @Prop({ type: 16-01-2024 })
  16-01-2024: 16-01-2024;

  @Prop({ type: 17-01-2024 })
  17-01-2024: 17-01-2024;

  @Prop({ type: 18-01-2024 })
  18-01-2024: 18-01-2024;

  @Prop({ type: 19-01-2024 })
  19-01-2024: 19-01-2024;

  @Prop({ type: 20-01-2024 })
  20-01-2024: 20-01-2024;

  @Prop({ type: 21-01-2024 })
  21-01-2024: 21-01-2024;

  @Prop({ type: 22-01-2024 })
  22-01-2024: 22-01-2024;

  @Prop({ type: 23-01-2024 })
  23-01-2024: 23-01-2024;

  @Prop({ type: 25-01-2024 })
  25-01-2024: 25-01-2024;

  @Prop({ type: 26-01-2024 })
  26-01-2024: 26-01-2024;

  @Prop({ type: 27-01-2024 })
  27-01-2024: 27-01-2024;

  @Prop({ type: 28-01-2024 })
  28-01-2024: 28-01-2024;

  @Prop({ type: 29-01-2024 })
  29-01-2024: 29-01-2024;

  @Prop({ type: 30-01-2024 })
  30-01-2024: 30-01-2024;

  @Prop({ type: 31-01-2024 })
  31-01-2024: 31-01-2024;

  @Prop({ type: 13-01-2024 })
  13-01-2024: 13-01-2024;

  @Prop({ type: 14-01-2024 })
  14-01-2024: 14-01-2024;

  @Prop({ type: 15-01-2024 })
  15-01-2024: 15-01-2024;

  @Prop({ type: 01-02-2024 })
  01-02-2024: 01-02-2024;

  @Prop({ type: 02-02-2024 })
  02-02-2024: 02-02-2024;

  @Prop({ type: 03-02-2024 })
  03-02-2024: 03-02-2024;

  @Prop({ type: 04-02-2024 })
  04-02-2024: 04-02-2024;

  @Prop({ type: 05-02-2024 })
  05-02-2024: 05-02-2024;

  @Prop({ type: 06-02-2024 })
  06-02-2024: 06-02-2024;

  @Prop({ type: 07-02-2024 })
  07-02-2024: 07-02-2024;

  @Prop({ type: 08-02-2024 })
  08-02-2024: 08-02-2024;

  @Prop({ type: 09-02-2024 })
  09-02-2024: 09-02-2024;

  @Prop({ type: 10-02-2024 })
  10-02-2024: 10-02-2024;

  @Prop({ type: 11-02-2024 })
  11-02-2024: 11-02-2024;

  @Prop({ type: 12-02-2024 })
  12-02-2024: 12-02-2024;

  @Prop({ type: 13-02-2024 })
  13-02-2024: 13-02-2024;

  @Prop({ type: 14-02-2024 })
  14-02-2024: 14-02-2024;

  @Prop({ type: 15-02-2024 })
  15-02-2024: 15-02-2024;

  @Prop({ type: 16-02-2024 })
  16-02-2024: 16-02-2024;

  @Prop({ type: 17-02-2024 })
  17-02-2024: 17-02-2024;

  @Prop({ type: 18-02-2024 })
  18-02-2024: 18-02-2024;

  @Prop({ type: 19-02-2024 })
  19-02-2024: 19-02-2024;

  @Prop({ type: 20-02-2024 })
  20-02-2024: 20-02-2024;

  @Prop({ type: 21-02-2024 })
  21-02-2024: 21-02-2024;

  @Prop({ type: 22-02-2024 })
  22-02-2024: 22-02-2024;

  @Prop({ type: 23-02-2024 })
  23-02-2024: 23-02-2024;

  @Prop({ type: 24-02-2024 })
  24-02-2024: 24-02-2024;

  @Prop({ type: 25-02-2024 })
  25-02-2024: 25-02-2024;

  @Prop({ type: 26-02-2024 })
  26-02-2024: 26-02-2024;

  @Prop({ type: 01-03-2024 })
  01-03-2024: 01-03-2024;

  @Prop({ type: 02-03-2024 })
  02-03-2024: 02-03-2024;

  @Prop({ type: 03-03-2024 })
  03-03-2024: 03-03-2024;

  @Prop({ type: 04-03-2024 })
  04-03-2024: 04-03-2024;

  @Prop({ type: 05-03-2024 })
  05-03-2024: 05-03-2024;

  @Prop({ type: 06-03-2024 })
  06-03-2024: 06-03-2024;

  @Prop({ type: 07-03-2024 })
  07-03-2024: 07-03-2024;

  @Prop({ type: 08-03-2024 })
  08-03-2024: 08-03-2024;

  @Prop({ type: 09-03-2024 })
  09-03-2024: 09-03-2024;

  @Prop({ type: 10-03-2024 })
  10-03-2024: 10-03-2024;

  @Prop({ type: 11-03-2024 })
  11-03-2024: 11-03-2024;

  @Prop({ type: 12-03-2024 })
  12-03-2024: 12-03-2024;

  @Prop({ type: 13-03-2024 })
  13-03-2024: 13-03-2024;

  @Prop({ type: 14-03-2024 })
  14-03-2024: 14-03-2024;

  @Prop({ type: 15-03-2024 })
  15-03-2024: 15-03-2024;

  @Prop({ type: 16-03-2024 })
  16-03-2024: 16-03-2024;

  @Prop({ type: 17-03-2024 })
  17-03-2024: 17-03-2024;

  @Prop({ type: 18-03-2024 })
  18-03-2024: 18-03-2024;

  @Prop({ type: 19-03-2024 })
  19-03-2024: 19-03-2024;

  @Prop({ type: 01-04-2024 })
  01-04-2024: 01-04-2024;

  @Prop({ type: 02-04-2024 })
  02-04-2024: 02-04-2024;

  @Prop({ type: 03-04-2024 })
  03-04-2024: 03-04-2024;

  @Prop({ type: 04-04-2024 })
  04-04-2024: 04-04-2024;

  @Prop({ type: 05-04-2024 })
  05-04-2024: 05-04-2024;

  @Prop({ type: 06-04-2024 })
  06-04-2024: 06-04-2024;

  @Prop({ type: 07-04-2024 })
  07-04-2024: 07-04-2024;

  @Prop({ type: 27-03-2024 })
  27-03-2024: 27-03-2024;

  @Prop({ type: 08-04-2024 })
  08-04-2024: 08-04-2024;

  @Prop({ type: 09-04-2024 })
  09-04-2024: 09-04-2024;

  @Prop({ type: 10-04-2024 })
  10-04-2024: 10-04-2024;

  @Prop({ type: 11-04-2024 })
  11-04-2024: 11-04-2024;

  @Prop({ type: 12-04-2024 })
  12-04-2024: 12-04-2024;

  @Prop({ type: 16-04-2024 })
  16-04-2024: 16-04-2024;

  @Prop({ type: 17-04-2024 })
  17-04-2024: 17-04-2024;

  @Prop({ type: 18-04-2024 })
  18-04-2024: 18-04-2024;

  @Prop({ type: 19-04-2024 })
  19-04-2024: 19-04-2024;

  @Prop({ type: 20-04-2024 })
  20-04-2024: 20-04-2024;

  @Prop({ type: 21-04-2024 })
  21-04-2024: 21-04-2024;

  @Prop({ type: 22-04-2024 })
  22-04-2024: 22-04-2024;

  @Prop({ type: 23-04-2024 })
  23-04-2024: 23-04-2024;

  @Prop({ type: 13-04-2024 })
  13-04-2024: 13-04-2024;

  @Prop({ type: 14-04-2024 })
  14-04-2024: 14-04-2024;

  @Prop({ type: 15-04-2024 })
  15-04-2024: 15-04-2024;

  @Prop({ type: 20-03-2024 })
  20-03-2024: 20-03-2024;

  @Prop({ type: 21-03-2024 })
  21-03-2024: 21-03-2024;

  @Prop({ type: 22-03-2024 })
  22-03-2024: 22-03-2024;

  @Prop({ type: 23-03-2024 })
  23-03-2024: 23-03-2024;

  @Prop({ type: 24-03-2024 })
  24-03-2024: 24-03-2024;

  @Prop({ type: 25-03-2024 })
  25-03-2024: 25-03-2024;

  @Prop({ type: 26-03-2024 })
  26-03-2024: 26-03-2024;

  @Prop({ type: 28-03-2024 })
  28-03-2024: 28-03-2024;

  @Prop({ type: 29-03-2024 })
  29-03-2024: 29-03-2024;

  @Prop({ type: 30-03-2024 })
  30-03-2024: 30-03-2024;

  @Prop({ type: 31-03-2024 })
  31-03-2024: 31-03-2024;

  @Prop({ type: 24-04-2024 })
  24-04-2024: 24-04-2024;

  @Prop({ type: 25-04-2024 })
  25-04-2024: 25-04-2024;

  @Prop({ type: 26-04-2024 })
  26-04-2024: 26-04-2024;

  @Prop({ type: 27-04-2024 })
  27-04-2024: 27-04-2024;

  @Prop({ type: 28-04-2024 })
  28-04-2024: 28-04-2024;

  @Prop({ type: 29-04-2024 })
  29-04-2024: 29-04-2024;

  @Prop({ type: 30-04-2024 })
  30-04-2024: 30-04-2024;

  @Prop({ type: 01-05-2024 })
  01-05-2024: 01-05-2024;

  @Prop({ type: 02-05-2024 })
  02-05-2024: 02-05-2024;

  @Prop({ type: 03-05-2024 })
  03-05-2024: 03-05-2024;

  @Prop({ type: 04-05-2024 })
  04-05-2024: 04-05-2024;

  @Prop({ type: 05-05-2024 })
  05-05-2024: 05-05-2024;

  @Prop({ type: 06-05-2024 })
  06-05-2024: 06-05-2024;

  @Prop({ type: 07-05-2024 })
  07-05-2024: 07-05-2024;

  @Prop({ type: 08-05-2024 })
  08-05-2024: 08-05-2024;

  @Prop({ type: 09-05-2024 })
  09-05-2024: 09-05-2024;

  @Prop({ type: 10-05-2024 })
  10-05-2024: 10-05-2024;

  @Prop({ type: 11-05-2024 })
  11-05-2024: 11-05-2024;

  @Prop({ type: 12-05-2024 })
  12-05-2024: 12-05-2024;

  @Prop({ type: 13-05-2024 })
  13-05-2024: 13-05-2024;

  @Prop({ type: 14-05-2024 })
  14-05-2024: 14-05-2024;

  @Prop({ type: 15-05-2024 })
  15-05-2024: 15-05-2024;

  @Prop({ type: 16-05-2024 })
  16-05-2024: 16-05-2024;

  @Prop({ type: 17-05-2024 })
  17-05-2024: 17-05-2024;

  @Prop({ type: 18-05-2024 })
  18-05-2024: 18-05-2024;

  @Prop({ type: 19-05-2024 })
  19-05-2024: 19-05-2024;

  @Prop({ type: 20-05-2024 })
  20-05-2024: 20-05-2024;

  @Prop({ type: 21-05-2024 })
  21-05-2024: 21-05-2024;

  @Prop({ type: 22-05-2024 })
  22-05-2024: 22-05-2024;

  @Prop({ type: 23-05-2024 })
  23-05-2024: 23-05-2024;

  @Prop({ type: 24-05-2024 })
  24-05-2024: 24-05-2024;

  @Prop({ type: 25-05-2024 })
  25-05-2024: 25-05-2024;

  @Prop({ type: 26-05-2024 })
  26-05-2024: 26-05-2024;

  @Prop({ type: 27-05-2024 })
  27-05-2024: 27-05-2024;

  @Prop({ type: 28-05-2024 })
  28-05-2024: 28-05-2024;

  @Prop({ type: 29-05-2024 })
  29-05-2024: 29-05-2024;

  @Prop({ type: 30-05-2024 })
  30-05-2024: 30-05-2024;

  @Prop({ type: 31-05-2024 })
  31-05-2024: 31-05-2024;

  @Prop({ type: 01-06-2024 })
  01-06-2024: 01-06-2024;

  @Prop({ type: 02-06-2024 })
  02-06-2024: 02-06-2024;

  @Prop({ type: 03-06-2024 })
  03-06-2024: 03-06-2024;

  @Prop({ type: 04-06-2024 })
  04-06-2024: 04-06-2024;

  @Prop({ type: 05-06-2024 })
  05-06-2024: 05-06-2024;

  @Prop({ type: 06-06-2024 })
  06-06-2024: 06-06-2024;

  @Prop({ type: 07-06-2024 })
  07-06-2024: 07-06-2024;

  @Prop({ type: 16-06-2024 })
  16-06-2024: 16-06-2024;

  @Prop({ type: 17-06-2024 })
  17-06-2024: 17-06-2024;

  @Prop({ type: 18-06-2024 })
  18-06-2024: 18-06-2024;

  @Prop({ type: 19-06-2024 })
  19-06-2024: 19-06-2024;

  @Prop({ type: 20-06-2024 })
  20-06-2024: 20-06-2024;

  @Prop({ type: 08-06-2024 })
  08-06-2024: 08-06-2024;

  @Prop({ type: 09-06-2024 })
  09-06-2024: 09-06-2024;

  @Prop({ type: 10-06-2024 })
  10-06-2024: 10-06-2024;

  @Prop({ type: 12-06-2024 })
  12-06-2024: 12-06-2024;

  @Prop({ type: 13-06-2024 })
  13-06-2024: 13-06-2024;

  @Prop({ type: 21-06-2024 })
  21-06-2024: 21-06-2024;

  @Prop({ type: 22-06-2024 })
  22-06-2024: 22-06-2024;

  @Prop({ type: 23-06-2024 })
  23-06-2024: 23-06-2024;

  @Prop({ type: 24-06-2024 })
  24-06-2024: 24-06-2024;

  @Prop({ type: 25-06-2024 })
  25-06-2024: 25-06-2024;

  @Prop({ type: 11-06-2024 })
  11-06-2024: 11-06-2024;

  @Prop({ type: 14-06-2024 })
  14-06-2024: 14-06-2024;

  @Prop({ type: 15-06-2024 })
  15-06-2024: 15-06-2024;

  @Prop({ type: 26-06-2024 })
  26-06-2024: 26-06-2024;

  @Prop({ type: 01-07-2024 })
  01-07-2024: 01-07-2024;

  @Prop({ type: 27-06-2024 })
  27-06-2024: 27-06-2024;

  @Prop({ type: 28-06-2024 })
  28-06-2024: 28-06-2024;

  @Prop({ type: 29-06-2024 })
  29-06-2024: 29-06-2024;

  @Prop({ type: 30-06-2024 })
  30-06-2024: 30-06-2024;

  @Prop({ type: 02-07-2024 })
  02-07-2024: 02-07-2024;

  @Prop({ type: 03-07-2024 })
  03-07-2024: 03-07-2024;

  @Prop({ type: 04-07-2024 })
  04-07-2024: 04-07-2024;

  @Prop({ type: 05-07-2024 })
  05-07-2024: 05-07-2024;

  @Prop({ type: 06-07-2024 })
  06-07-2024: 06-07-2024;

  @Prop({ type: 07-07-2024 })
  07-07-2024: 07-07-2024;

  @Prop({ type: 08-07-2024 })
  08-07-2024: 08-07-2024;

  @Prop({ type: 09-07-2024 })
  09-07-2024: 09-07-2024;

  @Prop({ type: 10-07-2024 })
  10-07-2024: 10-07-2024;

  @Prop({ type: 11-07-2024 })
  11-07-2024: 11-07-2024;

  @Prop({ type: 12-07-2024 })
  12-07-2024: 12-07-2024;

  @Prop({ type: 16-07-2024 })
  16-07-2024: 16-07-2024;

  @Prop({ type: 17-07-2024 })
  17-07-2024: 17-07-2024;

  @Prop({ type: 18-07-2024 })
  18-07-2024: 18-07-2024;

  @Prop({ type: 19-07-2024 })
  19-07-2024: 19-07-2024;

  @Prop({ type: 13-07-2024 })
  13-07-2024: 13-07-2024;

  @Prop({ type: 14-07-2024 })
  14-07-2024: 14-07-2024;

  @Prop({ type: 15-07-2024 })
  15-07-2024: 15-07-2024;

  @Prop({ type: 20-07-2024 })
  20-07-2024: 20-07-2024;

  @Prop({ type: 21-07-2024 })
  21-07-2024: 21-07-2024;

  @Prop({ type: 22-07-2024 })
  22-07-2024: 22-07-2024;

  @Prop({ type: 23-07-2024 })
  23-07-2024: 23-07-2024;

  @Prop({ type: 24-07-2024 })
  24-07-2024: 24-07-2024;

  @Prop({ type: 25-07-2024 })
  25-07-2024: 25-07-2024;

  @Prop({ type: 26-07-2024 })
  26-07-2024: 26-07-2024;

  @Prop({ type: 27-07-2024 })
  27-07-2024: 27-07-2024;

  @Prop({ type: 28-07-2024 })
  28-07-2024: 28-07-2024;

  @Prop({ type: 29-07-2024 })
  29-07-2024: 29-07-2024;

  @Prop({ type: 30-07-2024 })
  30-07-2024: 30-07-2024;

  @Prop({ type: 31-07-2024 })
  31-07-2024: 31-07-2024;

  @Prop({ type: 01-08-2024 })
  01-08-2024: 01-08-2024;

  @Prop({ type: 02-08-2024 })
  02-08-2024: 02-08-2024;

  @Prop({ type: 03-08-2024 })
  03-08-2024: 03-08-2024;

  @Prop({ type: 04-08-2024 })
  04-08-2024: 04-08-2024;

  @Prop({ type: 05-08-2024 })
  05-08-2024: 05-08-2024;

  @Prop({ type: 06-08-2024 })
  06-08-2024: 06-08-2024;

  @Prop({ type: 07-08-2024 })
  07-08-2024: 07-08-2024;

  @Prop({ type: 08-08-2024 })
  08-08-2024: 08-08-2024;

  @Prop({ type: 09-08-2024 })
  09-08-2024: 09-08-2024;

  @Prop({ type: 10-08-2024 })
  10-08-2024: 10-08-2024;

  @Prop({ type: 16-08-2024 })
  16-08-2024: 16-08-2024;

  @Prop({ type: 17-08-2024 })
  17-08-2024: 17-08-2024;

  @Prop({ type: 18-08-2024 })
  18-08-2024: 18-08-2024;

  @Prop({ type: 19-08-2024 })
  19-08-2024: 19-08-2024;

  @Prop({ type: 20-08-2024 })
  20-08-2024: 20-08-2024;

  @Prop({ type: 21-08-2024 })
  21-08-2024: 21-08-2024;

  @Prop({ type: 22-08-2024 })
  22-08-2024: 22-08-2024;

  @Prop({ type: 23-08-2024 })
  23-08-2024: 23-08-2024;

  @Prop({ type: 11-08-2024 })
  11-08-2024: 11-08-2024;

  @Prop({ type: 12-08-2024 })
  12-08-2024: 12-08-2024;

  @Prop({ type: 13-08-2024 })
  13-08-2024: 13-08-2024;

  @Prop({ type: 14-08-2024 })
  14-08-2024: 14-08-2024;

  @Prop({ type: 15-08-2024 })
  15-08-2024: 15-08-2024;

  @Prop({ type: 24-08-2024 })
  24-08-2024: 24-08-2024;

  @Prop({ type: 25-08-2024 })
  25-08-2024: 25-08-2024;

  @Prop({ type: 26-08-2024 })
  26-08-2024: 26-08-2024;

  @Prop({ type: 27-08-2024 })
  27-08-2024: 27-08-2024;

  @Prop({ type: 28-08-2024 })
  28-08-2024: 28-08-2024;

  @Prop({ type: 29-08-2024 })
  29-08-2024: 29-08-2024;

  @Prop({ type: 01-09-2024 })
  01-09-2024: 01-09-2024;

  @Prop({ type: 02-09-2024 })
  02-09-2024: 02-09-2024;

  @Prop({ type: 30-08-2024 })
  30-08-2024: 30-08-2024;

  @Prop({ type: 31-08-2024 })
  31-08-2024: 31-08-2024;

  @Prop({ type: 03-09-2024 })
  03-09-2024: 03-09-2024;

  @Prop({ type: 04-09-2024 })
  04-09-2024: 04-09-2024;

  @Prop({ type: 05-09-2024 })
  05-09-2024: 05-09-2024;

  @Prop({ type: 06-09-2024 })
  06-09-2024: 06-09-2024;

  @Prop({ type: 07-09-2024 })
  07-09-2024: 07-09-2024;

  @Prop({ type: 08-09-2024 })
  08-09-2024: 08-09-2024;

  @Prop({ type: 09-09-2024 })
  09-09-2024: 09-09-2024;

  @Prop({ type: 11-09-2024 })
  11-09-2024: 11-09-2024;

  @Prop({ type: 25-09-2024 })
  25-09-2024: 25-09-2024;

  @Prop({ type: 26-09-2024 })
  26-09-2024: 26-09-2024;

  @Prop({ type: 27-09-2024 })
  27-09-2024: 27-09-2024;

  @Prop({ type: 28-09-2024 })
  28-09-2024: 28-09-2024;

  @Prop({ type: 29-09-2024 })
  29-09-2024: 29-09-2024;

  @Prop({ type: 30-09-2024 })
  30-09-2024: 30-09-2024;

  @Prop({ type: 16-09-2024 })
  16-09-2024: 16-09-2024;

  @Prop({ type: 17-09-2024 })
  17-09-2024: 17-09-2024;

  @Prop({ type: 18-09-2024 })
  18-09-2024: 18-09-2024;

  @Prop({ type: 19-09-2024 })
  19-09-2024: 19-09-2024;

  @Prop({ type: 20-09-2024 })
  20-09-2024: 20-09-2024;

  @Prop({ type: 21-09-2024 })
  21-09-2024: 21-09-2024;

  @Prop({ type: 22-09-2024 })
  22-09-2024: 22-09-2024;

  @Prop({ type: 23-09-2024 })
  23-09-2024: 23-09-2024;

  @Prop({ type: 24-09-2024 })
  24-09-2024: 24-09-2024;

  @Prop({ type: 01-10-2024 })
  01-10-2024: 01-10-2024;

  @Prop({ type: 02-10-2024 })
  02-10-2024: 02-10-2024;

  @Prop({ type: 03-10-2024 })
  03-10-2024: 03-10-2024;

  @Prop({ type: 04-10-2024 })
  04-10-2024: 04-10-2024;

  @Prop({ type: 05-10-2024 })
  05-10-2024: 05-10-2024;

  @Prop({ type: 06-10-2024 })
  06-10-2024: 06-10-2024;

  @Prop({ type: 07-10-2024 })
  07-10-2024: 07-10-2024;

  @Prop({ type: 08-10-2024 })
  08-10-2024: 08-10-2024;

  @Prop({ type: 16-10-2024 })
  16-10-2024: 16-10-2024;

  @Prop({ type: 17-10-2024 })
  17-10-2024: 17-10-2024;

  @Prop({ type: 18-10-2024 })
  18-10-2024: 18-10-2024;

  @Prop({ type: 09-10-2024 })
  09-10-2024: 09-10-2024;

  @Prop({ type: 10-10-2024 })
  10-10-2024: 10-10-2024;

  @Prop({ type: 11-10-2024 })
  11-10-2024: 11-10-2024;

  @Prop({ type: 12-10-2024 })
  12-10-2024: 12-10-2024;

  @Prop({ type: 13-10-2024 })
  13-10-2024: 13-10-2024;

  @Prop({ type: 14-10-2024 })
  14-10-2024: 14-10-2024;

  @Prop({ type: 19-10-2024 })
  19-10-2024: 19-10-2024;

  @Prop({ type: 20-10-2024 })
  20-10-2024: 20-10-2024;

  @Prop({ type: 21-10-2024 })
  21-10-2024: 21-10-2024;

  @Prop({ type: 01-11-2024 })
  01-11-2024: 01-11-2024;

  @Prop({ type: 02-11-2024 })
  02-11-2024: 02-11-2024;

  @Prop({ type: 03-11-2024 })
  03-11-2024: 03-11-2024;

  @Prop({ type: 04-11-2024 })
  04-11-2024: 04-11-2024;

  @Prop({ type: 05-11-2024 })
  05-11-2024: 05-11-2024;

  @Prop({ type: 22-10-2024 })
  22-10-2024: 22-10-2024;

  @Prop({ type: 23-10-2024 })
  23-10-2024: 23-10-2024;

  @Prop({ type: 24-10-2024 })
  24-10-2024: 24-10-2024;

  @Prop({ type: 15-10-2024 })
  15-10-2024: 15-10-2024;

  @Prop({ type: 28-10-2024 })
  28-10-2024: 28-10-2024;

  @Prop({ type: 29-10-2024 })
  29-10-2024: 29-10-2024;

  @Prop({ type: 30-10-2024 })
  30-10-2024: 30-10-2024;

  @Prop({ type: 31-10-2024 })
  31-10-2024: 31-10-2024;

  @Prop({ type: 06-11-2024 })
  06-11-2024: 06-11-2024;

  @Prop({ type: 07-11-2024 })
  07-11-2024: 07-11-2024;

  @Prop({ type: 08-11-2024 })
  08-11-2024: 08-11-2024;

  @Prop({ type: 09-11-2024 })
  09-11-2024: 09-11-2024;

  @Prop({ type: 10-11-2024 })
  10-11-2024: 10-11-2024;

  @Prop({ type: 11-11-2024 })
  11-11-2024: 11-11-2024;

  @Prop({ type: 12-11-2024 })
  12-11-2024: 12-11-2024;

  @Prop({ type: 13-11-2024 })
  13-11-2024: 13-11-2024;

  @Prop({ type: 14-11-2024 })
  14-11-2024: 14-11-2024;

  @Prop({ type: 15-11-2024 })
  15-11-2024: 15-11-2024;

  @Prop({ type: 16-11-2024 })
  16-11-2024: 16-11-2024;

  @Prop({ type: 17-11-2024 })
  17-11-2024: 17-11-2024;

  @Prop({ type: 18-11-2024 })
  18-11-2024: 18-11-2024;

  @Prop({ type: 19-11-2024 })
  19-11-2024: 19-11-2024;

  @Prop({ type: 20-11-2024 })
  20-11-2024: 20-11-2024;

  @Prop({ type: 21-11-2024 })
  21-11-2024: 21-11-2024;

  @Prop({ type: 22-11-2024 })
  22-11-2024: 22-11-2024;

  @Prop({ type: 23-11-2024 })
  23-11-2024: 23-11-2024;

  @Prop({ type: 24-11-2024 })
  24-11-2024: 24-11-2024;

  @Prop({ type: 25-11-2024 })
  25-11-2024: 25-11-2024;

  @Prop({ type: 26-11-2024 })
  26-11-2024: 26-11-2024;

  @Prop({ type: 27-11-2024 })
  27-11-2024: 27-11-2024;

  @Prop({ type: 28-11-2024 })
  28-11-2024: 28-11-2024;

  @Prop({ type: 29-11-2024 })
  29-11-2024: 29-11-2024;

  @Prop({ type: 01-12-2024 })
  01-12-2024: 01-12-2024;

  @Prop({ type: 02-12-2024 })
  02-12-2024: 02-12-2024;

  @Prop({ type: 03-12-2024 })
  03-12-2024: 03-12-2024;

  @Prop({ type: 04-12-2024 })
  04-12-2024: 04-12-2024;

  @Prop({ type: 05-12-2024 })
  05-12-2024: 05-12-2024;

  @Prop({ type: 06-12-2024 })
  06-12-2024: 06-12-2024;

  @Prop({ type: 07-12-2024 })
  07-12-2024: 07-12-2024;

  @Prop({ type: 08-12-2024 })
  08-12-2024: 08-12-2024;

  @Prop({ type: 11-12-2024 })
  11-12-2024: 11-12-2024;

  @Prop({ type: 12-12-2024 })
  12-12-2024: 12-12-2024;

  @Prop({ type: 16-12-2024 })
  16-12-2024: 16-12-2024;

  @Prop({ type: 17-12-2024 })
  17-12-2024: 17-12-2024;

  @Prop({ type: 18-12-2024 })
  18-12-2024: 18-12-2024;

  @Prop({ type: 19-12-2024 })
  19-12-2024: 19-12-2024;

  @Prop({ type: 09-12-2024 })
  09-12-2024: 09-12-2024;

  @Prop({ type: 10-12-2024 })
  10-12-2024: 10-12-2024;

  @Prop({ type: 20-12-2024 })
  20-12-2024: 20-12-2024;

  @Prop({ type: 30-12-2024 })
  30-12-2024: 30-12-2024;

  @Prop({ type: 31-12-2024 })
  31-12-2024: 31-12-2024;

  @Prop({ type: 01-01-2025 })
  01-01-2025: 01-01-2025;

  @Prop({ type: 02-01-2025 })
  02-01-2025: 02-01-2025;

  @Prop({ type: 03-01-2025 })
  03-01-2025: 03-01-2025;

  @Prop({ type: 21-12-2024 })
  21-12-2024: 21-12-2024;

  @Prop({ type: 08-01-2025 })
  08-01-2025: 08-01-2025;

  @Prop({ type: 09-01-2025 })
  09-01-2025: 09-01-2025;

  @Prop({ type: 10-01-2025 })
  10-01-2025: 10-01-2025;

  @Prop({ type: 11-01-2025 })
  11-01-2025: 11-01-2025;

  @Prop({ type: 12-01-2025 })
  12-01-2025: 12-01-2025;

  @Prop({ type: 13-01-2025 })
  13-01-2025: 13-01-2025;

  @Prop({ type: 04-01-2025 })
  04-01-2025: 04-01-2025;

  @Prop({ type: 05-01-2025 })
  05-01-2025: 05-01-2025;

  @Prop({ type: 06-01-2025 })
  06-01-2025: 06-01-2025;

  @Prop({ type: 07-01-2025 })
  07-01-2025: 07-01-2025;

  @Prop({ type: 14-01-2025 })
  14-01-2025: 14-01-2025;

  @Prop({ type: 15-01-2025 })
  15-01-2025: 15-01-2025;

  @Prop({ type: 16-01-2025 })
  16-01-2025: 16-01-2025;

  @Prop({ type: 17-01-2025 })
  17-01-2025: 17-01-2025;

  @Prop({ type: 29-12-2024 })
  29-12-2024: 29-12-2024;

  @Prop({ type: 18-01-2025 })
  18-01-2025: 18-01-2025;

  @Prop({ type: 19-01-2025 })
  19-01-2025: 19-01-2025;

  @Prop({ type: 20-01-2025 })
  20-01-2025: 20-01-2025;

  @Prop({ type: 21-01-2025 })
  21-01-2025: 21-01-2025;

  @Prop({ type: 22-01-2025 })
  22-01-2025: 22-01-2025;

  @Prop({ type: 23-01-2025 })
  23-01-2025: 23-01-2025;

  @Prop({ type: 24-01-2025 })
  24-01-2025: 24-01-2025;

  @Prop({ type: 25-01-2025 })
  25-01-2025: 25-01-2025;

  @Prop({ type: 26-01-2025 })
  26-01-2025: 26-01-2025;

  @Prop({ type: 27-01-2025 })
  27-01-2025: 27-01-2025;

  @Prop({ type: 28-01-2025 })
  28-01-2025: 28-01-2025;

  @Prop({ type: 29-01-2025 })
  29-01-2025: 29-01-2025;

  @Prop({ type: 30-01-2025 })
  30-01-2025: 30-01-2025;

  @Prop({ type: 31-01-2025 })
  31-01-2025: 31-01-2025;

  @Prop({ type: 01-02-2025 })
  01-02-2025: 01-02-2025;

  @Prop({ type: 02-02-2025 })
  02-02-2025: 02-02-2025;

  @Prop({ type: 03-02-2025 })
  03-02-2025: 03-02-2025;

  @Prop({ type: 04-02-2025 })
  04-02-2025: 04-02-2025;

  @Prop({ type: 05-02-2025 })
  05-02-2025: 05-02-2025;

  @Prop({ type: 06-02-2025 })
  06-02-2025: 06-02-2025;

  @Prop({ type: 07-02-2025 })
  07-02-2025: 07-02-2025;

  @Prop({ type: 08-02-2025 })
  08-02-2025: 08-02-2025;

  @Prop({ type: 09-02-2025 })
  09-02-2025: 09-02-2025;

  @Prop({ type: 10-02-2025 })
  10-02-2025: 10-02-2025;

  @Prop({ type: 11-02-2025 })
  11-02-2025: 11-02-2025;

  @Prop({ type: 12-02-2025 })
  12-02-2025: 12-02-2025;

  @Prop({ type: 13-02-2025 })
  13-02-2025: 13-02-2025;

  @Prop({ type: 16-02-2025 })
  16-02-2025: 16-02-2025;

  @Prop({ type: 17-02-2025 })
  17-02-2025: 17-02-2025;

  @Prop({ type: 18-02-2025 })
  18-02-2025: 18-02-2025;

  @Prop({ type: 19-02-2025 })
  19-02-2025: 19-02-2025;

  @Prop({ type: 20-02-2025 })
  20-02-2025: 20-02-2025;

  @Prop({ type: 21-02-2025 })
  21-02-2025: 21-02-2025;

  @Prop({ type: 14-02-2025 })
  14-02-2025: 14-02-2025;

  @Prop({ type: 15-02-2025 })
  15-02-2025: 15-02-2025;

  @Prop({ type: 26-02-2025 })
  26-02-2025: 26-02-2025;

  @Prop({ type: 27-02-2025 })
  27-02-2025: 27-02-2025;

  @Prop({ type: 28-02-2025 })
  28-02-2025: 28-02-2025;

  @Prop({ type: 22-02-2025 })
  22-02-2025: 22-02-2025;

  @Prop({ type: 23-02-2025 })
  23-02-2025: 23-02-2025;

  @Prop({ type: 24-02-2025 })
  24-02-2025: 24-02-2025;

  @Prop({ type: 25-02-2025 })
  25-02-2025: 25-02-2025;

  @Prop({ type: 01-03-2025 })
  01-03-2025: 01-03-2025;

  @Prop({ type: 02-03-2025 })
  02-03-2025: 02-03-2025;

  @Prop({ type: 03-03-2025 })
  03-03-2025: 03-03-2025;

  @Prop({ type: 04-03-2025 })
  04-03-2025: 04-03-2025;

  @Prop({ type: 05-03-2025 })
  05-03-2025: 05-03-2025;

  @Prop({ type: 06-03-2025 })
  06-03-2025: 06-03-2025;

  @Prop({ type: 07-03-2025 })
  07-03-2025: 07-03-2025;

  @Prop({ type: 08-03-2025 })
  08-03-2025: 08-03-2025;

  @Prop({ type: 09-03-2025 })
  09-03-2025: 09-03-2025;

  @Prop({ type: 10-03-2025 })
  10-03-2025: 10-03-2025;

  @Prop({ type: 11-03-2025 })
  11-03-2025: 11-03-2025;

  @Prop({ type: 12-03-2025 })
  12-03-2025: 12-03-2025;

  @Prop({ type: 13-03-2025 })
  13-03-2025: 13-03-2025;

  @Prop({ type: 14-03-2025 })
  14-03-2025: 14-03-2025;

  @Prop({ type: 15-03-2025 })
  15-03-2025: 15-03-2025;

  @Prop({ type: 16-03-2025 })
  16-03-2025: 16-03-2025;

  @Prop({ type: 17-03-2025 })
  17-03-2025: 17-03-2025;

  @Prop({ type: 18-03-2025 })
  18-03-2025: 18-03-2025;

  @Prop({ type: 19-03-2025 })
  19-03-2025: 19-03-2025;

  @Prop({ type: 20-03-2025 })
  20-03-2025: 20-03-2025;

  @Prop({ type: 21-03-2025 })
  21-03-2025: 21-03-2025;

  @Prop({ type: 22-03-2025 })
  22-03-2025: 22-03-2025;

  @Prop({ type: 23-03-2025 })
  23-03-2025: 23-03-2025;

  @Prop({ type: 24-03-2025 })
  24-03-2025: 24-03-2025;

  @Prop({ type: 25-03-2025 })
  25-03-2025: 25-03-2025;

  @Prop({ type: 26-03-2025 })
  26-03-2025: 26-03-2025;

  @Prop({ type: 27-03-2025 })
  27-03-2025: 27-03-2025;

  @Prop({ type: 28-03-2025 })
  28-03-2025: 28-03-2025;

  @Prop({ type: 29-03-2025 })
  29-03-2025: 29-03-2025;

  @Prop({ type: 01-04-2025 })
  01-04-2025: 01-04-2025;

  @Prop({ type: 02-04-2025 })
  02-04-2025: 02-04-2025;

  @Prop({ type: 03-04-2025 })
  03-04-2025: 03-04-2025;

  @Prop({ type: 04-04-2025 })
  04-04-2025: 04-04-2025;

  @Prop({ type: 30-03-2025 })
  30-03-2025: 30-03-2025;

  @Prop({ type: 31-03-2025 })
  31-03-2025: 31-03-2025;

  @Prop({ type: 05-04-2025 })
  05-04-2025: 05-04-2025;

  @Prop({ type: 06-04-2025 })
  06-04-2025: 06-04-2025;

  @Prop({ type: 07-04-2025 })
  07-04-2025: 07-04-2025;

  @Prop({ type: 08-04-2025 })
  08-04-2025: 08-04-2025;

  @Prop({ type: 09-04-2025 })
  09-04-2025: 09-04-2025;

  @Prop({ type: 10-04-2025 })
  10-04-2025: 10-04-2025;

  @Prop({ type: 11-04-2025 })
  11-04-2025: 11-04-2025;

  @Prop({ type: 16-04-2025 })
  16-04-2025: 16-04-2025;

  @Prop({ type: 17-04-2025 })
  17-04-2025: 17-04-2025;

  @Prop({ type: 18-04-2025 })
  18-04-2025: 18-04-2025;

  @Prop({ type: 19-04-2025 })
  19-04-2025: 19-04-2025;

  @Prop({ type: 20-04-2025 })
  20-04-2025: 20-04-2025;

  @Prop({ type: 12-04-2025 })
  12-04-2025: 12-04-2025;

  @Prop({ type: 14-05-2025 })
  14-05-2025: 14-05-2025;

  @Prop({ type: 15-05-2025 })
  15-05-2025: 15-05-2025;

  @Prop({ type: 16-07-2025 })
  16-07-2025: 16-07-2025;

  @Prop({ type: 17-07-2025 })
  17-07-2025: 17-07-2025;

  @Prop({ type: 18-07-2025 })
  18-07-2025: 18-07-2025;

  @Prop({ type: 13-04-2025 })
  13-04-2025: 13-04-2025;

  @Prop({ type: 14-04-2025 })
  14-04-2025: 14-04-2025;

  @Prop({ type: 15-04-2025 })
  15-04-2025: 15-04-2025;

  @Prop({ type: 21-04-2025 })
  21-04-2025: 21-04-2025;

  @Prop({ type: 22-04-2025 })
  22-04-2025: 22-04-2025;

  @Prop({ type: 23-04-2025 })
  23-04-2025: 23-04-2025;

  @Prop({ type: 24-04-2025 })
  24-04-2025: 24-04-2025;

  @Prop({ type: 25-04-2025 })
  25-04-2025: 25-04-2025;

  @Prop({ type: 01-05-2025 })
  01-05-2025: 01-05-2025;

  @Prop({ type: 02-05-2025 })
  02-05-2025: 02-05-2025;

  @Prop({ type: 03-05-2025 })
  03-05-2025: 03-05-2025;

  @Prop({ type: 04-05-2025 })
  04-05-2025: 04-05-2025;

  @Prop({ type: 05-05-2025 })
  05-05-2025: 05-05-2025;

  @Prop({ type: 06-05-2025 })
  06-05-2025: 06-05-2025;

  @Prop({ type: 26-04-2025 })
  26-04-2025: 26-04-2025;

  @Prop({ type: 27-04-2025 })
  27-04-2025: 27-04-2025;

  @Prop({ type: 28-04-2025 })
  28-04-2025: 28-04-2025;

  @Prop({ type: 29-04-2025 })
  29-04-2025: 29-04-2025;
}

@Schema()
export class DailySalariesForImss {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];
}

@Schema()
export class 16-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2020 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-09-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-11-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-12-2022 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-02-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2021 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-11-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-12-2023 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-03-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-04-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-05-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-06-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-07-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-08-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-09-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-10-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-11-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-12-2024 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-01-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-02-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 30-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 31-03-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 07-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 08-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 09-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 10-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 11-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 19-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 20-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 12-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 16-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 17-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 18-07-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 13-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 14-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 15-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 21-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 22-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 23-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 24-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 25-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 01-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 02-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 03-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 04-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 05-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 06-05-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 26-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 27-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 28-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class 29-04-2025 {
  @Prop()
  sd: number;

  @Prop()
  sbc: number;

  @Prop()
  sdr: number;

  @Prop()
  start: number;

  @Prop()
  end: number;

  @Prop()
  isAbsences: boolean;
}

@Schema()
export class Result {
  @Prop({ type: 16-05-2022 })
  16-05-2022: 16-05-2022;

  @Prop({ type: 17-05-2022 })
  17-05-2022: 17-05-2022;

  @Prop({ type: 18-05-2022 })
  18-05-2022: 18-05-2022;

  @Prop({ type: 19-05-2022 })
  19-05-2022: 19-05-2022;

  @Prop({ type: 20-05-2022 })
  20-05-2022: 20-05-2022;

  @Prop({ type: 21-05-2022 })
  21-05-2022: 21-05-2022;

  @Prop({ type: 22-05-2022 })
  22-05-2022: 22-05-2022;

  @Prop({ type: 23-05-2022 })
  23-05-2022: 23-05-2022;

  @Prop({ type: 24-05-2022 })
  24-05-2022: 24-05-2022;

  @Prop({ type: 25-05-2022 })
  25-05-2022: 25-05-2022;

  @Prop({ type: 26-05-2022 })
  26-05-2022: 26-05-2022;

  @Prop({ type: 27-05-2022 })
  27-05-2022: 27-05-2022;

  @Prop({ type: 28-05-2022 })
  28-05-2022: 28-05-2022;

  @Prop({ type: 29-05-2022 })
  29-05-2022: 29-05-2022;

  @Prop({ type: 30-05-2022 })
  30-05-2022: 30-05-2022;

  @Prop({ type: 31-05-2022 })
  31-05-2022: 31-05-2022;

  @Prop({ type: 01-05-2022 })
  01-05-2022: 01-05-2022;

  @Prop({ type: 02-05-2022 })
  02-05-2022: 02-05-2022;

  @Prop({ type: 03-05-2022 })
  03-05-2022: 03-05-2022;

  @Prop({ type: 04-05-2022 })
  04-05-2022: 04-05-2022;

  @Prop({ type: 05-05-2022 })
  05-05-2022: 05-05-2022;

  @Prop({ type: 06-05-2022 })
  06-05-2022: 06-05-2022;

  @Prop({ type: 07-05-2022 })
  07-05-2022: 07-05-2022;

  @Prop({ type: 08-05-2022 })
  08-05-2022: 08-05-2022;

  @Prop({ type: 09-05-2022 })
  09-05-2022: 09-05-2022;

  @Prop({ type: 10-05-2022 })
  10-05-2022: 10-05-2022;

  @Prop({ type: 01-02-2021 })
  01-02-2021: 01-02-2021;

  @Prop({ type: 02-02-2021 })
  02-02-2021: 02-02-2021;

  @Prop({ type: 03-02-2021 })
  03-02-2021: 03-02-2021;

  @Prop({ type: 04-02-2021 })
  04-02-2021: 04-02-2021;

  @Prop({ type: 05-02-2021 })
  05-02-2021: 05-02-2021;

  @Prop({ type: 06-02-2021 })
  06-02-2021: 06-02-2021;

  @Prop({ type: 07-02-2021 })
  07-02-2021: 07-02-2021;

  @Prop({ type: 08-02-2021 })
  08-02-2021: 08-02-2021;

  @Prop({ type: 08-06-2022 })
  08-06-2022: 08-06-2022;

  @Prop({ type: 09-06-2022 })
  09-06-2022: 09-06-2022;

  @Prop({ type: 10-06-2022 })
  10-06-2022: 10-06-2022;

  @Prop({ type: 11-06-2022 })
  11-06-2022: 11-06-2022;

  @Prop({ type: 01-06-2022 })
  01-06-2022: 01-06-2022;

  @Prop({ type: 02-06-2022 })
  02-06-2022: 02-06-2022;

  @Prop({ type: 03-06-2022 })
  03-06-2022: 03-06-2022;

  @Prop({ type: 04-06-2022 })
  04-06-2022: 04-06-2022;

  @Prop({ type: 05-06-2022 })
  05-06-2022: 05-06-2022;

  @Prop({ type: 06-06-2022 })
  06-06-2022: 06-06-2022;

  @Prop({ type: 07-06-2022 })
  07-06-2022: 07-06-2022;

  @Prop({ type: 12-06-2022 })
  12-06-2022: 12-06-2022;

  @Prop({ type: 13-06-2022 })
  13-06-2022: 13-06-2022;

  @Prop({ type: 14-06-2022 })
  14-06-2022: 14-06-2022;

  @Prop({ type: 15-06-2022 })
  15-06-2022: 15-06-2022;

  @Prop({ type: 16-06-2022 })
  16-06-2022: 16-06-2022;

  @Prop({ type: 17-06-2022 })
  17-06-2022: 17-06-2022;

  @Prop({ type: 18-06-2022 })
  18-06-2022: 18-06-2022;

  @Prop({ type: 19-06-2022 })
  19-06-2022: 19-06-2022;

  @Prop({ type: 20-06-2022 })
  20-06-2022: 20-06-2022;

  @Prop({ type: 21-06-2022 })
  21-06-2022: 21-06-2022;

  @Prop({ type: 22-06-2022 })
  22-06-2022: 22-06-2022;

  @Prop({ type: 23-06-2022 })
  23-06-2022: 23-06-2022;

  @Prop({ type: 24-06-2022 })
  24-06-2022: 24-06-2022;

  @Prop({ type: 25-06-2022 })
  25-06-2022: 25-06-2022;

  @Prop({ type: 26-06-2022 })
  26-06-2022: 26-06-2022;

  @Prop({ type: 27-06-2022 })
  27-06-2022: 27-06-2022;

  @Prop({ type: 28-06-2022 })
  28-06-2022: 28-06-2022;

  @Prop({ type: 29-06-2022 })
  29-06-2022: 29-06-2022;

  @Prop({ type: 30-06-2022 })
  30-06-2022: 30-06-2022;

  @Prop({ type: 16-03-2022 })
  16-03-2022: 16-03-2022;

  @Prop({ type: 17-03-2022 })
  17-03-2022: 17-03-2022;

  @Prop({ type: 18-03-2022 })
  18-03-2022: 18-03-2022;

  @Prop({ type: 19-03-2022 })
  19-03-2022: 19-03-2022;

  @Prop({ type: 20-03-2022 })
  20-03-2022: 20-03-2022;

  @Prop({ type: 21-03-2022 })
  21-03-2022: 21-03-2022;

  @Prop({ type: 22-03-2022 })
  22-03-2022: 22-03-2022;

  @Prop({ type: 23-03-2022 })
  23-03-2022: 23-03-2022;

  @Prop({ type: 01-07-2022 })
  01-07-2022: 01-07-2022;

  @Prop({ type: 02-07-2022 })
  02-07-2022: 02-07-2022;

  @Prop({ type: 03-07-2022 })
  03-07-2022: 03-07-2022;

  @Prop({ type: 04-07-2022 })
  04-07-2022: 04-07-2022;

  @Prop({ type: 05-07-2022 })
  05-07-2022: 05-07-2022;

  @Prop({ type: 06-07-2022 })
  06-07-2022: 06-07-2022;

  @Prop({ type: 07-07-2022 })
  07-07-2022: 07-07-2022;

  @Prop({ type: 08-07-2022 })
  08-07-2022: 08-07-2022;

  @Prop({ type: 09-07-2022 })
  09-07-2022: 09-07-2022;

  @Prop({ type: 10-07-2022 })
  10-07-2022: 10-07-2022;

  @Prop({ type: 11-07-2022 })
  11-07-2022: 11-07-2022;

  @Prop({ type: 12-07-2022 })
  12-07-2022: 12-07-2022;

  @Prop({ type: 13-07-2022 })
  13-07-2022: 13-07-2022;

  @Prop({ type: 14-07-2022 })
  14-07-2022: 14-07-2022;

  @Prop({ type: 15-07-2022 })
  15-07-2022: 15-07-2022;

  @Prop({ type: 16-07-2022 })
  16-07-2022: 16-07-2022;

  @Prop({ type: 17-07-2022 })
  17-07-2022: 17-07-2022;

  @Prop({ type: 18-07-2022 })
  18-07-2022: 18-07-2022;

  @Prop({ type: 19-07-2022 })
  19-07-2022: 19-07-2022;

  @Prop({ type: 20-07-2022 })
  20-07-2022: 20-07-2022;

  @Prop({ type: 21-07-2022 })
  21-07-2022: 21-07-2022;

  @Prop({ type: 22-07-2022 })
  22-07-2022: 22-07-2022;

  @Prop({ type: 23-07-2022 })
  23-07-2022: 23-07-2022;

  @Prop({ type: 24-07-2022 })
  24-07-2022: 24-07-2022;

  @Prop({ type: 25-07-2022 })
  25-07-2022: 25-07-2022;

  @Prop({ type: 26-07-2022 })
  26-07-2022: 26-07-2022;

  @Prop({ type: 27-07-2022 })
  27-07-2022: 27-07-2022;

  @Prop({ type: 28-07-2022 })
  28-07-2022: 28-07-2022;

  @Prop({ type: 29-07-2022 })
  29-07-2022: 29-07-2022;

  @Prop({ type: 30-07-2022 })
  30-07-2022: 30-07-2022;

  @Prop({ type: 01-06-2020 })
  01-06-2020: 01-06-2020;

  @Prop({ type: 02-06-2020 })
  02-06-2020: 02-06-2020;

  @Prop({ type: 03-06-2020 })
  03-06-2020: 03-06-2020;

  @Prop({ type: 04-06-2020 })
  04-06-2020: 04-06-2020;

  @Prop({ type: 05-06-2020 })
  05-06-2020: 05-06-2020;

  @Prop({ type: 06-06-2020 })
  06-06-2020: 06-06-2020;

  @Prop({ type: 07-06-2020 })
  07-06-2020: 07-06-2020;

  @Prop({ type: 08-06-2020 })
  08-06-2020: 08-06-2020;

  @Prop({ type: 09-06-2020 })
  09-06-2020: 09-06-2020;

  @Prop({ type: 10-06-2020 })
  10-06-2020: 10-06-2020;

  @Prop({ type: 11-06-2020 })
  11-06-2020: 11-06-2020;

  @Prop({ type: 12-06-2020 })
  12-06-2020: 12-06-2020;

  @Prop({ type: 13-06-2020 })
  13-06-2020: 13-06-2020;

  @Prop({ type: 14-06-2020 })
  14-06-2020: 14-06-2020;

  @Prop({ type: 15-06-2020 })
  15-06-2020: 15-06-2020;

  @Prop({ type: 31-07-2022 })
  31-07-2022: 31-07-2022;

  @Prop({ type: 01-08-2022 })
  01-08-2022: 01-08-2022;

  @Prop({ type: 02-08-2022 })
  02-08-2022: 02-08-2022;

  @Prop({ type: 03-08-2022 })
  03-08-2022: 03-08-2022;

  @Prop({ type: 04-08-2022 })
  04-08-2022: 04-08-2022;

  @Prop({ type: 05-08-2022 })
  05-08-2022: 05-08-2022;

  @Prop({ type: 06-08-2022 })
  06-08-2022: 06-08-2022;

  @Prop({ type: 07-08-2022 })
  07-08-2022: 07-08-2022;

  @Prop({ type: 08-08-2022 })
  08-08-2022: 08-08-2022;

  @Prop({ type: 09-08-2022 })
  09-08-2022: 09-08-2022;

  @Prop({ type: 10-08-2022 })
  10-08-2022: 10-08-2022;

  @Prop({ type: 11-08-2022 })
  11-08-2022: 11-08-2022;

  @Prop({ type: 12-08-2022 })
  12-08-2022: 12-08-2022;

  @Prop({ type: 13-08-2022 })
  13-08-2022: 13-08-2022;

  @Prop({ type: 14-08-2022 })
  14-08-2022: 14-08-2022;

  @Prop({ type: 15-08-2022 })
  15-08-2022: 15-08-2022;

  @Prop({ type: 16-08-2022 })
  16-08-2022: 16-08-2022;

  @Prop({ type: 17-08-2022 })
  17-08-2022: 17-08-2022;

  @Prop({ type: 18-08-2022 })
  18-08-2022: 18-08-2022;

  @Prop({ type: 19-08-2022 })
  19-08-2022: 19-08-2022;

  @Prop({ type: 20-08-2022 })
  20-08-2022: 20-08-2022;

  @Prop({ type: 21-08-2022 })
  21-08-2022: 21-08-2022;

  @Prop({ type: 22-08-2022 })
  22-08-2022: 22-08-2022;

  @Prop({ type: 23-08-2022 })
  23-08-2022: 23-08-2022;

  @Prop({ type: 24-08-2022 })
  24-08-2022: 24-08-2022;

  @Prop({ type: 25-08-2022 })
  25-08-2022: 25-08-2022;

  @Prop({ type: 26-08-2022 })
  26-08-2022: 26-08-2022;

  @Prop({ type: 31-08-2022 })
  31-08-2022: 31-08-2022;

  @Prop({ type: 01-09-2022 })
  01-09-2022: 01-09-2022;

  @Prop({ type: 02-09-2022 })
  02-09-2022: 02-09-2022;

  @Prop({ type: 03-09-2022 })
  03-09-2022: 03-09-2022;

  @Prop({ type: 04-09-2022 })
  04-09-2022: 04-09-2022;

  @Prop({ type: 05-09-2022 })
  05-09-2022: 05-09-2022;

  @Prop({ type: 27-08-2022 })
  27-08-2022: 27-08-2022;

  @Prop({ type: 28-08-2022 })
  28-08-2022: 28-08-2022;

  @Prop({ type: 29-08-2022 })
  29-08-2022: 29-08-2022;

  @Prop({ type: 30-08-2022 })
  30-08-2022: 30-08-2022;

  @Prop({ type: 06-09-2022 })
  06-09-2022: 06-09-2022;

  @Prop({ type: 07-09-2022 })
  07-09-2022: 07-09-2022;

  @Prop({ type: 08-09-2022 })
  08-09-2022: 08-09-2022;

  @Prop({ type: 09-09-2022 })
  09-09-2022: 09-09-2022;

  @Prop({ type: 16-09-2022 })
  16-09-2022: 16-09-2022;

  @Prop({ type: 17-09-2022 })
  17-09-2022: 17-09-2022;

  @Prop({ type: 18-09-2022 })
  18-09-2022: 18-09-2022;

  @Prop({ type: 19-09-2022 })
  19-09-2022: 19-09-2022;

  @Prop({ type: 14-09-2022 })
  14-09-2022: 14-09-2022;

  @Prop({ type: 28-09-2022 })
  28-09-2022: 28-09-2022;

  @Prop({ type: 29-09-2022 })
  29-09-2022: 29-09-2022;

  @Prop({ type: 30-09-2022 })
  30-09-2022: 30-09-2022;

  @Prop({ type: 20-09-2022 })
  20-09-2022: 20-09-2022;

  @Prop({ type: 21-09-2022 })
  21-09-2022: 21-09-2022;

  @Prop({ type: 15-09-2022 })
  15-09-2022: 15-09-2022;

  @Prop({ type: 01-10-2022 })
  01-10-2022: 01-10-2022;

  @Prop({ type: 02-10-2022 })
  02-10-2022: 02-10-2022;

  @Prop({ type: 03-10-2022 })
  03-10-2022: 03-10-2022;

  @Prop({ type: 04-10-2022 })
  04-10-2022: 04-10-2022;

  @Prop({ type: 05-10-2022 })
  05-10-2022: 05-10-2022;

  @Prop({ type: 06-10-2022 })
  06-10-2022: 06-10-2022;

  @Prop({ type: 07-10-2022 })
  07-10-2022: 07-10-2022;

  @Prop({ type: 08-10-2022 })
  08-10-2022: 08-10-2022;

  @Prop({ type: 16-10-2022 })
  16-10-2022: 16-10-2022;

  @Prop({ type: 17-10-2022 })
  17-10-2022: 17-10-2022;

  @Prop({ type: 19-10-2022 })
  19-10-2022: 19-10-2022;

  @Prop({ type: 20-10-2022 })
  20-10-2022: 20-10-2022;

  @Prop({ type: 21-10-2022 })
  21-10-2022: 21-10-2022;

  @Prop({ type: 22-10-2022 })
  22-10-2022: 22-10-2022;

  @Prop({ type: 23-10-2022 })
  23-10-2022: 23-10-2022;

  @Prop({ type: 24-10-2022 })
  24-10-2022: 24-10-2022;

  @Prop({ type: 25-10-2022 })
  25-10-2022: 25-10-2022;

  @Prop({ type: 18-10-2022 })
  18-10-2022: 18-10-2022;

  @Prop({ type: 26-10-2022 })
  26-10-2022: 26-10-2022;

  @Prop({ type: 27-10-2022 })
  27-10-2022: 27-10-2022;

  @Prop({ type: 28-10-2022 })
  28-10-2022: 28-10-2022;

  @Prop({ type: 01-11-2022 })
  01-11-2022: 01-11-2022;

  @Prop({ type: 02-11-2022 })
  02-11-2022: 02-11-2022;

  @Prop({ type: 03-11-2022 })
  03-11-2022: 03-11-2022;

  @Prop({ type: 04-11-2022 })
  04-11-2022: 04-11-2022;

  @Prop({ type: 05-11-2022 })
  05-11-2022: 05-11-2022;

  @Prop({ type: 06-11-2022 })
  06-11-2022: 06-11-2022;

  @Prop({ type: 07-11-2022 })
  07-11-2022: 07-11-2022;

  @Prop({ type: 08-11-2022 })
  08-11-2022: 08-11-2022;

  @Prop({ type: 09-11-2022 })
  09-11-2022: 09-11-2022;

  @Prop({ type: 10-11-2022 })
  10-11-2022: 10-11-2022;

  @Prop({ type: 11-11-2022 })
  11-11-2022: 11-11-2022;

  @Prop({ type: 12-11-2022 })
  12-11-2022: 12-11-2022;

  @Prop({ type: 13-11-2022 })
  13-11-2022: 13-11-2022;

  @Prop({ type: 14-11-2022 })
  14-11-2022: 14-11-2022;

  @Prop({ type: 15-11-2022 })
  15-11-2022: 15-11-2022;

  @Prop({ type: 31-10-2022 })
  31-10-2022: 31-10-2022;

  @Prop({ type: 16-11-2022 })
  16-11-2022: 16-11-2022;

  @Prop({ type: 17-11-2022 })
  17-11-2022: 17-11-2022;

  @Prop({ type: 18-11-2022 })
  18-11-2022: 18-11-2022;

  @Prop({ type: 19-11-2022 })
  19-11-2022: 19-11-2022;

  @Prop({ type: 20-11-2022 })
  20-11-2022: 20-11-2022;

  @Prop({ type: 21-11-2022 })
  21-11-2022: 21-11-2022;

  @Prop({ type: 22-11-2022 })
  22-11-2022: 22-11-2022;

  @Prop({ type: 23-11-2022 })
  23-11-2022: 23-11-2022;

  @Prop({ type: 24-11-2022 })
  24-11-2022: 24-11-2022;

  @Prop({ type: 25-11-2022 })
  25-11-2022: 25-11-2022;

  @Prop({ type: 30-11-2022 })
  30-11-2022: 30-11-2022;

  @Prop({ type: 01-12-2022 })
  01-12-2022: 01-12-2022;

  @Prop({ type: 02-12-2022 })
  02-12-2022: 02-12-2022;

  @Prop({ type: 03-12-2022 })
  03-12-2022: 03-12-2022;

  @Prop({ type: 04-12-2022 })
  04-12-2022: 04-12-2022;

  @Prop({ type: 05-12-2022 })
  05-12-2022: 05-12-2022;

  @Prop({ type: 06-12-2022 })
  06-12-2022: 06-12-2022;

  @Prop({ type: 07-12-2022 })
  07-12-2022: 07-12-2022;

  @Prop({ type: 08-12-2022 })
  08-12-2022: 08-12-2022;

  @Prop({ type: 09-12-2022 })
  09-12-2022: 09-12-2022;

  @Prop({ type: 16-12-2022 })
  16-12-2022: 16-12-2022;

  @Prop({ type: 17-12-2022 })
  17-12-2022: 17-12-2022;

  @Prop({ type: 18-12-2022 })
  18-12-2022: 18-12-2022;

  @Prop({ type: 19-12-2022 })
  19-12-2022: 19-12-2022;

  @Prop({ type: 20-12-2022 })
  20-12-2022: 20-12-2022;

  @Prop({ type: 21-12-2022 })
  21-12-2022: 21-12-2022;

  @Prop({ type: 22-12-2022 })
  22-12-2022: 22-12-2022;

  @Prop({ type: 23-12-2022 })
  23-12-2022: 23-12-2022;

  @Prop({ type: 24-12-2022 })
  24-12-2022: 24-12-2022;

  @Prop({ type: 25-12-2022 })
  25-12-2022: 25-12-2022;

  @Prop({ type: 26-12-2022 })
  26-12-2022: 26-12-2022;

  @Prop({ type: 27-12-2022 })
  27-12-2022: 27-12-2022;

  @Prop({ type: 28-12-2022 })
  28-12-2022: 28-12-2022;

  @Prop({ type: 29-12-2022 })
  29-12-2022: 29-12-2022;

  @Prop({ type: 30-12-2022 })
  30-12-2022: 30-12-2022;

  @Prop({ type: 31-12-2022 })
  31-12-2022: 31-12-2022;

  @Prop({ type: 01-01-2023 })
  01-01-2023: 01-01-2023;

  @Prop({ type: 02-01-2023 })
  02-01-2023: 02-01-2023;

  @Prop({ type: 04-01-2023 })
  04-01-2023: 04-01-2023;

  @Prop({ type: 05-01-2023 })
  05-01-2023: 05-01-2023;

  @Prop({ type: 06-01-2023 })
  06-01-2023: 06-01-2023;

  @Prop({ type: 03-01-2023 })
  03-01-2023: 03-01-2023;

  @Prop({ type: 07-01-2023 })
  07-01-2023: 07-01-2023;

  @Prop({ type: 08-01-2023 })
  08-01-2023: 08-01-2023;

  @Prop({ type: 09-01-2023 })
  09-01-2023: 09-01-2023;

  @Prop({ type: 10-01-2023 })
  10-01-2023: 10-01-2023;

  @Prop({ type: 11-01-2023 })
  11-01-2023: 11-01-2023;

  @Prop({ type: 12-01-2023 })
  12-01-2023: 12-01-2023;

  @Prop({ type: 13-01-2023 })
  13-01-2023: 13-01-2023;

  @Prop({ type: 14-01-2023 })
  14-01-2023: 14-01-2023;

  @Prop({ type: 15-01-2023 })
  15-01-2023: 15-01-2023;

  @Prop({ type: 14-12-2022 })
  14-12-2022: 14-12-2022;

  @Prop({ type: 15-12-2022 })
  15-12-2022: 15-12-2022;

  @Prop({ type: 16-01-2023 })
  16-01-2023: 16-01-2023;

  @Prop({ type: 17-01-2023 })
  17-01-2023: 17-01-2023;

  @Prop({ type: 18-01-2023 })
  18-01-2023: 18-01-2023;

  @Prop({ type: 19-01-2023 })
  19-01-2023: 19-01-2023;

  @Prop({ type: 20-01-2023 })
  20-01-2023: 20-01-2023;

  @Prop({ type: 21-01-2023 })
  21-01-2023: 21-01-2023;

  @Prop({ type: 22-01-2023 })
  22-01-2023: 22-01-2023;

  @Prop({ type: 01-02-2023 })
  01-02-2023: 01-02-2023;

  @Prop({ type: 02-02-2023 })
  02-02-2023: 02-02-2023;

  @Prop({ type: 03-02-2023 })
  03-02-2023: 03-02-2023;

  @Prop({ type: 04-02-2023 })
  04-02-2023: 04-02-2023;

  @Prop({ type: 05-02-2023 })
  05-02-2023: 05-02-2023;

  @Prop({ type: 06-02-2023 })
  06-02-2023: 06-02-2023;

  @Prop({ type: 07-02-2023 })
  07-02-2023: 07-02-2023;

  @Prop({ type: 08-02-2023 })
  08-02-2023: 08-02-2023;

  @Prop({ type: 23-01-2023 })
  23-01-2023: 23-01-2023;

  @Prop({ type: 24-01-2023 })
  24-01-2023: 24-01-2023;

  @Prop({ type: 25-01-2023 })
  25-01-2023: 25-01-2023;

  @Prop({ type: 26-01-2023 })
  26-01-2023: 26-01-2023;

  @Prop({ type: 27-01-2023 })
  27-01-2023: 27-01-2023;

  @Prop({ type: 28-01-2023 })
  28-01-2023: 28-01-2023;

  @Prop({ type: 29-01-2023 })
  29-01-2023: 29-01-2023;

  @Prop({ type: 30-01-2023 })
  30-01-2023: 30-01-2023;

  @Prop({ type: 31-01-2023 })
  31-01-2023: 31-01-2023;

  @Prop({ type: 10-02-2023 })
  10-02-2023: 10-02-2023;

  @Prop({ type: 11-02-2023 })
  11-02-2023: 11-02-2023;

  @Prop({ type: 09-02-2023 })
  09-02-2023: 09-02-2023;

  @Prop({ type: 15-02-2023 })
  15-02-2023: 15-02-2023;

  @Prop({ type: 16-02-2023 })
  16-02-2023: 16-02-2023;

  @Prop({ type: 17-02-2023 })
  17-02-2023: 17-02-2023;

  @Prop({ type: 26-02-2023 })
  26-02-2023: 26-02-2023;

  @Prop({ type: 27-02-2023 })
  27-02-2023: 27-02-2023;

  @Prop({ type: 28-02-2023 })
  28-02-2023: 28-02-2023;

  @Prop({ type: 08-03-2023 })
  08-03-2023: 08-03-2023;

  @Prop({ type: 09-03-2023 })
  09-03-2023: 09-03-2023;

  @Prop({ type: 10-03-2023 })
  10-03-2023: 10-03-2023;

  @Prop({ type: 01-03-2023 })
  01-03-2023: 01-03-2023;

  @Prop({ type: 02-03-2023 })
  02-03-2023: 02-03-2023;

  @Prop({ type: 03-03-2023 })
  03-03-2023: 03-03-2023;

  @Prop({ type: 04-03-2023 })
  04-03-2023: 04-03-2023;

  @Prop({ type: 05-03-2023 })
  05-03-2023: 05-03-2023;

  @Prop({ type: 06-03-2023 })
  06-03-2023: 06-03-2023;

  @Prop({ type: 07-03-2023 })
  07-03-2023: 07-03-2023;

  @Prop({ type: 16-03-2023 })
  16-03-2023: 16-03-2023;

  @Prop({ type: 17-03-2023 })
  17-03-2023: 17-03-2023;

  @Prop({ type: 18-03-2023 })
  18-03-2023: 18-03-2023;

  @Prop({ type: 19-03-2023 })
  19-03-2023: 19-03-2023;

  @Prop({ type: 20-03-2023 })
  20-03-2023: 20-03-2023;

  @Prop({ type: 21-03-2023 })
  21-03-2023: 21-03-2023;

  @Prop({ type: 22-03-2023 })
  22-03-2023: 22-03-2023;

  @Prop({ type: 23-03-2023 })
  23-03-2023: 23-03-2023;

  @Prop({ type: 24-03-2023 })
  24-03-2023: 24-03-2023;

  @Prop({ type: 25-03-2023 })
  25-03-2023: 25-03-2023;

  @Prop({ type: 26-03-2023 })
  26-03-2023: 26-03-2023;

  @Prop({ type: 27-03-2023 })
  27-03-2023: 27-03-2023;

  @Prop({ type: 28-03-2023 })
  28-03-2023: 28-03-2023;

  @Prop({ type: 01-04-2023 })
  01-04-2023: 01-04-2023;

  @Prop({ type: 02-04-2023 })
  02-04-2023: 02-04-2023;

  @Prop({ type: 03-04-2023 })
  03-04-2023: 03-04-2023;

  @Prop({ type: 04-04-2023 })
  04-04-2023: 04-04-2023;

  @Prop({ type: 05-04-2023 })
  05-04-2023: 05-04-2023;

  @Prop({ type: 06-04-2023 })
  06-04-2023: 06-04-2023;

  @Prop({ type: 07-04-2023 })
  07-04-2023: 07-04-2023;

  @Prop({ type: 08-04-2023 })
  08-04-2023: 08-04-2023;

  @Prop({ type: 09-04-2023 })
  09-04-2023: 09-04-2023;

  @Prop({ type: 10-04-2023 })
  10-04-2023: 10-04-2023;

  @Prop({ type: 16-04-2023 })
  16-04-2023: 16-04-2023;

  @Prop({ type: 17-04-2023 })
  17-04-2023: 17-04-2023;

  @Prop({ type: 18-04-2023 })
  18-04-2023: 18-04-2023;

  @Prop({ type: 19-04-2023 })
  19-04-2023: 19-04-2023;

  @Prop({ type: 20-04-2023 })
  20-04-2023: 20-04-2023;

  @Prop({ type: 21-04-2023 })
  21-04-2023: 21-04-2023;

  @Prop({ type: 22-04-2023 })
  22-04-2023: 22-04-2023;

  @Prop({ type: 23-04-2023 })
  23-04-2023: 23-04-2023;

  @Prop({ type: 24-04-2023 })
  24-04-2023: 24-04-2023;

  @Prop({ type: 25-04-2023 })
  25-04-2023: 25-04-2023;

  @Prop({ type: 26-04-2023 })
  26-04-2023: 26-04-2023;

  @Prop({ type: 01-05-2023 })
  01-05-2023: 01-05-2023;

  @Prop({ type: 02-05-2023 })
  02-05-2023: 02-05-2023;

  @Prop({ type: 03-05-2023 })
  03-05-2023: 03-05-2023;

  @Prop({ type: 04-05-2023 })
  04-05-2023: 04-05-2023;

  @Prop({ type: 05-05-2023 })
  05-05-2023: 05-05-2023;

  @Prop({ type: 06-05-2023 })
  06-05-2023: 06-05-2023;

  @Prop({ type: 07-05-2023 })
  07-05-2023: 07-05-2023;

  @Prop({ type: 08-05-2023 })
  08-05-2023: 08-05-2023;

  @Prop({ type: 09-05-2023 })
  09-05-2023: 09-05-2023;

  @Prop({ type: 10-05-2023 })
  10-05-2023: 10-05-2023;

  @Prop({ type: 11-05-2023 })
  11-05-2023: 11-05-2023;

  @Prop({ type: 12-05-2023 })
  12-05-2023: 12-05-2023;

  @Prop({ type: 16-05-2023 })
  16-05-2023: 16-05-2023;

  @Prop({ type: 17-05-2023 })
  17-05-2023: 17-05-2023;

  @Prop({ type: 18-05-2023 })
  18-05-2023: 18-05-2023;

  @Prop({ type: 19-05-2023 })
  19-05-2023: 19-05-2023;

  @Prop({ type: 20-05-2023 })
  20-05-2023: 20-05-2023;

  @Prop({ type: 21-05-2023 })
  21-05-2023: 21-05-2023;

  @Prop({ type: 22-05-2023 })
  22-05-2023: 22-05-2023;

  @Prop({ type: 23-05-2023 })
  23-05-2023: 23-05-2023;

  @Prop({ type: 24-05-2023 })
  24-05-2023: 24-05-2023;

  @Prop({ type: 25-05-2023 })
  25-05-2023: 25-05-2023;

  @Prop({ type: 01-06-2023 })
  01-06-2023: 01-06-2023;

  @Prop({ type: 02-06-2023 })
  02-06-2023: 02-06-2023;

  @Prop({ type: 03-06-2023 })
  03-06-2023: 03-06-2023;

  @Prop({ type: 04-06-2023 })
  04-06-2023: 04-06-2023;

  @Prop({ type: 05-06-2023 })
  05-06-2023: 05-06-2023;

  @Prop({ type: 06-06-2023 })
  06-06-2023: 06-06-2023;

  @Prop({ type: 07-06-2023 })
  07-06-2023: 07-06-2023;

  @Prop({ type: 08-06-2023 })
  08-06-2023: 08-06-2023;

  @Prop({ type: 09-06-2023 })
  09-06-2023: 09-06-2023;

  @Prop({ type: 10-06-2023 })
  10-06-2023: 10-06-2023;

  @Prop({ type: 11-06-2023 })
  11-06-2023: 11-06-2023;

  @Prop({ type: 12-06-2023 })
  12-06-2023: 12-06-2023;

  @Prop({ type: 16-06-2023 })
  16-06-2023: 16-06-2023;

  @Prop({ type: 14-06-2023 })
  14-06-2023: 14-06-2023;

  @Prop({ type: 15-06-2023 })
  15-06-2023: 15-06-2023;

  @Prop({ type: 17-06-2023 })
  17-06-2023: 17-06-2023;

  @Prop({ type: 18-06-2023 })
  18-06-2023: 18-06-2023;

  @Prop({ type: 19-06-2023 })
  19-06-2023: 19-06-2023;

  @Prop({ type: 20-06-2023 })
  20-06-2023: 20-06-2023;

  @Prop({ type: 21-06-2023 })
  21-06-2023: 21-06-2023;

  @Prop({ type: 22-06-2023 })
  22-06-2023: 22-06-2023;

  @Prop({ type: 01-07-2023 })
  01-07-2023: 01-07-2023;

  @Prop({ type: 28-06-2023 })
  28-06-2023: 28-06-2023;

  @Prop({ type: 29-06-2023 })
  29-06-2023: 29-06-2023;

  @Prop({ type: 30-06-2023 })
  30-06-2023: 30-06-2023;

  @Prop({ type: 02-07-2023 })
  02-07-2023: 02-07-2023;

  @Prop({ type: 03-07-2023 })
  03-07-2023: 03-07-2023;

  @Prop({ type: 04-07-2023 })
  04-07-2023: 04-07-2023;

  @Prop({ type: 05-07-2023 })
  05-07-2023: 05-07-2023;

  @Prop({ type: 06-07-2023 })
  06-07-2023: 06-07-2023;

  @Prop({ type: 07-07-2023 })
  07-07-2023: 07-07-2023;

  @Prop({ type: 08-07-2023 })
  08-07-2023: 08-07-2023;

  @Prop({ type: 09-07-2023 })
  09-07-2023: 09-07-2023;

  @Prop({ type: 10-07-2023 })
  10-07-2023: 10-07-2023;

  @Prop({ type: 11-07-2023 })
  11-07-2023: 11-07-2023;

  @Prop({ type: 12-07-2023 })
  12-07-2023: 12-07-2023;

  @Prop({ type: 13-07-2023 })
  13-07-2023: 13-07-2023;

  @Prop({ type: 14-07-2023 })
  14-07-2023: 14-07-2023;

  @Prop({ type: 16-07-2023 })
  16-07-2023: 16-07-2023;

  @Prop({ type: 17-07-2023 })
  17-07-2023: 17-07-2023;

  @Prop({ type: 18-07-2023 })
  18-07-2023: 18-07-2023;

  @Prop({ type: 19-07-2023 })
  19-07-2023: 19-07-2023;

  @Prop({ type: 20-07-2023 })
  20-07-2023: 20-07-2023;

  @Prop({ type: 21-07-2023 })
  21-07-2023: 21-07-2023;

  @Prop({ type: 22-07-2023 })
  22-07-2023: 22-07-2023;

  @Prop({ type: 23-07-2023 })
  23-07-2023: 23-07-2023;

  @Prop({ type: 24-07-2023 })
  24-07-2023: 24-07-2023;

  @Prop({ type: 25-07-2023 })
  25-07-2023: 25-07-2023;

  @Prop({ type: 26-07-2023 })
  26-07-2023: 26-07-2023;

  @Prop({ type: 27-07-2023 })
  27-07-2023: 27-07-2023;

  @Prop({ type: 28-07-2023 })
  28-07-2023: 28-07-2023;

  @Prop({ type: 29-07-2023 })
  29-07-2023: 29-07-2023;

  @Prop({ type: 30-07-2023 })
  30-07-2023: 30-07-2023;

  @Prop({ type: 31-07-2023 })
  31-07-2023: 31-07-2023;

  @Prop({ type: 01-08-2023 })
  01-08-2023: 01-08-2023;

  @Prop({ type: 15-07-2023 })
  15-07-2023: 15-07-2023;

  @Prop({ type: 02-08-2023 })
  02-08-2023: 02-08-2023;

  @Prop({ type: 03-08-2023 })
  03-08-2023: 03-08-2023;

  @Prop({ type: 04-08-2023 })
  04-08-2023: 04-08-2023;

  @Prop({ type: 05-08-2023 })
  05-08-2023: 05-08-2023;

  @Prop({ type: 06-08-2023 })
  06-08-2023: 06-08-2023;

  @Prop({ type: 07-08-2023 })
  07-08-2023: 07-08-2023;

  @Prop({ type: 08-08-2023 })
  08-08-2023: 08-08-2023;

  @Prop({ type: 16-08-2023 })
  16-08-2023: 16-08-2023;

  @Prop({ type: 17-08-2023 })
  17-08-2023: 17-08-2023;

  @Prop({ type: 18-08-2023 })
  18-08-2023: 18-08-2023;

  @Prop({ type: 19-08-2023 })
  19-08-2023: 19-08-2023;

  @Prop({ type: 20-08-2023 })
  20-08-2023: 20-08-2023;

  @Prop({ type: 21-08-2023 })
  21-08-2023: 21-08-2023;

  @Prop({ type: 22-08-2023 })
  22-08-2023: 22-08-2023;

  @Prop({ type: 23-08-2023 })
  23-08-2023: 23-08-2023;

  @Prop({ type: 24-08-2023 })
  24-08-2023: 24-08-2023;

  @Prop({ type: 25-08-2023 })
  25-08-2023: 25-08-2023;

  @Prop({ type: 26-08-2023 })
  26-08-2023: 26-08-2023;

  @Prop({ type: 27-08-2023 })
  27-08-2023: 27-08-2023;

  @Prop({ type: 28-08-2023 })
  28-08-2023: 28-08-2023;

  @Prop({ type: 29-08-2023 })
  29-08-2023: 29-08-2023;

  @Prop({ type: 01-09-2023 })
  01-09-2023: 01-09-2023;

  @Prop({ type: 02-09-2023 })
  02-09-2023: 02-09-2023;

  @Prop({ type: 03-09-2023 })
  03-09-2023: 03-09-2023;

  @Prop({ type: 04-09-2023 })
  04-09-2023: 04-09-2023;

  @Prop({ type: 05-09-2023 })
  05-09-2023: 05-09-2023;

  @Prop({ type: 06-09-2023 })
  06-09-2023: 06-09-2023;

  @Prop({ type: 07-09-2023 })
  07-09-2023: 07-09-2023;

  @Prop({ type: 08-09-2023 })
  08-09-2023: 08-09-2023;

  @Prop({ type: 09-09-2023 })
  09-09-2023: 09-09-2023;

  @Prop({ type: 10-09-2023 })
  10-09-2023: 10-09-2023;

  @Prop({ type: 11-09-2023 })
  11-09-2023: 11-09-2023;

  @Prop({ type: 12-09-2023 })
  12-09-2023: 12-09-2023;

  @Prop({ type: 13-09-2023 })
  13-09-2023: 13-09-2023;

  @Prop({ type: 14-09-2023 })
  14-09-2023: 14-09-2023;

  @Prop({ type: 15-09-2023 })
  15-09-2023: 15-09-2023;

  @Prop({ type: 16-09-2023 })
  16-09-2023: 16-09-2023;

  @Prop({ type: 17-09-2023 })
  17-09-2023: 17-09-2023;

  @Prop({ type: 18-09-2023 })
  18-09-2023: 18-09-2023;

  @Prop({ type: 30-08-2023 })
  30-08-2023: 30-08-2023;

  @Prop({ type: 31-08-2023 })
  31-08-2023: 31-08-2023;

  @Prop({ type: 19-09-2023 })
  19-09-2023: 19-09-2023;

  @Prop({ type: 20-09-2023 })
  20-09-2023: 20-09-2023;

  @Prop({ type: 21-09-2023 })
  21-09-2023: 21-09-2023;

  @Prop({ type: 22-09-2023 })
  22-09-2023: 22-09-2023;

  @Prop({ type: 23-09-2023 })
  23-09-2023: 23-09-2023;

  @Prop({ type: 24-09-2023 })
  24-09-2023: 24-09-2023;

  @Prop({ type: 25-09-2023 })
  25-09-2023: 25-09-2023;

  @Prop({ type: 26-09-2023 })
  26-09-2023: 26-09-2023;

  @Prop({ type: 27-09-2023 })
  27-09-2023: 27-09-2023;

  @Prop({ type: 28-09-2023 })
  28-09-2023: 28-09-2023;

  @Prop({ type: 29-09-2023 })
  29-09-2023: 29-09-2023;

  @Prop({ type: 30-09-2023 })
  30-09-2023: 30-09-2023;

  @Prop({ type: 01-10-2023 })
  01-10-2023: 01-10-2023;

  @Prop({ type: 02-10-2023 })
  02-10-2023: 02-10-2023;

  @Prop({ type: 03-10-2023 })
  03-10-2023: 03-10-2023;

  @Prop({ type: 04-10-2023 })
  04-10-2023: 04-10-2023;

  @Prop({ type: 05-10-2023 })
  05-10-2023: 05-10-2023;

  @Prop({ type: 06-10-2023 })
  06-10-2023: 06-10-2023;

  @Prop({ type: 07-10-2023 })
  07-10-2023: 07-10-2023;

  @Prop({ type: 08-10-2023 })
  08-10-2023: 08-10-2023;

  @Prop({ type: 09-10-2023 })
  09-10-2023: 09-10-2023;

  @Prop({ type: 10-10-2023 })
  10-10-2023: 10-10-2023;

  @Prop({ type: 11-10-2023 })
  11-10-2023: 11-10-2023;

  @Prop({ type: 12-10-2023 })
  12-10-2023: 12-10-2023;

  @Prop({ type: 13-10-2023 })
  13-10-2023: 13-10-2023;

  @Prop({ type: 16-04-2021 })
  16-04-2021: 16-04-2021;

  @Prop({ type: 17-04-2021 })
  17-04-2021: 17-04-2021;

  @Prop({ type: 18-04-2021 })
  18-04-2021: 18-04-2021;

  @Prop({ type: 19-04-2021 })
  19-04-2021: 19-04-2021;

  @Prop({ type: 20-04-2021 })
  20-04-2021: 20-04-2021;

  @Prop({ type: 16-10-2023 })
  16-10-2023: 16-10-2023;

  @Prop({ type: 21-10-2023 })
  21-10-2023: 21-10-2023;

  @Prop({ type: 22-10-2023 })
  22-10-2023: 22-10-2023;

  @Prop({ type: 23-10-2023 })
  23-10-2023: 23-10-2023;

  @Prop({ type: 17-10-2023 })
  17-10-2023: 17-10-2023;

  @Prop({ type: 18-10-2023 })
  18-10-2023: 18-10-2023;

  @Prop({ type: 19-10-2023 })
  19-10-2023: 19-10-2023;

  @Prop({ type: 20-10-2023 })
  20-10-2023: 20-10-2023;

  @Prop({ type: 16-12-2023 })
  16-12-2023: 16-12-2023;

  @Prop({ type: 17-12-2023 })
  17-12-2023: 17-12-2023;

  @Prop({ type: 18-12-2023 })
  18-12-2023: 18-12-2023;

  @Prop({ type: 19-12-2023 })
  19-12-2023: 19-12-2023;

  @Prop({ type: 20-12-2023 })
  20-12-2023: 20-12-2023;

  @Prop({ type: 21-12-2023 })
  21-12-2023: 21-12-2023;

  @Prop({ type: 22-12-2023 })
  22-12-2023: 22-12-2023;

  @Prop({ type: 23-12-2023 })
  23-12-2023: 23-12-2023;

  @Prop({ type: 24-12-2023 })
  24-12-2023: 24-12-2023;

  @Prop({ type: 25-12-2023 })
  25-12-2023: 25-12-2023;

  @Prop({ type: 26-12-2023 })
  26-12-2023: 26-12-2023;

  @Prop({ type: 27-12-2023 })
  27-12-2023: 27-12-2023;

  @Prop({ type: 28-12-2023 })
  28-12-2023: 28-12-2023;

  @Prop({ type: 29-12-2023 })
  29-12-2023: 29-12-2023;

  @Prop({ type: 30-12-2023 })
  30-12-2023: 30-12-2023;

  @Prop({ type: 31-12-2023 })
  31-12-2023: 31-12-2023;

  @Prop({ type: 25-10-2023 })
  25-10-2023: 25-10-2023;

  @Prop({ type: 26-10-2023 })
  26-10-2023: 26-10-2023;

  @Prop({ type: 27-10-2023 })
  27-10-2023: 27-10-2023;

  @Prop({ type: 28-10-2023 })
  28-10-2023: 28-10-2023;

  @Prop({ type: 29-10-2023 })
  29-10-2023: 29-10-2023;

  @Prop({ type: 30-10-2023 })
  30-10-2023: 30-10-2023;

  @Prop({ type: 01-11-2023 })
  01-11-2023: 01-11-2023;

  @Prop({ type: 02-11-2023 })
  02-11-2023: 02-11-2023;

  @Prop({ type: 03-11-2023 })
  03-11-2023: 03-11-2023;

  @Prop({ type: 24-10-2023 })
  24-10-2023: 24-10-2023;

  @Prop({ type: 31-10-2023 })
  31-10-2023: 31-10-2023;

  @Prop({ type: 04-11-2023 })
  04-11-2023: 04-11-2023;

  @Prop({ type: 05-11-2023 })
  05-11-2023: 05-11-2023;

  @Prop({ type: 06-11-2023 })
  06-11-2023: 06-11-2023;

  @Prop({ type: 01-12-2023 })
  01-12-2023: 01-12-2023;

  @Prop({ type: 02-12-2023 })
  02-12-2023: 02-12-2023;

  @Prop({ type: 07-11-2023 })
  07-11-2023: 07-11-2023;

  @Prop({ type: 08-11-2023 })
  08-11-2023: 08-11-2023;

  @Prop({ type: 09-11-2023 })
  09-11-2023: 09-11-2023;

  @Prop({ type: 10-11-2023 })
  10-11-2023: 10-11-2023;

  @Prop({ type: 11-11-2023 })
  11-11-2023: 11-11-2023;

  @Prop({ type: 12-11-2023 })
  12-11-2023: 12-11-2023;

  @Prop({ type: 13-11-2023 })
  13-11-2023: 13-11-2023;

  @Prop({ type: 14-11-2023 })
  14-11-2023: 14-11-2023;

  @Prop({ type: 15-11-2023 })
  15-11-2023: 15-11-2023;

  @Prop({ type: 16-11-2023 })
  16-11-2023: 16-11-2023;

  @Prop({ type: 22-11-2023 })
  22-11-2023: 22-11-2023;

  @Prop({ type: 23-11-2023 })
  23-11-2023: 23-11-2023;

  @Prop({ type: 24-11-2023 })
  24-11-2023: 24-11-2023;

  @Prop({ type: 25-11-2023 })
  25-11-2023: 25-11-2023;

  @Prop({ type: 26-11-2023 })
  26-11-2023: 26-11-2023;

  @Prop({ type: 27-11-2023 })
  27-11-2023: 27-11-2023;

  @Prop({ type: 28-11-2023 })
  28-11-2023: 28-11-2023;

  @Prop({ type: 17-11-2023 })
  17-11-2023: 17-11-2023;

  @Prop({ type: 18-11-2023 })
  18-11-2023: 18-11-2023;

  @Prop({ type: 19-11-2023 })
  19-11-2023: 19-11-2023;

  @Prop({ type: 20-11-2023 })
  20-11-2023: 20-11-2023;

  @Prop({ type: 21-11-2023 })
  21-11-2023: 21-11-2023;

  @Prop({ type: 06-12-2023 })
  06-12-2023: 06-12-2023;

  @Prop({ type: 07-12-2023 })
  07-12-2023: 07-12-2023;

  @Prop({ type: 29-11-2023 })
  29-11-2023: 29-11-2023;

  @Prop({ type: 30-11-2023 })
  30-11-2023: 30-11-2023;

  @Prop({ type: 03-12-2023 })
  03-12-2023: 03-12-2023;

  @Prop({ type: 04-12-2023 })
  04-12-2023: 04-12-2023;

  @Prop({ type: 08-12-2023 })
  08-12-2023: 08-12-2023;

  @Prop({ type: 05-12-2023 })
  05-12-2023: 05-12-2023;

  @Prop({ type: 09-12-2023 })
  09-12-2023: 09-12-2023;

  @Prop({ type: 10-12-2023 })
  10-12-2023: 10-12-2023;

  @Prop({ type: 13-12-2023 })
  13-12-2023: 13-12-2023;

  @Prop({ type: 14-12-2023 })
  14-12-2023: 14-12-2023;

  @Prop({ type: 15-12-2023 })
  15-12-2023: 15-12-2023;

  @Prop({ type: 01-01-2024 })
  01-01-2024: 01-01-2024;

  @Prop({ type: 02-01-2024 })
  02-01-2024: 02-01-2024;

  @Prop({ type: 03-01-2024 })
  03-01-2024: 03-01-2024;

  @Prop({ type: 04-01-2024 })
  04-01-2024: 04-01-2024;

  @Prop({ type: 05-01-2024 })
  05-01-2024: 05-01-2024;

  @Prop({ type: 24-01-2024 })
  24-01-2024: 24-01-2024;

  @Prop({ type: 06-01-2024 })
  06-01-2024: 06-01-2024;

  @Prop({ type: 07-01-2024 })
  07-01-2024: 07-01-2024;

  @Prop({ type: 08-01-2024 })
  08-01-2024: 08-01-2024;

  @Prop({ type: 09-01-2024 })
  09-01-2024: 09-01-2024;

  @Prop({ type: 10-01-2024 })
  10-01-2024: 10-01-2024;

  @Prop({ type: 11-01-2024 })
  11-01-2024: 11-01-2024;

  @Prop({ type: 12-01-2024 })
  12-01-2024: 12-01-2024;

  @Prop({ type: 16-01-2024 })
  16-01-2024: 16-01-2024;

  @Prop({ type: 17-01-2024 })
  17-01-2024: 17-01-2024;

  @Prop({ type: 18-01-2024 })
  18-01-2024: 18-01-2024;

  @Prop({ type: 19-01-2024 })
  19-01-2024: 19-01-2024;

  @Prop({ type: 20-01-2024 })
  20-01-2024: 20-01-2024;

  @Prop({ type: 21-01-2024 })
  21-01-2024: 21-01-2024;

  @Prop({ type: 22-01-2024 })
  22-01-2024: 22-01-2024;

  @Prop({ type: 23-01-2024 })
  23-01-2024: 23-01-2024;

  @Prop({ type: 25-01-2024 })
  25-01-2024: 25-01-2024;

  @Prop({ type: 26-01-2024 })
  26-01-2024: 26-01-2024;

  @Prop({ type: 27-01-2024 })
  27-01-2024: 27-01-2024;

  @Prop({ type: 28-01-2024 })
  28-01-2024: 28-01-2024;

  @Prop({ type: 29-01-2024 })
  29-01-2024: 29-01-2024;

  @Prop({ type: 30-01-2024 })
  30-01-2024: 30-01-2024;

  @Prop({ type: 31-01-2024 })
  31-01-2024: 31-01-2024;

  @Prop({ type: 13-01-2024 })
  13-01-2024: 13-01-2024;

  @Prop({ type: 14-01-2024 })
  14-01-2024: 14-01-2024;

  @Prop({ type: 15-01-2024 })
  15-01-2024: 15-01-2024;

  @Prop({ type: 01-02-2024 })
  01-02-2024: 01-02-2024;

  @Prop({ type: 02-02-2024 })
  02-02-2024: 02-02-2024;

  @Prop({ type: 03-02-2024 })
  03-02-2024: 03-02-2024;

  @Prop({ type: 04-02-2024 })
  04-02-2024: 04-02-2024;

  @Prop({ type: 05-02-2024 })
  05-02-2024: 05-02-2024;

  @Prop({ type: 06-02-2024 })
  06-02-2024: 06-02-2024;

  @Prop({ type: 07-02-2024 })
  07-02-2024: 07-02-2024;

  @Prop({ type: 08-02-2024 })
  08-02-2024: 08-02-2024;

  @Prop({ type: 09-02-2024 })
  09-02-2024: 09-02-2024;

  @Prop({ type: 10-02-2024 })
  10-02-2024: 10-02-2024;

  @Prop({ type: 11-02-2024 })
  11-02-2024: 11-02-2024;

  @Prop({ type: 12-02-2024 })
  12-02-2024: 12-02-2024;

  @Prop({ type: 13-02-2024 })
  13-02-2024: 13-02-2024;

  @Prop({ type: 14-02-2024 })
  14-02-2024: 14-02-2024;

  @Prop({ type: 15-02-2024 })
  15-02-2024: 15-02-2024;

  @Prop({ type: 16-02-2024 })
  16-02-2024: 16-02-2024;

  @Prop({ type: 17-02-2024 })
  17-02-2024: 17-02-2024;

  @Prop({ type: 18-02-2024 })
  18-02-2024: 18-02-2024;

  @Prop({ type: 19-02-2024 })
  19-02-2024: 19-02-2024;

  @Prop({ type: 20-02-2024 })
  20-02-2024: 20-02-2024;

  @Prop({ type: 21-02-2024 })
  21-02-2024: 21-02-2024;

  @Prop({ type: 22-02-2024 })
  22-02-2024: 22-02-2024;

  @Prop({ type: 23-02-2024 })
  23-02-2024: 23-02-2024;

  @Prop({ type: 24-02-2024 })
  24-02-2024: 24-02-2024;

  @Prop({ type: 25-02-2024 })
  25-02-2024: 25-02-2024;

  @Prop({ type: 26-02-2024 })
  26-02-2024: 26-02-2024;

  @Prop({ type: 01-03-2024 })
  01-03-2024: 01-03-2024;

  @Prop({ type: 02-03-2024 })
  02-03-2024: 02-03-2024;

  @Prop({ type: 03-03-2024 })
  03-03-2024: 03-03-2024;

  @Prop({ type: 04-03-2024 })
  04-03-2024: 04-03-2024;

  @Prop({ type: 05-03-2024 })
  05-03-2024: 05-03-2024;

  @Prop({ type: 06-03-2024 })
  06-03-2024: 06-03-2024;

  @Prop({ type: 07-03-2024 })
  07-03-2024: 07-03-2024;

  @Prop({ type: 08-03-2024 })
  08-03-2024: 08-03-2024;

  @Prop({ type: 09-03-2024 })
  09-03-2024: 09-03-2024;

  @Prop({ type: 10-03-2024 })
  10-03-2024: 10-03-2024;

  @Prop({ type: 11-03-2024 })
  11-03-2024: 11-03-2024;

  @Prop({ type: 12-03-2024 })
  12-03-2024: 12-03-2024;

  @Prop({ type: 13-03-2024 })
  13-03-2024: 13-03-2024;

  @Prop({ type: 14-03-2024 })
  14-03-2024: 14-03-2024;

  @Prop({ type: 15-03-2024 })
  15-03-2024: 15-03-2024;

  @Prop({ type: 16-03-2024 })
  16-03-2024: 16-03-2024;

  @Prop({ type: 17-03-2024 })
  17-03-2024: 17-03-2024;

  @Prop({ type: 18-03-2024 })
  18-03-2024: 18-03-2024;

  @Prop({ type: 19-03-2024 })
  19-03-2024: 19-03-2024;

  @Prop({ type: 01-04-2024 })
  01-04-2024: 01-04-2024;

  @Prop({ type: 02-04-2024 })
  02-04-2024: 02-04-2024;

  @Prop({ type: 03-04-2024 })
  03-04-2024: 03-04-2024;

  @Prop({ type: 04-04-2024 })
  04-04-2024: 04-04-2024;

  @Prop({ type: 05-04-2024 })
  05-04-2024: 05-04-2024;

  @Prop({ type: 06-04-2024 })
  06-04-2024: 06-04-2024;

  @Prop({ type: 07-04-2024 })
  07-04-2024: 07-04-2024;

  @Prop({ type: 27-03-2024 })
  27-03-2024: 27-03-2024;

  @Prop({ type: 08-04-2024 })
  08-04-2024: 08-04-2024;

  @Prop({ type: 09-04-2024 })
  09-04-2024: 09-04-2024;

  @Prop({ type: 10-04-2024 })
  10-04-2024: 10-04-2024;

  @Prop({ type: 11-04-2024 })
  11-04-2024: 11-04-2024;

  @Prop({ type: 12-04-2024 })
  12-04-2024: 12-04-2024;

  @Prop({ type: 16-04-2024 })
  16-04-2024: 16-04-2024;

  @Prop({ type: 17-04-2024 })
  17-04-2024: 17-04-2024;

  @Prop({ type: 18-04-2024 })
  18-04-2024: 18-04-2024;

  @Prop({ type: 19-04-2024 })
  19-04-2024: 19-04-2024;

  @Prop({ type: 20-04-2024 })
  20-04-2024: 20-04-2024;

  @Prop({ type: 21-04-2024 })
  21-04-2024: 21-04-2024;

  @Prop({ type: 22-04-2024 })
  22-04-2024: 22-04-2024;

  @Prop({ type: 23-04-2024 })
  23-04-2024: 23-04-2024;

  @Prop({ type: 13-04-2024 })
  13-04-2024: 13-04-2024;

  @Prop({ type: 14-04-2024 })
  14-04-2024: 14-04-2024;

  @Prop({ type: 15-04-2024 })
  15-04-2024: 15-04-2024;

  @Prop({ type: 20-03-2024 })
  20-03-2024: 20-03-2024;

  @Prop({ type: 21-03-2024 })
  21-03-2024: 21-03-2024;

  @Prop({ type: 22-03-2024 })
  22-03-2024: 22-03-2024;

  @Prop({ type: 23-03-2024 })
  23-03-2024: 23-03-2024;

  @Prop({ type: 24-03-2024 })
  24-03-2024: 24-03-2024;

  @Prop({ type: 25-03-2024 })
  25-03-2024: 25-03-2024;

  @Prop({ type: 26-03-2024 })
  26-03-2024: 26-03-2024;

  @Prop({ type: 28-03-2024 })
  28-03-2024: 28-03-2024;

  @Prop({ type: 29-03-2024 })
  29-03-2024: 29-03-2024;

  @Prop({ type: 30-03-2024 })
  30-03-2024: 30-03-2024;

  @Prop({ type: 31-03-2024 })
  31-03-2024: 31-03-2024;

  @Prop({ type: 24-04-2024 })
  24-04-2024: 24-04-2024;

  @Prop({ type: 25-04-2024 })
  25-04-2024: 25-04-2024;

  @Prop({ type: 26-04-2024 })
  26-04-2024: 26-04-2024;

  @Prop({ type: 27-04-2024 })
  27-04-2024: 27-04-2024;

  @Prop({ type: 28-04-2024 })
  28-04-2024: 28-04-2024;

  @Prop({ type: 29-04-2024 })
  29-04-2024: 29-04-2024;

  @Prop({ type: 30-04-2024 })
  30-04-2024: 30-04-2024;

  @Prop({ type: 01-05-2024 })
  01-05-2024: 01-05-2024;

  @Prop({ type: 02-05-2024 })
  02-05-2024: 02-05-2024;

  @Prop({ type: 03-05-2024 })
  03-05-2024: 03-05-2024;

  @Prop({ type: 04-05-2024 })
  04-05-2024: 04-05-2024;

  @Prop({ type: 05-05-2024 })
  05-05-2024: 05-05-2024;

  @Prop({ type: 06-05-2024 })
  06-05-2024: 06-05-2024;

  @Prop({ type: 07-05-2024 })
  07-05-2024: 07-05-2024;

  @Prop({ type: 08-05-2024 })
  08-05-2024: 08-05-2024;

  @Prop({ type: 09-05-2024 })
  09-05-2024: 09-05-2024;

  @Prop({ type: 10-05-2024 })
  10-05-2024: 10-05-2024;

  @Prop({ type: 11-05-2024 })
  11-05-2024: 11-05-2024;

  @Prop({ type: 12-05-2024 })
  12-05-2024: 12-05-2024;

  @Prop({ type: 13-05-2024 })
  13-05-2024: 13-05-2024;

  @Prop({ type: 14-05-2024 })
  14-05-2024: 14-05-2024;

  @Prop({ type: 15-05-2024 })
  15-05-2024: 15-05-2024;

  @Prop({ type: 16-05-2024 })
  16-05-2024: 16-05-2024;

  @Prop({ type: 17-05-2024 })
  17-05-2024: 17-05-2024;

  @Prop({ type: 18-05-2024 })
  18-05-2024: 18-05-2024;

  @Prop({ type: 19-05-2024 })
  19-05-2024: 19-05-2024;

  @Prop({ type: 20-05-2024 })
  20-05-2024: 20-05-2024;

  @Prop({ type: 21-05-2024 })
  21-05-2024: 21-05-2024;

  @Prop({ type: 22-05-2024 })
  22-05-2024: 22-05-2024;

  @Prop({ type: 23-05-2024 })
  23-05-2024: 23-05-2024;

  @Prop({ type: 24-05-2024 })
  24-05-2024: 24-05-2024;

  @Prop({ type: 25-05-2024 })
  25-05-2024: 25-05-2024;

  @Prop({ type: 26-05-2024 })
  26-05-2024: 26-05-2024;

  @Prop({ type: 27-05-2024 })
  27-05-2024: 27-05-2024;

  @Prop({ type: 28-05-2024 })
  28-05-2024: 28-05-2024;

  @Prop({ type: 29-05-2024 })
  29-05-2024: 29-05-2024;

  @Prop({ type: 30-05-2024 })
  30-05-2024: 30-05-2024;

  @Prop({ type: 31-05-2024 })
  31-05-2024: 31-05-2024;

  @Prop({ type: 01-06-2024 })
  01-06-2024: 01-06-2024;

  @Prop({ type: 02-06-2024 })
  02-06-2024: 02-06-2024;

  @Prop({ type: 03-06-2024 })
  03-06-2024: 03-06-2024;

  @Prop({ type: 04-06-2024 })
  04-06-2024: 04-06-2024;

  @Prop({ type: 05-06-2024 })
  05-06-2024: 05-06-2024;

  @Prop({ type: 06-06-2024 })
  06-06-2024: 06-06-2024;

  @Prop({ type: 07-06-2024 })
  07-06-2024: 07-06-2024;

  @Prop({ type: 16-06-2024 })
  16-06-2024: 16-06-2024;

  @Prop({ type: 17-06-2024 })
  17-06-2024: 17-06-2024;

  @Prop({ type: 18-06-2024 })
  18-06-2024: 18-06-2024;

  @Prop({ type: 19-06-2024 })
  19-06-2024: 19-06-2024;

  @Prop({ type: 20-06-2024 })
  20-06-2024: 20-06-2024;

  @Prop({ type: 08-06-2024 })
  08-06-2024: 08-06-2024;

  @Prop({ type: 09-06-2024 })
  09-06-2024: 09-06-2024;

  @Prop({ type: 10-06-2024 })
  10-06-2024: 10-06-2024;

  @Prop({ type: 12-06-2024 })
  12-06-2024: 12-06-2024;

  @Prop({ type: 13-06-2024 })
  13-06-2024: 13-06-2024;

  @Prop({ type: 21-06-2024 })
  21-06-2024: 21-06-2024;

  @Prop({ type: 22-06-2024 })
  22-06-2024: 22-06-2024;

  @Prop({ type: 23-06-2024 })
  23-06-2024: 23-06-2024;

  @Prop({ type: 24-06-2024 })
  24-06-2024: 24-06-2024;

  @Prop({ type: 25-06-2024 })
  25-06-2024: 25-06-2024;

  @Prop({ type: 11-06-2024 })
  11-06-2024: 11-06-2024;

  @Prop({ type: 14-06-2024 })
  14-06-2024: 14-06-2024;

  @Prop({ type: 15-06-2024 })
  15-06-2024: 15-06-2024;

  @Prop({ type: 26-06-2024 })
  26-06-2024: 26-06-2024;

  @Prop({ type: 01-07-2024 })
  01-07-2024: 01-07-2024;

  @Prop({ type: 27-06-2024 })
  27-06-2024: 27-06-2024;

  @Prop({ type: 28-06-2024 })
  28-06-2024: 28-06-2024;

  @Prop({ type: 29-06-2024 })
  29-06-2024: 29-06-2024;

  @Prop({ type: 30-06-2024 })
  30-06-2024: 30-06-2024;

  @Prop({ type: 02-07-2024 })
  02-07-2024: 02-07-2024;

  @Prop({ type: 03-07-2024 })
  03-07-2024: 03-07-2024;

  @Prop({ type: 04-07-2024 })
  04-07-2024: 04-07-2024;

  @Prop({ type: 05-07-2024 })
  05-07-2024: 05-07-2024;

  @Prop({ type: 06-07-2024 })
  06-07-2024: 06-07-2024;

  @Prop({ type: 07-07-2024 })
  07-07-2024: 07-07-2024;

  @Prop({ type: 08-07-2024 })
  08-07-2024: 08-07-2024;

  @Prop({ type: 09-07-2024 })
  09-07-2024: 09-07-2024;

  @Prop({ type: 10-07-2024 })
  10-07-2024: 10-07-2024;

  @Prop({ type: 11-07-2024 })
  11-07-2024: 11-07-2024;

  @Prop({ type: 12-07-2024 })
  12-07-2024: 12-07-2024;

  @Prop({ type: 16-07-2024 })
  16-07-2024: 16-07-2024;

  @Prop({ type: 17-07-2024 })
  17-07-2024: 17-07-2024;

  @Prop({ type: 18-07-2024 })
  18-07-2024: 18-07-2024;

  @Prop({ type: 19-07-2024 })
  19-07-2024: 19-07-2024;

  @Prop({ type: 13-07-2024 })
  13-07-2024: 13-07-2024;

  @Prop({ type: 14-07-2024 })
  14-07-2024: 14-07-2024;

  @Prop({ type: 15-07-2024 })
  15-07-2024: 15-07-2024;

  @Prop({ type: 20-07-2024 })
  20-07-2024: 20-07-2024;

  @Prop({ type: 21-07-2024 })
  21-07-2024: 21-07-2024;

  @Prop({ type: 22-07-2024 })
  22-07-2024: 22-07-2024;

  @Prop({ type: 23-07-2024 })
  23-07-2024: 23-07-2024;

  @Prop({ type: 24-07-2024 })
  24-07-2024: 24-07-2024;

  @Prop({ type: 25-07-2024 })
  25-07-2024: 25-07-2024;

  @Prop({ type: 26-07-2024 })
  26-07-2024: 26-07-2024;

  @Prop({ type: 27-07-2024 })
  27-07-2024: 27-07-2024;

  @Prop({ type: 28-07-2024 })
  28-07-2024: 28-07-2024;

  @Prop({ type: 29-07-2024 })
  29-07-2024: 29-07-2024;

  @Prop({ type: 30-07-2024 })
  30-07-2024: 30-07-2024;

  @Prop({ type: 31-07-2024 })
  31-07-2024: 31-07-2024;

  @Prop({ type: 01-08-2024 })
  01-08-2024: 01-08-2024;

  @Prop({ type: 02-08-2024 })
  02-08-2024: 02-08-2024;

  @Prop({ type: 03-08-2024 })
  03-08-2024: 03-08-2024;

  @Prop({ type: 04-08-2024 })
  04-08-2024: 04-08-2024;

  @Prop({ type: 05-08-2024 })
  05-08-2024: 05-08-2024;

  @Prop({ type: 06-08-2024 })
  06-08-2024: 06-08-2024;

  @Prop({ type: 07-08-2024 })
  07-08-2024: 07-08-2024;

  @Prop({ type: 08-08-2024 })
  08-08-2024: 08-08-2024;

  @Prop({ type: 09-08-2024 })
  09-08-2024: 09-08-2024;

  @Prop({ type: 10-08-2024 })
  10-08-2024: 10-08-2024;

  @Prop({ type: 16-08-2024 })
  16-08-2024: 16-08-2024;

  @Prop({ type: 17-08-2024 })
  17-08-2024: 17-08-2024;

  @Prop({ type: 18-08-2024 })
  18-08-2024: 18-08-2024;

  @Prop({ type: 19-08-2024 })
  19-08-2024: 19-08-2024;

  @Prop({ type: 20-08-2024 })
  20-08-2024: 20-08-2024;

  @Prop({ type: 21-08-2024 })
  21-08-2024: 21-08-2024;

  @Prop({ type: 22-08-2024 })
  22-08-2024: 22-08-2024;

  @Prop({ type: 23-08-2024 })
  23-08-2024: 23-08-2024;

  @Prop({ type: 11-08-2024 })
  11-08-2024: 11-08-2024;

  @Prop({ type: 12-08-2024 })
  12-08-2024: 12-08-2024;

  @Prop({ type: 13-08-2024 })
  13-08-2024: 13-08-2024;

  @Prop({ type: 14-08-2024 })
  14-08-2024: 14-08-2024;

  @Prop({ type: 15-08-2024 })
  15-08-2024: 15-08-2024;

  @Prop({ type: 24-08-2024 })
  24-08-2024: 24-08-2024;

  @Prop({ type: 25-08-2024 })
  25-08-2024: 25-08-2024;

  @Prop({ type: 26-08-2024 })
  26-08-2024: 26-08-2024;

  @Prop({ type: 27-08-2024 })
  27-08-2024: 27-08-2024;

  @Prop({ type: 28-08-2024 })
  28-08-2024: 28-08-2024;

  @Prop({ type: 29-08-2024 })
  29-08-2024: 29-08-2024;

  @Prop({ type: 01-09-2024 })
  01-09-2024: 01-09-2024;

  @Prop({ type: 02-09-2024 })
  02-09-2024: 02-09-2024;

  @Prop({ type: 30-08-2024 })
  30-08-2024: 30-08-2024;

  @Prop({ type: 31-08-2024 })
  31-08-2024: 31-08-2024;

  @Prop({ type: 03-09-2024 })
  03-09-2024: 03-09-2024;

  @Prop({ type: 04-09-2024 })
  04-09-2024: 04-09-2024;

  @Prop({ type: 05-09-2024 })
  05-09-2024: 05-09-2024;

  @Prop({ type: 06-09-2024 })
  06-09-2024: 06-09-2024;

  @Prop({ type: 07-09-2024 })
  07-09-2024: 07-09-2024;

  @Prop({ type: 08-09-2024 })
  08-09-2024: 08-09-2024;

  @Prop({ type: 09-09-2024 })
  09-09-2024: 09-09-2024;

  @Prop({ type: 11-09-2024 })
  11-09-2024: 11-09-2024;

  @Prop({ type: 25-09-2024 })
  25-09-2024: 25-09-2024;

  @Prop({ type: 26-09-2024 })
  26-09-2024: 26-09-2024;

  @Prop({ type: 27-09-2024 })
  27-09-2024: 27-09-2024;

  @Prop({ type: 28-09-2024 })
  28-09-2024: 28-09-2024;

  @Prop({ type: 29-09-2024 })
  29-09-2024: 29-09-2024;

  @Prop({ type: 30-09-2024 })
  30-09-2024: 30-09-2024;

  @Prop({ type: 16-09-2024 })
  16-09-2024: 16-09-2024;

  @Prop({ type: 17-09-2024 })
  17-09-2024: 17-09-2024;

  @Prop({ type: 18-09-2024 })
  18-09-2024: 18-09-2024;

  @Prop({ type: 19-09-2024 })
  19-09-2024: 19-09-2024;

  @Prop({ type: 20-09-2024 })
  20-09-2024: 20-09-2024;

  @Prop({ type: 21-09-2024 })
  21-09-2024: 21-09-2024;

  @Prop({ type: 22-09-2024 })
  22-09-2024: 22-09-2024;

  @Prop({ type: 23-09-2024 })
  23-09-2024: 23-09-2024;

  @Prop({ type: 24-09-2024 })
  24-09-2024: 24-09-2024;

  @Prop({ type: 01-10-2024 })
  01-10-2024: 01-10-2024;

  @Prop({ type: 02-10-2024 })
  02-10-2024: 02-10-2024;

  @Prop({ type: 03-10-2024 })
  03-10-2024: 03-10-2024;

  @Prop({ type: 04-10-2024 })
  04-10-2024: 04-10-2024;

  @Prop({ type: 05-10-2024 })
  05-10-2024: 05-10-2024;

  @Prop({ type: 06-10-2024 })
  06-10-2024: 06-10-2024;

  @Prop({ type: 07-10-2024 })
  07-10-2024: 07-10-2024;

  @Prop({ type: 08-10-2024 })
  08-10-2024: 08-10-2024;

  @Prop({ type: 16-10-2024 })
  16-10-2024: 16-10-2024;

  @Prop({ type: 17-10-2024 })
  17-10-2024: 17-10-2024;

  @Prop({ type: 18-10-2024 })
  18-10-2024: 18-10-2024;

  @Prop({ type: 09-10-2024 })
  09-10-2024: 09-10-2024;

  @Prop({ type: 10-10-2024 })
  10-10-2024: 10-10-2024;

  @Prop({ type: 11-10-2024 })
  11-10-2024: 11-10-2024;

  @Prop({ type: 12-10-2024 })
  12-10-2024: 12-10-2024;

  @Prop({ type: 13-10-2024 })
  13-10-2024: 13-10-2024;

  @Prop({ type: 14-10-2024 })
  14-10-2024: 14-10-2024;

  @Prop({ type: 19-10-2024 })
  19-10-2024: 19-10-2024;

  @Prop({ type: 20-10-2024 })
  20-10-2024: 20-10-2024;

  @Prop({ type: 21-10-2024 })
  21-10-2024: 21-10-2024;

  @Prop({ type: 01-11-2024 })
  01-11-2024: 01-11-2024;

  @Prop({ type: 02-11-2024 })
  02-11-2024: 02-11-2024;

  @Prop({ type: 03-11-2024 })
  03-11-2024: 03-11-2024;

  @Prop({ type: 04-11-2024 })
  04-11-2024: 04-11-2024;

  @Prop({ type: 05-11-2024 })
  05-11-2024: 05-11-2024;

  @Prop({ type: 22-10-2024 })
  22-10-2024: 22-10-2024;

  @Prop({ type: 23-10-2024 })
  23-10-2024: 23-10-2024;

  @Prop({ type: 24-10-2024 })
  24-10-2024: 24-10-2024;

  @Prop({ type: 15-10-2024 })
  15-10-2024: 15-10-2024;

  @Prop({ type: 28-10-2024 })
  28-10-2024: 28-10-2024;

  @Prop({ type: 29-10-2024 })
  29-10-2024: 29-10-2024;

  @Prop({ type: 30-10-2024 })
  30-10-2024: 30-10-2024;

  @Prop({ type: 31-10-2024 })
  31-10-2024: 31-10-2024;

  @Prop({ type: 06-11-2024 })
  06-11-2024: 06-11-2024;

  @Prop({ type: 07-11-2024 })
  07-11-2024: 07-11-2024;

  @Prop({ type: 08-11-2024 })
  08-11-2024: 08-11-2024;

  @Prop({ type: 09-11-2024 })
  09-11-2024: 09-11-2024;

  @Prop({ type: 10-11-2024 })
  10-11-2024: 10-11-2024;

  @Prop({ type: 11-11-2024 })
  11-11-2024: 11-11-2024;

  @Prop({ type: 12-11-2024 })
  12-11-2024: 12-11-2024;

  @Prop({ type: 13-11-2024 })
  13-11-2024: 13-11-2024;

  @Prop({ type: 14-11-2024 })
  14-11-2024: 14-11-2024;

  @Prop({ type: 15-11-2024 })
  15-11-2024: 15-11-2024;

  @Prop({ type: 16-11-2024 })
  16-11-2024: 16-11-2024;

  @Prop({ type: 17-11-2024 })
  17-11-2024: 17-11-2024;

  @Prop({ type: 18-11-2024 })
  18-11-2024: 18-11-2024;

  @Prop({ type: 19-11-2024 })
  19-11-2024: 19-11-2024;

  @Prop({ type: 20-11-2024 })
  20-11-2024: 20-11-2024;

  @Prop({ type: 21-11-2024 })
  21-11-2024: 21-11-2024;

  @Prop({ type: 22-11-2024 })
  22-11-2024: 22-11-2024;

  @Prop({ type: 23-11-2024 })
  23-11-2024: 23-11-2024;

  @Prop({ type: 24-11-2024 })
  24-11-2024: 24-11-2024;

  @Prop({ type: 25-11-2024 })
  25-11-2024: 25-11-2024;

  @Prop({ type: 26-11-2024 })
  26-11-2024: 26-11-2024;

  @Prop({ type: 27-11-2024 })
  27-11-2024: 27-11-2024;

  @Prop({ type: 28-11-2024 })
  28-11-2024: 28-11-2024;

  @Prop({ type: 29-11-2024 })
  29-11-2024: 29-11-2024;

  @Prop({ type: 01-12-2024 })
  01-12-2024: 01-12-2024;

  @Prop({ type: 02-12-2024 })
  02-12-2024: 02-12-2024;

  @Prop({ type: 03-12-2024 })
  03-12-2024: 03-12-2024;

  @Prop({ type: 04-12-2024 })
  04-12-2024: 04-12-2024;

  @Prop({ type: 05-12-2024 })
  05-12-2024: 05-12-2024;

  @Prop({ type: 06-12-2024 })
  06-12-2024: 06-12-2024;

  @Prop({ type: 07-12-2024 })
  07-12-2024: 07-12-2024;

  @Prop({ type: 08-12-2024 })
  08-12-2024: 08-12-2024;

  @Prop({ type: 11-12-2024 })
  11-12-2024: 11-12-2024;

  @Prop({ type: 12-12-2024 })
  12-12-2024: 12-12-2024;

  @Prop({ type: 16-12-2024 })
  16-12-2024: 16-12-2024;

  @Prop({ type: 17-12-2024 })
  17-12-2024: 17-12-2024;

  @Prop({ type: 18-12-2024 })
  18-12-2024: 18-12-2024;

  @Prop({ type: 19-12-2024 })
  19-12-2024: 19-12-2024;

  @Prop({ type: 09-12-2024 })
  09-12-2024: 09-12-2024;

  @Prop({ type: 10-12-2024 })
  10-12-2024: 10-12-2024;

  @Prop({ type: 20-12-2024 })
  20-12-2024: 20-12-2024;

  @Prop({ type: 30-12-2024 })
  30-12-2024: 30-12-2024;

  @Prop({ type: 31-12-2024 })
  31-12-2024: 31-12-2024;

  @Prop({ type: 01-01-2025 })
  01-01-2025: 01-01-2025;

  @Prop({ type: 02-01-2025 })
  02-01-2025: 02-01-2025;

  @Prop({ type: 03-01-2025 })
  03-01-2025: 03-01-2025;

  @Prop({ type: 21-12-2024 })
  21-12-2024: 21-12-2024;

  @Prop({ type: 08-01-2025 })
  08-01-2025: 08-01-2025;

  @Prop({ type: 09-01-2025 })
  09-01-2025: 09-01-2025;

  @Prop({ type: 10-01-2025 })
  10-01-2025: 10-01-2025;

  @Prop({ type: 11-01-2025 })
  11-01-2025: 11-01-2025;

  @Prop({ type: 12-01-2025 })
  12-01-2025: 12-01-2025;

  @Prop({ type: 13-01-2025 })
  13-01-2025: 13-01-2025;

  @Prop({ type: 04-01-2025 })
  04-01-2025: 04-01-2025;

  @Prop({ type: 05-01-2025 })
  05-01-2025: 05-01-2025;

  @Prop({ type: 06-01-2025 })
  06-01-2025: 06-01-2025;

  @Prop({ type: 07-01-2025 })
  07-01-2025: 07-01-2025;

  @Prop({ type: 14-01-2025 })
  14-01-2025: 14-01-2025;

  @Prop({ type: 15-01-2025 })
  15-01-2025: 15-01-2025;

  @Prop({ type: 16-01-2025 })
  16-01-2025: 16-01-2025;

  @Prop({ type: 17-01-2025 })
  17-01-2025: 17-01-2025;

  @Prop({ type: 29-12-2024 })
  29-12-2024: 29-12-2024;

  @Prop({ type: 18-01-2025 })
  18-01-2025: 18-01-2025;

  @Prop({ type: 19-01-2025 })
  19-01-2025: 19-01-2025;

  @Prop({ type: 20-01-2025 })
  20-01-2025: 20-01-2025;

  @Prop({ type: 21-01-2025 })
  21-01-2025: 21-01-2025;

  @Prop({ type: 22-01-2025 })
  22-01-2025: 22-01-2025;

  @Prop({ type: 23-01-2025 })
  23-01-2025: 23-01-2025;

  @Prop({ type: 24-01-2025 })
  24-01-2025: 24-01-2025;

  @Prop({ type: 25-01-2025 })
  25-01-2025: 25-01-2025;

  @Prop({ type: 26-01-2025 })
  26-01-2025: 26-01-2025;

  @Prop({ type: 27-01-2025 })
  27-01-2025: 27-01-2025;

  @Prop({ type: 28-01-2025 })
  28-01-2025: 28-01-2025;

  @Prop({ type: 29-01-2025 })
  29-01-2025: 29-01-2025;

  @Prop({ type: 30-01-2025 })
  30-01-2025: 30-01-2025;

  @Prop({ type: 31-01-2025 })
  31-01-2025: 31-01-2025;

  @Prop({ type: 01-02-2025 })
  01-02-2025: 01-02-2025;

  @Prop({ type: 02-02-2025 })
  02-02-2025: 02-02-2025;

  @Prop({ type: 03-02-2025 })
  03-02-2025: 03-02-2025;

  @Prop({ type: 04-02-2025 })
  04-02-2025: 04-02-2025;

  @Prop({ type: 05-02-2025 })
  05-02-2025: 05-02-2025;

  @Prop({ type: 06-02-2025 })
  06-02-2025: 06-02-2025;

  @Prop({ type: 07-02-2025 })
  07-02-2025: 07-02-2025;

  @Prop({ type: 08-02-2025 })
  08-02-2025: 08-02-2025;

  @Prop({ type: 09-02-2025 })
  09-02-2025: 09-02-2025;

  @Prop({ type: 10-02-2025 })
  10-02-2025: 10-02-2025;

  @Prop({ type: 11-02-2025 })
  11-02-2025: 11-02-2025;

  @Prop({ type: 12-02-2025 })
  12-02-2025: 12-02-2025;

  @Prop({ type: 13-02-2025 })
  13-02-2025: 13-02-2025;

  @Prop({ type: 16-02-2025 })
  16-02-2025: 16-02-2025;

  @Prop({ type: 17-02-2025 })
  17-02-2025: 17-02-2025;

  @Prop({ type: 18-02-2025 })
  18-02-2025: 18-02-2025;

  @Prop({ type: 19-02-2025 })
  19-02-2025: 19-02-2025;

  @Prop({ type: 20-02-2025 })
  20-02-2025: 20-02-2025;

  @Prop({ type: 21-02-2025 })
  21-02-2025: 21-02-2025;

  @Prop({ type: 14-02-2025 })
  14-02-2025: 14-02-2025;

  @Prop({ type: 15-02-2025 })
  15-02-2025: 15-02-2025;

  @Prop({ type: 26-02-2025 })
  26-02-2025: 26-02-2025;

  @Prop({ type: 27-02-2025 })
  27-02-2025: 27-02-2025;

  @Prop({ type: 28-02-2025 })
  28-02-2025: 28-02-2025;

  @Prop({ type: 22-02-2025 })
  22-02-2025: 22-02-2025;

  @Prop({ type: 23-02-2025 })
  23-02-2025: 23-02-2025;

  @Prop({ type: 24-02-2025 })
  24-02-2025: 24-02-2025;

  @Prop({ type: 25-02-2025 })
  25-02-2025: 25-02-2025;

  @Prop({ type: 01-03-2025 })
  01-03-2025: 01-03-2025;

  @Prop({ type: 02-03-2025 })
  02-03-2025: 02-03-2025;

  @Prop({ type: 03-03-2025 })
  03-03-2025: 03-03-2025;

  @Prop({ type: 04-03-2025 })
  04-03-2025: 04-03-2025;

  @Prop({ type: 05-03-2025 })
  05-03-2025: 05-03-2025;

  @Prop({ type: 06-03-2025 })
  06-03-2025: 06-03-2025;

  @Prop({ type: 07-03-2025 })
  07-03-2025: 07-03-2025;

  @Prop({ type: 08-03-2025 })
  08-03-2025: 08-03-2025;

  @Prop({ type: 09-03-2025 })
  09-03-2025: 09-03-2025;

  @Prop({ type: 10-03-2025 })
  10-03-2025: 10-03-2025;

  @Prop({ type: 11-03-2025 })
  11-03-2025: 11-03-2025;

  @Prop({ type: 12-03-2025 })
  12-03-2025: 12-03-2025;

  @Prop({ type: 13-03-2025 })
  13-03-2025: 13-03-2025;

  @Prop({ type: 14-03-2025 })
  14-03-2025: 14-03-2025;

  @Prop({ type: 15-03-2025 })
  15-03-2025: 15-03-2025;

  @Prop({ type: 16-03-2025 })
  16-03-2025: 16-03-2025;

  @Prop({ type: 17-03-2025 })
  17-03-2025: 17-03-2025;

  @Prop({ type: 18-03-2025 })
  18-03-2025: 18-03-2025;

  @Prop({ type: 19-03-2025 })
  19-03-2025: 19-03-2025;

  @Prop({ type: 20-03-2025 })
  20-03-2025: 20-03-2025;

  @Prop({ type: 21-03-2025 })
  21-03-2025: 21-03-2025;

  @Prop({ type: 22-03-2025 })
  22-03-2025: 22-03-2025;

  @Prop({ type: 23-03-2025 })
  23-03-2025: 23-03-2025;

  @Prop({ type: 24-03-2025 })
  24-03-2025: 24-03-2025;

  @Prop({ type: 25-03-2025 })
  25-03-2025: 25-03-2025;

  @Prop({ type: 26-03-2025 })
  26-03-2025: 26-03-2025;

  @Prop({ type: 27-03-2025 })
  27-03-2025: 27-03-2025;

  @Prop({ type: 28-03-2025 })
  28-03-2025: 28-03-2025;

  @Prop({ type: 29-03-2025 })
  29-03-2025: 29-03-2025;

  @Prop({ type: 01-04-2025 })
  01-04-2025: 01-04-2025;

  @Prop({ type: 02-04-2025 })
  02-04-2025: 02-04-2025;

  @Prop({ type: 03-04-2025 })
  03-04-2025: 03-04-2025;

  @Prop({ type: 04-04-2025 })
  04-04-2025: 04-04-2025;

  @Prop({ type: 30-03-2025 })
  30-03-2025: 30-03-2025;

  @Prop({ type: 31-03-2025 })
  31-03-2025: 31-03-2025;

  @Prop({ type: 05-04-2025 })
  05-04-2025: 05-04-2025;

  @Prop({ type: 06-04-2025 })
  06-04-2025: 06-04-2025;

  @Prop({ type: 07-04-2025 })
  07-04-2025: 07-04-2025;

  @Prop({ type: 08-04-2025 })
  08-04-2025: 08-04-2025;

  @Prop({ type: 09-04-2025 })
  09-04-2025: 09-04-2025;

  @Prop({ type: 10-04-2025 })
  10-04-2025: 10-04-2025;

  @Prop({ type: 11-04-2025 })
  11-04-2025: 11-04-2025;

  @Prop({ type: 16-04-2025 })
  16-04-2025: 16-04-2025;

  @Prop({ type: 17-04-2025 })
  17-04-2025: 17-04-2025;

  @Prop({ type: 18-04-2025 })
  18-04-2025: 18-04-2025;

  @Prop({ type: 19-04-2025 })
  19-04-2025: 19-04-2025;

  @Prop({ type: 20-04-2025 })
  20-04-2025: 20-04-2025;

  @Prop({ type: 12-04-2025 })
  12-04-2025: 12-04-2025;

  @Prop({ type: 14-05-2025 })
  14-05-2025: 14-05-2025;

  @Prop({ type: 15-05-2025 })
  15-05-2025: 15-05-2025;

  @Prop({ type: 16-07-2025 })
  16-07-2025: 16-07-2025;

  @Prop({ type: 17-07-2025 })
  17-07-2025: 17-07-2025;

  @Prop({ type: 18-07-2025 })
  18-07-2025: 18-07-2025;

  @Prop({ type: 13-04-2025 })
  13-04-2025: 13-04-2025;

  @Prop({ type: 14-04-2025 })
  14-04-2025: 14-04-2025;

  @Prop({ type: 15-04-2025 })
  15-04-2025: 15-04-2025;

  @Prop({ type: 21-04-2025 })
  21-04-2025: 21-04-2025;

  @Prop({ type: 22-04-2025 })
  22-04-2025: 22-04-2025;

  @Prop({ type: 23-04-2025 })
  23-04-2025: 23-04-2025;

  @Prop({ type: 24-04-2025 })
  24-04-2025: 24-04-2025;

  @Prop({ type: 25-04-2025 })
  25-04-2025: 25-04-2025;

  @Prop({ type: 01-05-2025 })
  01-05-2025: 01-05-2025;

  @Prop({ type: 02-05-2025 })
  02-05-2025: 02-05-2025;

  @Prop({ type: 03-05-2025 })
  03-05-2025: 03-05-2025;

  @Prop({ type: 04-05-2025 })
  04-05-2025: 04-05-2025;

  @Prop({ type: 05-05-2025 })
  05-05-2025: 05-05-2025;

  @Prop({ type: 06-05-2025 })
  06-05-2025: 06-05-2025;

  @Prop({ type: 26-04-2025 })
  26-04-2025: 26-04-2025;

  @Prop({ type: 27-04-2025 })
  27-04-2025: 27-04-2025;

  @Prop({ type: 28-04-2025 })
  28-04-2025: 28-04-2025;

  @Prop({ type: 29-04-2025 })
  29-04-2025: 29-04-2025;
}

@Schema()
export class DailySalariesForImssNoInc {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DailySalary {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: DailySalaries })
  dailySalaries: DailySalaries;

  @Prop({ type: DailySalariesWithInc })
  dailySalariesWithInc: DailySalariesWithInc;

  @Prop({ type: DailySalariesForImss })
  dailySalariesForImss: DailySalariesForImss;

  @Prop({ type: DailySalariesForImssNoInc })
  dailySalariesForImssNoInc: DailySalariesForImssNoInc;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class BalanceAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ArrayPercentExists {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Salary {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: BalanceAmount })
  balanceAmount: BalanceAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: ArrayPercentExists })
  arrayPercentExists: ArrayPercentExists;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class DiscountDays {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Result {
  @Prop()
  account: string;

  @Prop()
  comments: string;

  @Prop()
  date: number;

  @Prop()
  factor: number;

  @Prop()
  lastCreditDate: number;

  @Prop()
  name: string;

  @Prop()
  nss: string;

  @Prop()
  sbc: number;

  @Prop()
  sd: number;

  @Prop()
  sdr: number;

  @Prop()
  type: string;

  @Prop()
  diffFactor: boolean;

  @Prop()
  newFactor: number;

  @Prop()
  untilDate: number;
}

@Schema()
export class EmployeeCredit {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Result {
  @Prop()
  formula: string;

  @Prop()
  total: number;

  @Prop()
  fixedQuota: number;

  @Prop()
  daysOfPeriod: number;

  @Prop()
  monthlyAmortization: string;

  @Prop()
  bimonthlyAmortization: string;

  @Prop()
  dailyAmortization: string;

  @Prop()
  creditType: string;

  @Prop()
  creditTotal: number;

  @Prop()
  daysInfonavit: number;

  @Prop()
  creditFactor: number;

  @Prop()
  NFD: number;

  @Prop()
  ensure: number;

  @Prop()
  creditCharged: boolean;

  @Prop()
  operationStart: number;

  @Prop()
  firstDateOFBimonthly: string;

  @Prop()
  thisMonthNumber: number;

  @Prop()
  percent: number;
}

@Schema()
export class Credit {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class InsuranceCollected {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D005C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: DiscountDays })
  discountDays: DiscountDays;

  @Prop({ type: EmployeeCredit })
  employeeCredit: EmployeeCredit;

  @Prop({ type: Credit })
  credit: Credit;

  @Prop({ type: InsuranceCollected })
  insuranceCollected: InsuranceCollected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class FiscalWorkedDays {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalDailySalary {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class GravableIsn {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BalanceAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ArrayPercentExists {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalSalary {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: GravableIsn })
  gravableIsn: GravableIsn;

  @Prop({ type: BalanceAmount })
  balanceAmount: BalanceAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: ArrayPercentExists })
  arrayPercentExists: ArrayPercentExists;
}

@Schema()
export class ExcessPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class UmaLimit {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SbcTotal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class CalculateDay {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ImssDayValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class Excess {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: ExcessPercent })
  excessPercent: ExcessPercent;

  @Prop({ type: UmaLimit })
  umaLimit: UmaLimit;

  @Prop({ type: SbcTotal })
  sbcTotal: SbcTotal;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: CalculateDay })
  calculateDay: CalculateDay;

  @Prop({ type: ImssDayValue })
  imssDayValue: ImssDayValue;
}

@Schema()
export class Data {
  @Prop()
  excess: number;

  @Prop()
  benefits: number;

  @Prop()
  gmp: number;

  @Prop()
  iv: number;

  @Prop()
  cyv: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class CustomEmployeeImss {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Calc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  hidden: boolean;
}

@Schema()
export class ValidationMinimumWage {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Result {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class BalanceAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForRelatives {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Cyv {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ImssResult {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class PeriodCalculation {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class RealAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmountTotal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmountCyv {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class MinimumSbcCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValidationMinimumWageText {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Campo15 {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalRelativesCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialSecurity {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: CustomEmployeeImss })
  customEmployeeImss: CustomEmployeeImss;

  @Prop({ type: Calc })
  calc: Calc;

  @Prop({ type: ValidationMinimumWage })
  validationMinimumWage: ValidationMinimumWage;

  @Prop({ type: Result })
  result: Result;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: BalanceAmount })
  balanceAmount: BalanceAmount;

  @Prop({ type: ForRelatives })
  forRelatives: ForRelatives;

  @Prop({ type: Cyv })
  cyv: Cyv;

  @Prop({ type: ImssResult })
  imssResult: ImssResult;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: PeriodCalculation })
  periodCalculation: PeriodCalculation;

  @Prop({ type: RealAmount })
  realAmount: RealAmount;

  @Prop({ type: RejectedAmountTotal })
  rejectedAmountTotal: RejectedAmountTotal;

  @Prop({ type: RejectedAmountCyv })
  rejectedAmountCyv: RejectedAmountCyv;

  @Prop({ type: MinimumSbcCalc })
  minimumSbcCalc: MinimumSbcCalc;

  @Prop({ type: ValidationMinimumWageText })
  validationMinimumWageText: ValidationMinimumWageText;

  @Prop({ type: Campo15 })
  campo15: Campo15;

  @Prop({ type: NormalRelativesCalc })
  normalRelativesCalc: NormalRelativesCalc;
}

@Schema()
export class BenefitsPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Benefits {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: BenefitsPercent })
  benefitsPercent: BenefitsPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class GmpPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Gmp {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: GmpPercent })
  gmpPercent: GmpPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class UmaLimit {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SbcTotal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IvaPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Iv {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: UmaLimit })
  umaLimit: UmaLimit;

  @Prop({ type: SbcTotal })
  sbcTotal: SbcTotal;

  @Prop({ type: IvaPercent })
  ivaPercent: IvaPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class CyvPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Calc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class Accounting {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ImssResult {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class LastRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;

  @Prop()
  positions: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Cyv {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: CyvPercent })
  cyvPercent: CyvPercent;

  @Prop({ type: Calc })
  calc: Calc;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: Accounting })
  accounting: Accounting;

  @Prop({ type: ImssResult })
  imssResult: ImssResult;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: LastRejected })
  lastRejected: LastRejected;

  @Prop({ type: TotalAmount })
  totalAmount: TotalAmount;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;
}

@Schema()
export class FixedFeePercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BossFixedFee {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FixedFeePercent })
  fixedFeePercent: FixedFeePercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Data {
  @Prop()
  bossFixedFee: number;

  @Prop()
  bossExcess: number;

  @Prop()
  bossBenefits: number;

  @Prop()
  gmpBoss: number;

  @Prop()
  ivBoss: number;

  @Prop()
  bossRiskPrime: number;

  @Prop()
  bossDaycare: number;

  @Prop()
  bossRetirement: number;

  @Prop()
  cyvBoss: number;

  @Prop()
  bossInfonavit: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ForRelative {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ImssResult {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialSecurityBoss {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ForRelative })
  forRelative: ForRelative;

  @Prop({ type: ImssResult })
  imssResult: ImssResult;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class BossExcessPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class Exedente {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BossExcess {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: BossExcessPercent })
  bossExcessPercent: BossExcessPercent;

  @Prop({ type: Exedente })
  exedente: Exedente;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class BossBenefitsPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BossBenefits {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: BossBenefitsPercent })
  bossBenefitsPercent: BossBenefitsPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class GmpBossPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class GmpBoss {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: GmpBossPercent })
  gmpBossPercent: GmpBossPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class IvaPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IvBoss {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: IvaPercent })
  ivaPercent: IvaPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RiskPrimePercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BossRiskPrime {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RiskPrimePercent })
  riskPrimePercent: RiskPrimePercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class DaycarePercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BossDaycare {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: DaycarePercent })
  daycarePercent: DaycarePercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class SbcTotal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class RetirementPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BossRetirement {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: SbcTotal })
  sbcTotal: SbcTotal;

  @Prop({ type: RetirementPercent })
  retirementPercent: RetirementPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class CyvBossPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class CyvBoss {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: CyvBossPercent })
  cyvBossPercent: CyvBossPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class InfonavitPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class BossInfonavit {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: InfonavitPercent })
  infonavitPercent: InfonavitPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class StampedCharge {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P653C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Data {
  @Prop()
  cyv: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class CYV_REPORT {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Data {
  @Prop()
  socialSecurity: number;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IMSS_REPORT {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Data })
  data: Data;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P033C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ServAdmonTotal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class EmployeeServAdmonP {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ServAdmonTotal })
  servAdmonTotal: ServAdmonTotal;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Overtime {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class P008C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: Overtime })
  overtime: Overtime;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class D012C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class PendingVacations {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class PendingPrime {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P654C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P801C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D068C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class CurrentYears {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForCompleteYears {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysPendingForYears {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForPending {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Salary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class CurrentYearsF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForCompleteYearsF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysPendingForYearsF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForPendingF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalDaysF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SalaryF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ForGravableSettlement {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class DaysOfThisYear {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ThisYearInitDate {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ThisYearInitDateF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysOfThisYearF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SeniorityPrime {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: CurrentYears })
  currentYears: CurrentYears;

  @Prop({ type: DaysForCompleteYears })
  daysForCompleteYears: DaysForCompleteYears;

  @Prop({ type: DaysPendingForYears })
  daysPendingForYears: DaysPendingForYears;

  @Prop({ type: DaysForPending })
  daysForPending: DaysForPending;

  @Prop({ type: TotalDays })
  totalDays: TotalDays;

  @Prop({ type: Salary })
  salary: Salary;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: CurrentYearsF })
  currentYearsF: CurrentYearsF;

  @Prop({ type: DaysForCompleteYearsF })
  daysForCompleteYearsF: DaysForCompleteYearsF;

  @Prop({ type: DaysPendingForYearsF })
  daysPendingForYearsF: DaysPendingForYearsF;

  @Prop({ type: DaysForPendingF })
  daysForPendingF: DaysForPendingF;

  @Prop({ type: TotalDaysF })
  totalDaysF: TotalDaysF;

  @Prop({ type: SalaryF })
  salaryF: SalaryF;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: ForGravableSettlement })
  forGravableSettlement: ForGravableSettlement;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: DaysOfThisYear })
  daysOfThisYear: DaysOfThisYear;

  @Prop({ type: ThisYearInitDate })
  thisYearInitDate: ThisYearInitDate;

  @Prop({ type: ThisYearInitDateF })
  thisYearInitDateF: ThisYearInitDateF;

  @Prop({ type: DaysOfThisYearF })
  daysOfThisYearF: DaysOfThisYearF;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ForGravableSettlement {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class CompensationByYearAmmount {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: ForGravableSettlement })
  forGravableSettlement: ForGravableSettlement;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class D060C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D801C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class D016C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Compensation2 {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Vacations {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class P022C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FrecuencyType {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFixed {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Overtime {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Umasn {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LimitByUma {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  positions: string;

  @Prop()
  formatted: string;
}

@Schema()
export class HalfIncome {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ExemptCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P023C_HR {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: FrecuencyType })
  frecuencyType: FrecuencyType;

  @Prop({ type: AvailableFixed })
  availableFixed: AvailableFixed;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: Overtime })
  overtime: Overtime;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: Umasn })
  umasn: Umasn;

  @Prop({ type: LimitByUma })
  limitByUma: LimitByUma;

  @Prop({ type: HalfIncome })
  halfIncome: HalfIncome;

  @Prop({ type: ExemptCalc })
  exemptCalc: ExemptCalc;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class D162C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ForGravableSettlement {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class CompensationAmmount {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: ForGravableSettlement })
  forGravableSettlement: ForGravableSettlement;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Overtime {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FrecuencyType {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Umasn {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class LimitByUma {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class HalfIncome {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ExemptCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class P009C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: Overtime })
  overtime: Overtime;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: FrecuencyType })
  frecuencyType: FrecuencyType;

  @Prop({ type: Umasn })
  umasn: Umasn;

  @Prop({ type: LimitByUma })
  limitByUma: LimitByUma;

  @Prop({ type: HalfIncome })
  halfIncome: HalfIncome;

  @Prop({ type: ExemptCalc })
  exemptCalc: ExemptCalc;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class D010C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class D014C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D603C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D601C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class D250C_IMF {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P070C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class CurrentYearsF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForCompleteYearsF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysPendingForYearsF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DaysForPendingF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalDaysF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SalaryF {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ForGravableSettlement {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SeniorityPrimeAmmount {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: CurrentYearsF })
  currentYearsF: CurrentYearsF;

  @Prop({ type: DaysForCompleteYearsF })
  daysForCompleteYearsF: DaysForCompleteYearsF;

  @Prop({ type: DaysPendingForYearsF })
  daysPendingForYearsF: DaysPendingForYearsF;

  @Prop({ type: DaysForPendingF })
  daysForPendingF: DaysForPendingF;

  @Prop({ type: TotalDaysF })
  totalDaysF: TotalDaysF;

  @Prop({ type: SalaryF })
  salaryF: SalaryF;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: ForGravableSettlement })
  forGravableSettlement: ForGravableSettlement;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class Diaspendientesdepago {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D059C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class Result {
  @Prop()
  totalDays: number;

  @Prop({ type: [any] })
  salaries: any[];
}

@Schema()
export class SalaryObj {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SalaryByConcepts {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];
}

@Schema()
export class TotalSalary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalFiscalSalary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SalaryPercents {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: SalaryObj })
  salaryObj: SalaryObj;

  @Prop({ type: SalaryByConcepts })
  salaryByConcepts: SalaryByConcepts;

  @Prop({ type: TotalSalary })
  totalSalary: TotalSalary;

  @Prop({ type: TotalFiscalSalary })
  totalFiscalSalary: TotalFiscalSalary;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class DispersionExempt {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class LastVoucher {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class MonthlyVoucher {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class LimitForImss {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ExemptImss {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Umas {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class Limit {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class EXEMPT {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class P1505IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop({ type: DispersionExempt })
  dispersionExempt: DispersionExempt;

  @Prop({ type: LastVoucher })
  lastVoucher: LastVoucher;

  @Prop({ type: MonthlyVoucher })
  monthlyVoucher: MonthlyVoucher;

  @Prop({ type: LimitForImss })
  limitForImss: LimitForImss;

  @Prop({ type: ExemptImss })
  exemptImss: ExemptImss;

  @Prop({ type: Umas })
  umas: Umas;

  @Prop({ type: Limit })
  limit: Limit;

  @Prop({ type: EXEMPT })
  EXEMPT: EXEMPT;
}

@Schema()
export class PeriodDays {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForRelatives {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ForSubtotal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class LifeEnsureIntegratio {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: PeriodDays })
  periodDays: PeriodDays;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: ForRelatives })
  forRelatives: ForRelatives;

  @Prop({ type: ForSubtotal })
  forSubtotal: ForSubtotal;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Result {
  @Prop()
  real: number;

  @Prop()
  fiscal: number;

  @Prop()
  totalDays: number;
}

@Schema()
export class TotalPayment {
  @Prop({ type: Result })
  result: Result;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IncapacitySubsidy {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: TotalPayment })
  totalPayment: TotalPayment;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D061C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TDSD001 {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: any;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: any;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: any;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D671C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class EarlyVacations {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D671C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class DiscountPercent {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  fields: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  positions: string;
}

@Schema()
export class DiscountWdFraction {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: DiscountPercent })
  discountPercent: DiscountPercent;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IvaRetainedF {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P6176_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P6177_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P1315_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class D2120_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ForGravableSettlement {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Gratification {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: ForGravableSettlement })
  forGravableSettlement: ForGravableSettlement;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NonPaidInc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P2275_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: NonPaidInc })
  nonPaidInc: NonPaidInc;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class NotCashAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class CashPayment {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: NotCashAmount })
  notCashAmount: NotCashAmount;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P081C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FoodCompensation {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P667C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class BaseSalary {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D608C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: BaseSalary })
  baseSalary: BaseSalary;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class NoSalaryPerm {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class D013C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D3398_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class D2125_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P1356_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class CompensationByYearAmmountP {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class P007C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class PaymentVoucher {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P818C_AU {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P819C_AU {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Voucher {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class DiscountVoucher {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P021C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P858C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P813C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class D015C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P023C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class WorkerTaxes {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: TotalAmount })
  totalAmount: TotalAmount;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D5032_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class BirthdayValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Birthday {
  @Prop()
  result: string;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsBirthday {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  formatted: boolean;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P854C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: BirthdayValue })
  birthdayValue: BirthdayValue;

  @Prop({ type: Birthday })
  birthday: Birthday;

  @Prop({ type: IsBirthday })
  isBirthday: IsBirthday;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D805C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P1260_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P1347IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class V016C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P855C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P856C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class D830C_DI {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D3298_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class D051C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P865C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IgnoreGravable {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class Overtime {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P008C_HR {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: IgnoreGravable })
  ignoreGravable: IgnoreGravable;

  @Prop({ type: Overtime })
  overtime: Overtime;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P022C_HR {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnExempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P872C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: IsnExempt })
  isnExempt: IsnExempt;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AnualIsr {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ServAdmonTotal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class EmployeeServAdmonF {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ServAdmonTotal })
  servAdmonTotal: ServAdmonTotal;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D829C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P027C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P026C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class Exempt {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class Gravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class IsnGravable {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class P433_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: Exempt })
  exempt: Exempt;

  @Prop({ type: Gravable })
  gravable: Gravable;

  @Prop({ type: IsnGravable })
  isnGravable: IsnGravable;

  @Prop()
  order: number;

  @Prop()
  showBottomEyes: boolean;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceFiscal {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class FiscalValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  ilb: boolean;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class FiscalValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class FiscalValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionCalc {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class NeedToBalanceSocialPrevision {
  @Prop()
  result: boolean;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: boolean;
}

@Schema()
export class SocialPrevisionValue {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: string;
}

@Schema()
export class SocialPrevisionValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class SocialPrevisionValueRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class RejectedAmount {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class D844C_IM {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop({ type: FiscalCalc })
  fiscalCalc: FiscalCalc;

  @Prop({ type: NeedToBalanceFiscal })
  needToBalanceFiscal: NeedToBalanceFiscal;

  @Prop({ type: FiscalValue })
  fiscalValue: FiscalValue;

  @Prop({ type: FiscalValueNoRejected })
  fiscalValueNoRejected: FiscalValueNoRejected;

  @Prop({ type: FiscalValueRejected })
  fiscalValueRejected: FiscalValueRejected;

  @Prop({ type: SocialPrevisionCalc })
  socialPrevisionCalc: SocialPrevisionCalc;

  @Prop({ type: NeedToBalanceSocialPrevision })
  needToBalanceSocialPrevision: NeedToBalanceSocialPrevision;

  @Prop({ type: SocialPrevisionValue })
  socialPrevisionValue: SocialPrevisionValue;

  @Prop({ type: SocialPrevisionValueNoRejected })
  socialPrevisionValueNoRejected: SocialPrevisionValueNoRejected;

  @Prop({ type: SocialPrevisionValueRejected })
  socialPrevisionValueRejected: SocialPrevisionValueRejected;

  @Prop({ type: RejectedAmount })
  rejectedAmount: RejectedAmount;

  @Prop()
  order: number;
}

@Schema()
export class RejectedIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class FastIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class TotalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;
}

@Schema()
export class NormalIncidences {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class AvailableFast {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Incidences {
  @Prop({ type: [any] })
  result: any[];

  @Prop()
  name: string;

  @Prop({ type: [any] })
  fields: any[];

  @Prop()
  accumulator: string;
}

@Schema()
export class ValueNormal {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class Value {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  formatted: string;

  @Prop()
  accumulator: boolean;
}

@Schema()
export class ValueNoRejected {
  @Prop()
  result: number;

  @Prop()
  name: string;

  @Prop()
  hidden: boolean;

  @Prop()
  formatted: string;
}

@Schema()
export class D016C_DI3 {
  @Prop()
  name: string;

  @Prop()
  conceptId: string;

  @Prop({ type: RejectedIncidences })
  rejectedIncidences: RejectedIncidences;

  @Prop({ type: FastIncidences })
  fastIncidences: FastIncidences;

  @Prop({ type: TotalIncidences })
  totalIncidences: TotalIncidences;

  @Prop({ type: NormalIncidences })
  normalIncidences: NormalIncidences;

  @Prop({ type: AvailableFast })
  availableFast: AvailableFast;

  @Prop({ type: Incidences })
  incidences: Incidences;

  @Prop({ type: ValueNormal })
  valueNormal: ValueNormal;

  @Prop({ type: Value })
  value: Value;

  @Prop({ type: ValueNoRejected })
  valueNoRejected: ValueNoRejected;

  @Prop()
  order: number;
}

@Schema()
export class Calculations {
  @Prop({ type: InitEmployeeDate })
  initEmployeeDate: InitEmployeeDate;

  @Prop({ type: ChristmasBonus_settlement })
  christmasBonus_settlement: ChristmasBonus_settlement;

  @Prop({ type: Perceptions })
  perceptions: Perceptions;

  @Prop({ type: FiscalPerceptions })
  fiscalPerceptions: FiscalPerceptions;

  @Prop({ type: GravableBase })
  gravableBase: GravableBase;

  @Prop({ type: IsnBase })
  isnBase: IsnBase;

  @Prop({ type: Holidays_settlement })
  holidays_settlement: Holidays_settlement;

  @Prop({ type: HolidaysPrime_settlement })
  holidaysPrime_settlement: HolidaysPrime_settlement;

  @Prop({ type: FiscalAdjusment })
  fiscalAdjusment: FiscalAdjusment;

  @Prop({ type: Deductions })
  deductions: Deductions;

  @Prop({ type: RealTotal })
  realTotal: RealTotal;

  @Prop({ type: MensualizationFactor })
  mensualizationFactor: MensualizationFactor;

  @Prop({ type: DismissPayments })
  dismissPayments: DismissPayments;

  @Prop({ type: Overtime })
  overtime: Overtime;

  @Prop({ type: Subsidy })
  subsidy: Subsidy;

  @Prop({ type: SubsidyAdjustment })
  subsidyAdjustment: SubsidyAdjustment;

  @Prop({ type: FiscalDeductions })
  fiscalDeductions: FiscalDeductions;

  @Prop({ type: ForFiscalAdjusment })
  forFiscalAdjusment: ForFiscalAdjusment;

  @Prop({ type: IsrAdjustment })
  isrAdjustment: IsrAdjustment;

  @Prop({ type: PayrollSubtotalF })
  payrollSubtotalF: PayrollSubtotalF;

  @Prop({ type: Isr })
  isr: Isr;

  @Prop({ type: Relatives })
  relatives: Relatives;

  @Prop({ type: IsrSettlement })
  isrSettlement: IsrSettlement;

  @Prop({ type: FiscalTotal })
  fiscalTotal: FiscalTotal;

  @Prop({ type: Isn })
  isn: Isn;

  @Prop({ type: AdminServiceF })
  adminServiceF: AdminServiceF;

  @Prop({ type: IvaF })
  ivaF: IvaF;

  @Prop({ type: TotalBillF })
  totalBillF: TotalBillF;

  @Prop({ type: D075C_IM })
  D075C_IM: D075C_IM;

  @Prop({ type: D250C_IM })
  D250C_IM: D250C_IM;

  @Prop({ type: Compensation })
  compensation: Compensation;

  @Prop({ type: SocialPrevisionPerceptions })
  socialPrevisionPerceptions: SocialPrevisionPerceptions;

  @Prop({ type: EmployeePromotionTax })
  employeePromotionTax: EmployeePromotionTax;

  @Prop({ type: OtherCharges })
  otherCharges: OtherCharges;

  @Prop({ type: SocialPrevisionSalary })
  socialPrevisionSalary: SocialPrevisionSalary;

  @Prop({ type: PayrollSubtotalP })
  payrollSubtotalP: PayrollSubtotalP;

  @Prop({ type: SocialPrevisionDeductions })
  socialPrevisionDeductions: SocialPrevisionDeductions;

  @Prop({ type: SocialPrevisionTotal })
  socialPrevisionTotal: SocialPrevisionTotal;

  @Prop({ type: AdminServiceP })
  adminServiceP: AdminServiceP;

  @Prop({ type: IvaP })
  ivaP: IvaP;

  @Prop({ type: TotalBillP })
  totalBillP: TotalBillP;

  @Prop({ type: Incapacities })
  incapacities: Incapacities;

  @Prop({ type: Absences })
  absences: Absences;

  @Prop({ type: WorkedDays })
  workedDays: WorkedDays;

  @Prop({ type: DailySalary })
  dailySalary: DailySalary;

  @Prop({ type: Salary })
  salary: Salary;

  @Prop({ type: D005C_IM })
  D005C_IM: D005C_IM;

  @Prop({ type: FiscalWorkedDays })
  fiscalWorkedDays: FiscalWorkedDays;

  @Prop({ type: FiscalDailySalary })
  fiscalDailySalary: FiscalDailySalary;

  @Prop({ type: FiscalSalary })
  fiscalSalary: FiscalSalary;

  @Prop({ type: Excess })
  excess: Excess;

  @Prop({ type: SocialSecurity })
  socialSecurity: SocialSecurity;

  @Prop({ type: Benefits })
  benefits: Benefits;

  @Prop({ type: Gmp })
  gmp: Gmp;

  @Prop({ type: Iv })
  iv: Iv;

  @Prop({ type: Cyv })
  cyv: Cyv;

  @Prop({ type: BossFixedFee })
  bossFixedFee: BossFixedFee;

  @Prop({ type: SocialSecurityBoss })
  socialSecurityBoss: SocialSecurityBoss;

  @Prop({ type: BossExcess })
  bossExcess: BossExcess;

  @Prop({ type: BossBenefits })
  bossBenefits: BossBenefits;

  @Prop({ type: GmpBoss })
  gmpBoss: GmpBoss;

  @Prop({ type: IvBoss })
  ivBoss: IvBoss;

  @Prop({ type: BossRiskPrime })
  bossRiskPrime: BossRiskPrime;

  @Prop({ type: BossDaycare })
  bossDaycare: BossDaycare;

  @Prop({ type: BossRetirement })
  bossRetirement: BossRetirement;

  @Prop({ type: CyvBoss })
  cyvBoss: CyvBoss;

  @Prop({ type: BossInfonavit })
  bossInfonavit: BossInfonavit;

  @Prop({ type: StampedCharge })
  stampedCharge: StampedCharge;

  @Prop({ type: P653C_IM })
  P653C_IM: P653C_IM;

  @Prop({ type: CYV_REPORT })
  CYV_REPORT: CYV_REPORT;

  @Prop({ type: IMSS_REPORT })
  IMSS_REPORT: IMSS_REPORT;

  @Prop({ type: P033C_IM })
  P033C_IM: P033C_IM;

  @Prop({ type: EmployeeServAdmonP })
  employeeServAdmonP: EmployeeServAdmonP;

  @Prop({ type: P008C_DI })
  P008C_DI: P008C_DI;

  @Prop({ type: D012C_DI })
  D012C_DI: D012C_DI;

  @Prop({ type: PendingVacations })
  pendingVacations: PendingVacations;

  @Prop({ type: PendingPrime })
  pendingPrime: PendingPrime;

  @Prop({ type: P654C_DI })
  P654C_DI: P654C_DI;

  @Prop({ type: P801C_IM })
  P801C_IM: P801C_IM;

  @Prop({ type: D068C_IM })
  D068C_IM: D068C_IM;

  @Prop({ type: SeniorityPrime })
  seniorityPrime: SeniorityPrime;

  @Prop({ type: CompensationByYearAmmount })
  compensationByYearAmmount: CompensationByYearAmmount;

  @Prop({ type: D060C_IM })
  D060C_IM: D060C_IM;

  @Prop({ type: D801C_IM })
  D801C_IM: D801C_IM;

  @Prop({ type: D016C_DI })
  D016C_DI: D016C_DI;

  @Prop({ type: Compensation2 })
  compensation2: Compensation2;

  @Prop({ type: Vacations })
  vacations: Vacations;

  @Prop({ type: P022C_DI })
  P022C_DI: P022C_DI;

  @Prop({ type: P023C_HR })
  P023C_HR: P023C_HR;

  @Prop({ type: D162C_IM })
  D162C_IM: D162C_IM;

  @Prop({ type: CompensationAmmount })
  compensationAmmount: CompensationAmmount;

  @Prop({ type: P009C_DI })
  P009C_DI: P009C_DI;

  @Prop({ type: D010C_IM })
  D010C_IM: D010C_IM;

  @Prop({ type: D014C_DI })
  D014C_DI: D014C_DI;

  @Prop({ type: D603C_IM })
  D603C_IM: D603C_IM;

  @Prop({ type: D601C_IM })
  D601C_IM: D601C_IM;

  @Prop({ type: D250C_IMF })
  D250C_IMF: D250C_IMF;

  @Prop({ type: P070C_IM })
  P070C_IM: P070C_IM;

  @Prop({ type: SeniorityPrimeAmmount })
  seniorityPrimeAmmount: SeniorityPrimeAmmount;

  @Prop({ type: Diaspendientesdepago })
  diaspendientesdepago: Diaspendientesdepago;

  @Prop({ type: D059C_IM })
  D059C_IM: D059C_IM;

  @Prop({ type: SalaryPercents })
  salaryPercents: SalaryPercents;

  @Prop({ type: P1505IM })
  P1505IM: P1505IM;

  @Prop({ type: LifeEnsureIntegratio })
  lifeEnsureIntegratio: LifeEnsureIntegratio;

  @Prop({ type: IncapacitySubsidy })
  incapacitySubsidy: IncapacitySubsidy;

  @Prop({ type: D061C_IM })
  D061C_IM: D061C_IM;

  @Prop({ type: TDSD001 })
  TDSD001: TDSD001;

  @Prop({ type: D671C_DI })
  D671C_DI: D671C_DI;

  @Prop({ type: EarlyVacations })
  earlyVacations: EarlyVacations;

  @Prop({ type: D671C_IM })
  D671C_IM: D671C_IM;

  @Prop({ type: DiscountWdFraction })
  discountWdFraction: DiscountWdFraction;

  @Prop({ type: IvaRetainedF })
  ivaRetainedF: IvaRetainedF;

  @Prop({ type: P6176_IM })
  P6176_IM: P6176_IM;

  @Prop({ type: P6177_IM })
  P6177_IM: P6177_IM;

  @Prop({ type: P1315_IM })
  P1315_IM: P1315_IM;

  @Prop({ type: D2120_DI })
  D2120_DI: D2120_DI;

  @Prop({ type: Gratification })
  gratification: Gratification;

  @Prop({ type: P2275_IM })
  P2275_IM: P2275_IM;

  @Prop({ type: CashPayment })
  cashPayment: CashPayment;

  @Prop({ type: P081C_IM })
  P081C_IM: P081C_IM;

  @Prop({ type: FoodCompensation })
  foodCompensation: FoodCompensation;

  @Prop({ type: P667C_IM })
  P667C_IM: P667C_IM;

  @Prop({ type: D608C_IM })
  D608C_IM: D608C_IM;

  @Prop({ type: NoSalaryPerm })
  noSalaryPerm: NoSalaryPerm;

  @Prop({ type: D013C_DI })
  D013C_DI: D013C_DI;

  @Prop({ type: D3398_IM })
  D3398_IM: D3398_IM;

  @Prop({ type: D2125_DI })
  D2125_DI: D2125_DI;

  @Prop({ type: P1356_IM })
  P1356_IM: P1356_IM;

  @Prop({ type: CompensationByYearAmmountP })
  compensationByYearAmmountP: CompensationByYearAmmountP;

  @Prop({ type: P007C_DI })
  P007C_DI: P007C_DI;

  @Prop({ type: PaymentVoucher })
  paymentVoucher: PaymentVoucher;

  @Prop({ type: P818C_AU })
  P818C_AU: P818C_AU;

  @Prop({ type: P819C_AU })
  P819C_AU: P819C_AU;

  @Prop({ type: Voucher })
  voucher: Voucher;

  @Prop({ type: DiscountVoucher })
  discountVoucher: DiscountVoucher;

  @Prop({ type: P021C_DI })
  P021C_DI: P021C_DI;

  @Prop({ type: P858C_IM })
  P858C_IM: P858C_IM;

  @Prop({ type: P813C_IM })
  P813C_IM: P813C_IM;

  @Prop({ type: D015C_DI })
  D015C_DI: D015C_DI;

  @Prop({ type: P023C_IM })
  P023C_IM: P023C_IM;

  @Prop({ type: WorkerTaxes })
  workerTaxes: WorkerTaxes;

  @Prop({ type: D5032_IM })
  D5032_IM: D5032_IM;

  @Prop({ type: P854C_IM })
  P854C_IM: P854C_IM;

  @Prop({ type: D805C_IM })
  D805C_IM: D805C_IM;

  @Prop({ type: P1260_IM })
  P1260_IM: P1260_IM;

  @Prop({ type: P1347IM })
  P1347IM: P1347IM;

  @Prop({ type: V016C_DI })
  V016C_DI: V016C_DI;

  @Prop({ type: P855C_IM })
  P855C_IM: P855C_IM;

  @Prop({ type: P856C_IM })
  P856C_IM: P856C_IM;

  @Prop({ type: D830C_DI })
  D830C_DI: D830C_DI;

  @Prop({ type: D3298_IM })
  D3298_IM: D3298_IM;

  @Prop({ type: D051C_IM })
  D051C_IM: D051C_IM;

  @Prop({ type: P865C_IM })
  P865C_IM: P865C_IM;

  @Prop({ type: P008C_HR })
  P008C_HR: P008C_HR;

  @Prop({ type: P022C_HR })
  P022C_HR: P022C_HR;

  @Prop({ type: P872C_IM })
  P872C_IM: P872C_IM;

  @Prop({ type: AnualIsr })
  anualIsr: AnualIsr;

  @Prop({ type: EmployeeServAdmonF })
  employeeServAdmonF: EmployeeServAdmonF;

  @Prop({ type: D829C_IM })
  D829C_IM: D829C_IM;

  @Prop({ type: P027C_IM })
  P027C_IM: P027C_IM;

  @Prop({ type: P026C_IM })
  P026C_IM: P026C_IM;

  @Prop({ type: P433_IM })
  P433_IM: P433_IM;

  @Prop({ type: D844C_IM })
  D844C_IM: D844C_IM;

  @Prop({ type: D016C_DI3 })
  D016C_DI3: D016C_DI3;
}

@Schema()
export class User {
  @Prop()
  email: string;

  @Prop()
  name: string;

  @Prop()
  phone: string;

  @Prop()
  address: string;
}

@Schema()
export class SettlementCalculation {
  @Prop({ type: Calculations })
  calculations: Calculations;

  @Prop()
  employee: string;

  @Prop()
  operationId: string;

  @Prop()
  created: string;

  @Prop({ type: User })
  user: User;

  @Prop()
  uid: string;

  @Prop()
  center: string;
}
export type SettlementCalculationDocument = SettlementCalculation & Document;
export const SettlementCalculationSchema = SchemaFactory.createForClass(SettlementCalculation);